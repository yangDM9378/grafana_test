{"version":3,"file":"SendResetMailPage.17093c2adee82cc05e64.js","mappings":"+SAYA,MAAMA,EAAmBC,GAAyBC,EAAAA,GAAI;WAC3CD,EAAME,OAAOC,KAAKC;eACdJ,EAAMK,WAAWC,UAAUC;iBACzBP,EAAMK,WAAWG;gBAClBR,EAAMS,QAAQ;;EAIjBC,EAAoB,KAAM,QACrC,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GACrCC,GAASC,EAAAA,EAAAA,IAAWhB,GACpBiB,EAAa,GAAEC,EAAAA,GAAAA,kBASrB,OAAIN,GAEA,kCACE,0HAAoG,OACpG,SAAC,KAAS,CAACO,OAAO,SAClB,SAAC,KAAU,CAACC,QAAQ,UAAUC,KAAMJ,EAAU,+BAOlD,SAACK,EAAA,EAAI,CAACC,SAnBUC,gBACEC,EAAAA,EAAAA,KAAgBC,KAAK,sCAAuCC,IAE5Ed,GAAa,EACf,EAe0B,SACvB,cAAC,SAAEe,EAAQ,OAAEC,GAAQ,SACpB,uCACE,SAACC,EAAA,EAAM,+BACP,SAACC,EAAA,EAAK,CACJC,MAAM,OACNC,YAAY,yDACZC,UAAWL,EAAOM,YAClBC,MAAOP,SAAmB,QAAb,EAANA,EAAQM,mBAAW,WAAb,EAAN,EAAqBE,QAAQ,UAEpC,SAACC,EAAAC,EAAK,eACJC,GAAG,aACHC,YAAY,qBACRb,EAAS,cAAe,CAAEc,SAAU,sCAEpC,OACR,UAAC,KAAe,kBACd,SAACC,EAAA,GAAM,CAACC,KAAK,SAAQ,gCACrB,SAAC,KAAU,CAACC,KAAK,OAAOxB,KAAMJ,EAAU,+BAGxB,OAElB,cAAG6B,UAAW/B,EAAO,2FACpB,GAEA,E,MChEJ,MAAMgC,EAAoB,IAAM,IAAN,GAC/B,SAACC,EAAA,GAAW,WACV,SAAC,KAAQ,WACP,SAACrC,EAAiB,SAKxB,G","sources":["webpack://grafana/./public/app/core/components/ForgottenPassword/ForgottenPassword.tsx","webpack://grafana/./public/app/core/components/ForgottenPassword/SendResetMailPage.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Form, Field, Input, Button, Legend, Container, useStyles2, HorizontalGroup, LinkButton } from '@grafana/ui';\nimport config from 'app/core/config';\n\ninterface EmailDTO {\n  userOrEmail: string;\n}\n\nconst paragraphStyles = (theme: GrafanaTheme2) => css`\n  color: ${theme.colors.text.secondary};\n  font-size: ${theme.typography.bodySmall.fontSize};\n  font-weight: ${theme.typography.fontWeightRegular};\n  margin-top: ${theme.spacing(1)};\n  display: block;\n`;\n\nexport const ForgottenPassword = () => {\n  const [emailSent, setEmailSent] = useState(false);\n  const styles = useStyles2(paragraphStyles);\n  const loginHref = `${config.appSubUrl}/login`;\n\n  const sendEmail = async (formModel: EmailDTO) => {\n    const res = await getBackendSrv().post('/api/user/password/send-reset-email', formModel);\n    if (res) {\n      setEmailSent(true);\n    }\n  };\n\n  if (emailSent) {\n    return (\n      <div>\n        <p>An email with a reset link has been sent to the email address. You should receive it shortly.</p>\n        <Container margin=\"md\" />\n        <LinkButton variant=\"primary\" href={loginHref}>\n          Back to login\n        </LinkButton>\n      </div>\n    );\n  }\n  return (\n    <Form onSubmit={sendEmail}>\n      {({ register, errors }) => (\n        <>\n          <Legend>Reset password</Legend>\n          <Field\n            label=\"User\"\n            description=\"Enter your information to get a reset link sent to you\"\n            invalid={!!errors.userOrEmail}\n            error={errors?.userOrEmail?.message}\n          >\n            <Input\n              id=\"user-input\"\n              placeholder=\"Email or username\"\n              {...register('userOrEmail', { required: 'Email or username is required' })}\n            />\n          </Field>\n          <HorizontalGroup>\n            <Button type=\"submit\">Send reset email</Button>\n            <LinkButton fill=\"text\" href={loginHref}>\n              Back to login\n            </LinkButton>\n          </HorizontalGroup>\n\n          <p className={styles}>Did you forget your username or email? Contact your Grafana administrator.</p>\n        </>\n      )}\n    </Form>\n  );\n};\n","import React from 'react';\n\nimport { LoginLayout, InnerBox } from '../Login/LoginLayout';\n\nimport { ForgottenPassword } from './ForgottenPassword';\n\nexport const SendResetMailPage = () => (\n  <LoginLayout>\n    <InnerBox>\n      <ForgottenPassword />\n    </InnerBox>\n  </LoginLayout>\n);\n\nexport default SendResetMailPage;\n"],"names":["paragraphStyles","theme","css","colors","text","secondary","typography","bodySmall","fontSize","fontWeightRegular","spacing","ForgottenPassword","emailSent","setEmailSent","useState","styles","useStyles2","loginHref","config","margin","variant","href","Form","onSubmit","async","getBackendSrv","post","formModel","register","errors","Legend","Field","label","description","invalid","userOrEmail","error","message","Input","I","id","placeholder","required","Button","type","fill","className","SendResetMailPage","LoginLayout"],"sourceRoot":""}