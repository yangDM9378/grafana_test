{"version":3,"file":"graphPlugin.1dc7caae8e078d244ece.js","mappings":"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","sources":["webpack://grafana/./public/app/angular/AngularLocationWrapper.ts","webpack://grafana/./public/app/angular/panel/metrics_panel_ctrl.ts","webpack://grafana/./public/app/angular/panel/panel_ctrl.ts","webpack://grafana/./public/app/features/alerting/state/ThresholdMapper.ts","webpack://grafana/./public/app/features/dashboard/utils/loadSnapshotData.ts","webpack://grafana/./public/app/features/panel/panellinks/linkSuppliers.ts","webpack://grafana/./public/app/plugins/panel/graph/data_processor.ts","webpack://grafana/./public/app/plugins/panel/graph/jquery.flot.events.ts","webpack://grafana/./public/app/plugins/panel/graph/Legend/LegendSeriesItem.tsx","webpack://grafana/./public/app/plugins/panel/graph/Legend/Legend.tsx","webpack://grafana/./public/app/plugins/panel/graph/align_yaxes.ts","webpack://grafana/./public/app/plugins/panel/graph/event_manager.ts","webpack://grafana/./public/app/plugins/panel/graph/graph_tooltip.ts","webpack://grafana/./public/app/plugins/panel/graph/histogram.ts","webpack://grafana/./public/app/plugins/panel/graph/threshold_manager.ts","webpack://grafana/./public/app/core/utils/timeRegions.ts","webpack://grafana/./public/app/plugins/panel/graph/time_region_manager.ts","webpack://grafana/./public/app/plugins/panel/graph/graph.ts","webpack://grafana/./public/app/plugins/panel/graph/utils.ts","webpack://grafana/./public/app/plugins/panel/graph/series_overrides_ctrl.ts","webpack://grafana/./public/app/plugins/panel/graph/thresholds_form.ts","webpack://grafana/./public/app/plugins/panel/graph/time_regions_form.ts","webpack://grafana/./public/app/plugins/panel/graph/annotation_tooltip.ts","webpack://grafana/./public/app/plugins/panel/graph/event_editor.ts","webpack://grafana/./public/app/plugins/panel/graph/GraphContextMenuCtrl.ts","webpack://grafana/./public/app/plugins/panel/graph/axes_editor.ts","webpack://grafana/./public/app/plugins/panel/graph/module.ts","webpack://grafana/./public/app/plugins/panel/graph/template.ts","webpack://grafana/./public/app/plugins/panel/graph/GraphMigrations.ts"],"sourcesContent":["import { deprecationWarning, urlUtil } from '@grafana/data';\nimport { locationSearchToObject, locationService, navigationLogger } from '@grafana/runtime';\n\n// Ref: https://github.com/angular/angular.js/blob/ae8e903edf88a83fedd116ae02c0628bf72b150c/src/ng/location.js#L5\nconst DEFAULT_PORTS: Record<string, number> = { http: 80, https: 443, ftp: 21 };\n\nexport class AngularLocationWrapper {\n  constructor() {\n    this.absUrl = this.wrapInDeprecationWarning(this.absUrl);\n    this.hash = this.wrapInDeprecationWarning(this.hash);\n    this.host = this.wrapInDeprecationWarning(this.host);\n    this.path = this.wrapInDeprecationWarning(this.path);\n    this.port = this.wrapInDeprecationWarning(this.port, 'window.location');\n    this.protocol = this.wrapInDeprecationWarning(this.protocol, 'window.location');\n    this.replace = this.wrapInDeprecationWarning(this.replace);\n    this.search = this.wrapInDeprecationWarning(this.search);\n    this.state = this.wrapInDeprecationWarning(this.state);\n    this.url = this.wrapInDeprecationWarning(this.url);\n  }\n\n  wrapInDeprecationWarning(fn: Function, replacement?: string) {\n    let self = this;\n\n    return function wrapper() {\n      deprecationWarning('$location', fn.name, replacement || 'locationService');\n      return fn.apply(self, arguments);\n    };\n  }\n\n  absUrl(): string {\n    return `${window.location.origin}${this.url()}`;\n  }\n\n  hash(newHash?: string | null) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: hash');\n\n    if (!newHash) {\n      return locationService.getLocation().hash.slice(1);\n    } else {\n      throw new Error('AngularLocationWrapper method not implemented.');\n    }\n  }\n\n  host(): string {\n    return new URL(window.location.href).hostname;\n  }\n\n  path(pathname?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: path');\n\n    const location = locationService.getLocation();\n\n    if (pathname !== undefined && pathname !== null) {\n      let parsedPath = String(pathname);\n      parsedPath = parsedPath.startsWith('/') ? parsedPath : `/${parsedPath}`;\n      const url = new URL(`${window.location.origin}${parsedPath}`);\n\n      locationService.push({\n        pathname: url.pathname,\n        search: url.search.length > 0 ? url.search : location.search,\n        hash: url.hash.length > 0 ? url.hash : location.hash,\n      });\n      return this;\n    }\n\n    if (pathname === null) {\n      locationService.push('/');\n      return this;\n    }\n\n    return location.pathname;\n  }\n\n  port(): number | null {\n    const url = new URL(window.location.href);\n    return parseInt(url.port, 10) || DEFAULT_PORTS[url.protocol] || null;\n  }\n\n  protocol(): string {\n    return new URL(window.location.href).protocol.slice(0, -1);\n  }\n\n  replace() {\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  search(search?: any, paramValue?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: search');\n    if (!search) {\n      return locationService.getSearchObject();\n    }\n\n    if (search && arguments.length > 1) {\n      locationService.partial({\n        [search]: paramValue,\n      });\n\n      return this;\n    }\n\n    if (search) {\n      let newQuery;\n\n      if (typeof search === 'object') {\n        newQuery = { ...search };\n      } else {\n        newQuery = locationSearchToObject(search);\n      }\n\n      for (const key of Object.keys(newQuery)) {\n        // removing params with null | undefined\n        if (newQuery[key] === null || newQuery[key] === undefined) {\n          delete newQuery[key];\n        }\n      }\n\n      const updatedUrl = urlUtil.renderUrl(locationService.getLocation().pathname, newQuery);\n      locationService.push(updatedUrl);\n    }\n\n    return this;\n  }\n\n  state(state?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: state');\n    throw new Error('AngularLocationWrapper method not implemented.');\n  }\n\n  url(newUrl?: any) {\n    navigationLogger('AngularLocationWrapper', false, 'Angular compat layer: url');\n\n    if (newUrl !== undefined) {\n      if (newUrl.startsWith('#')) {\n        locationService.push({ ...locationService.getLocation(), hash: newUrl });\n      } else if (newUrl.startsWith('?')) {\n        locationService.push({ ...locationService.getLocation(), search: newUrl });\n      } else if (newUrl.trim().length === 0) {\n        locationService.push('/');\n      } else {\n        locationService.push(newUrl);\n      }\n\n      return locationService;\n    }\n\n    const location = locationService.getLocation();\n    return `${location.pathname}${location.search}${location.hash}`;\n  }\n}\n","import { isArray } from 'lodash';\nimport { Unsubscribable } from 'rxjs';\n\nimport {\n  DataFrame,\n  DataQueryResponse,\n  DataSourceApi,\n  LegacyResponseData,\n  LoadingState,\n  PanelData,\n  PanelEvents,\n  TimeRange,\n  toDataFrameDTO,\n  toLegacyResponseData,\n} from '@grafana/data';\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { PanelModel } from 'app/features/dashboard/state';\nimport { applyPanelTimeOverrides } from 'app/features/dashboard/utils/panel';\n\nimport { PanelQueryRunner } from '../../features/query/state/PanelQueryRunner';\n\nclass MetricsPanelCtrl extends PanelCtrl {\n  declare datasource: DataSourceApi;\n  declare range: TimeRange;\n\n  contextSrv: ContextSrv;\n  datasourceSrv: any;\n  timeSrv: any;\n  templateSrv: any;\n  interval: any;\n  intervalMs: any;\n  resolution: any;\n  timeInfo?: string;\n  skipDataOnInit = false;\n  dataList: LegacyResponseData[] = [];\n  querySubscription?: Unsubscribable | null;\n  useDataFrames = false;\n  panelData?: PanelData;\n\n  constructor($scope: any, $injector: any) {\n    super($scope, $injector);\n\n    this.contextSrv = $injector.get('contextSrv');\n    this.datasourceSrv = $injector.get('datasourceSrv');\n    this.timeSrv = $injector.get('timeSrv');\n    this.templateSrv = $injector.get('templateSrv');\n    this.panel.datasource = this.panel.datasource || null;\n\n    this.events.on(PanelEvents.refresh, this.onMetricsPanelRefresh.bind(this));\n    this.events.on(PanelEvents.panelTeardown, this.onPanelTearDown.bind(this));\n    this.events.on(PanelEvents.componentDidMount, this.onMetricsPanelMounted.bind(this));\n  }\n\n  private onMetricsPanelMounted() {\n    const queryRunner = this.panel.getQueryRunner() as PanelQueryRunner;\n    this.querySubscription = queryRunner\n      .getData({ withTransforms: true, withFieldConfig: true })\n      .subscribe(this.panelDataObserver);\n  }\n\n  private onPanelTearDown() {\n    if (this.querySubscription) {\n      this.querySubscription.unsubscribe();\n      this.querySubscription = null;\n    }\n  }\n\n  private onMetricsPanelRefresh() {\n    // ignore fetching data if another panel is in fullscreen\n    if (this.otherPanelInFullscreenMode()) {\n      return;\n    }\n\n    // if we have snapshot data use that\n    if (this.panel.snapshotData) {\n      this.updateTimeRange();\n      let data = this.panel.snapshotData;\n      // backward compatibility\n      if (!isArray(data)) {\n        data = data.data;\n      }\n\n      this.panelData = {\n        state: LoadingState.Done,\n        series: data,\n        timeRange: this.range,\n      };\n\n      // Defer panel rendering till the next digest cycle.\n      // For some reason snapshot panels don't init at this time, so this helps to avoid rendering issues.\n      return this.$timeout(() => {\n        this.events.emit(PanelEvents.dataSnapshotLoad, data);\n      });\n    }\n\n    // clear loading/error state\n    delete this.error;\n    this.loading = true;\n\n    // load datasource service\n    return this.datasourceSrv\n      .get(this.panel.datasource, this.panel.scopedVars)\n      .then(this.issueQueries.bind(this))\n      .catch((err: any) => {\n        this.processDataError(err);\n      });\n  }\n\n  processDataError(err: any) {\n    // if canceled  keep loading set to true\n    if (err.cancelled) {\n      console.log('Panel request cancelled', err);\n      return;\n    }\n\n    this.error = err.message || 'Request Error';\n\n    if (err.data) {\n      if (err.data.message) {\n        this.error = err.data.message;\n      } else if (err.data.error) {\n        this.error = err.data.error;\n      }\n    }\n\n    this.angularDirtyCheck();\n  }\n\n  angularDirtyCheck() {\n    if (!this.$scope.$root.$$phase) {\n      this.$scope.$digest();\n    }\n  }\n\n  // Updates the response with information from the stream\n  panelDataObserver = {\n    next: (data: PanelData) => {\n      this.panelData = data;\n\n      if (data.state === LoadingState.Error) {\n        this.loading = false;\n        this.processDataError(data.error);\n      }\n\n      // Ignore data in loading state\n      if (data.state === LoadingState.Loading) {\n        this.loading = true;\n        this.angularDirtyCheck();\n        return;\n      }\n\n      if (data.request) {\n        const { timeInfo } = data.request;\n        if (timeInfo) {\n          this.timeInfo = timeInfo;\n        }\n      }\n\n      if (data.timeRange) {\n        this.range = data.timeRange;\n      }\n\n      if (this.useDataFrames) {\n        this.handleDataFrames(data.series);\n      } else {\n        // Make the results look as if they came directly from a <6.2 datasource request\n        const legacy = data.series.map((v) => toLegacyResponseData(v));\n        this.handleQueryResult({ data: legacy });\n      }\n\n      this.angularDirtyCheck();\n    },\n  };\n\n  updateTimeRange(datasource?: DataSourceApi) {\n    this.datasource = datasource || this.datasource;\n    this.range = this.timeSrv.timeRange();\n\n    const newTimeData = applyPanelTimeOverrides(this.panel, this.range);\n    this.timeInfo = newTimeData.timeInfo;\n    this.range = newTimeData.timeRange;\n  }\n\n  issueQueries(datasource: DataSourceApi) {\n    this.updateTimeRange(datasource);\n\n    this.datasource = datasource;\n\n    const panel = this.panel as PanelModel;\n    const queryRunner = panel.getQueryRunner();\n\n    return queryRunner.run({\n      datasource: panel.datasource,\n      queries: panel.targets,\n      panelId: panel.id,\n      dashboardId: this.dashboard.id,\n      timezone: this.dashboard.getTimezone(),\n      timeInfo: this.timeInfo,\n      timeRange: this.range,\n      maxDataPoints: panel.maxDataPoints || this.width,\n      minInterval: panel.interval,\n      publicDashboardAccessToken: this.dashboard.meta.publicDashboardAccessToken,\n      scopedVars: panel.scopedVars,\n      cacheTimeout: panel.cacheTimeout,\n      transformations: panel.transformations,\n    });\n  }\n\n  handleDataFrames(data: DataFrame[]) {\n    this.loading = false;\n\n    if (this.dashboard && this.dashboard.snapshot) {\n      this.panel.snapshotData = data.map((frame) => toDataFrameDTO(frame));\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataFramesReceived, data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n\n  handleQueryResult(result: DataQueryResponse) {\n    this.loading = false;\n\n    if (this.dashboard.snapshot) {\n      this.panel.snapshotData = result.data;\n    }\n\n    if (!result || !result.data) {\n      console.log('Data source query result invalid, missing data field:', result);\n      result = { data: [] };\n    }\n\n    try {\n      this.events.emit(PanelEvents.dataReceived, result.data);\n    } catch (err) {\n      this.processDataError(err);\n    }\n  }\n}\n\nexport { MetricsPanelCtrl };\n","import { auto } from 'angular';\nimport { isString } from 'lodash';\n\nimport {\n  AppEvent,\n  PanelEvents,\n  PanelPluginMeta,\n  AngularPanelMenuItem,\n  EventBusExtended,\n  EventBusSrv,\n} from '@grafana/data';\nimport { AngularLocationWrapper } from 'app/angular/AngularLocationWrapper';\nimport config from 'app/core/config';\nimport { profiler } from 'app/core/core';\n\nimport { DashboardModel } from '../../features/dashboard/state';\n\nexport class PanelCtrl {\n  panel: any;\n  error: any;\n  declare dashboard: DashboardModel;\n  pluginName = '';\n  pluginId = '';\n  editorTabs: any;\n  $scope: any;\n  $injector: auto.IInjectorService;\n  $timeout: any;\n  editModeInitiated = false;\n  declare height: number;\n  declare width: number;\n  containerHeight: any;\n  events: EventBusExtended;\n  loading = false;\n  timing: any;\n  $location: AngularLocationWrapper;\n\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    this.panel = this.panel ?? $scope.$parent.panel;\n    this.dashboard = this.dashboard ?? $scope.$parent.dashboard;\n    this.$injector = $injector;\n    this.$scope = $scope;\n    this.$timeout = $injector.get('$timeout');\n    this.editorTabs = [];\n    this.$location = new AngularLocationWrapper();\n    this.events = new EventBusSrv();\n    this.timing = {}; // not used but here to not break plugins\n\n    const plugin = config.panels[this.panel.type];\n    if (plugin) {\n      this.pluginId = plugin.id;\n      this.pluginName = plugin.name;\n    }\n\n    $scope.$on(PanelEvents.componentDidMount.name, () => this.panelDidMount());\n  }\n\n  panelDidMount() {\n    this.events.emit(PanelEvents.componentDidMount);\n    this.events.emit(PanelEvents.initialized);\n    this.dashboard.panelInitialized(this.panel);\n  }\n\n  renderingCompleted() {\n    profiler.renderingCompleted();\n  }\n\n  refresh() {\n    this.panel.refresh();\n  }\n\n  publishAppEvent<T>(event: AppEvent<T>, payload?: T) {\n    this.$scope.$root.appEvent(event, payload);\n  }\n\n  initEditMode() {\n    if (!this.editModeInitiated) {\n      this.editModeInitiated = true;\n      this.events.emit(PanelEvents.editModeInitialized);\n    }\n  }\n\n  addEditorTab(title: string, directiveFn: any, index?: number, icon?: any) {\n    const editorTab = { title, directiveFn, icon };\n\n    if (isString(directiveFn)) {\n      editorTab.directiveFn = () => {\n        return { templateUrl: directiveFn };\n      };\n    }\n\n    if (index) {\n      this.editorTabs.splice(index, 0, editorTab);\n    } else {\n      this.editorTabs.push(editorTab);\n    }\n  }\n\n  getExtendedMenu() {\n    const menu: AngularPanelMenuItem[] = [];\n    this.events.emit(PanelEvents.initPanelActions, menu);\n    return menu;\n  }\n\n  // Override in sub-class to add items before extended menu\n  async getAdditionalMenuItems(): Promise<any[]> {\n    return [];\n  }\n\n  otherPanelInFullscreenMode() {\n    return this.dashboard.otherPanelInFullscreen(this.panel);\n  }\n\n  render(payload?: any) {\n    this.events.emit(PanelEvents.render, payload);\n  }\n\n  // overriden from react\n  onPluginTypeChange = (plugin: PanelPluginMeta) => {};\n}\n","import { config } from 'app/core/config';\nimport { PanelModel } from 'app/features/dashboard/state';\n\nexport const hiddenReducerTypes = ['percent_diff', 'percent_diff_abs'];\nexport class ThresholdMapper {\n  static alertToGraphThresholds(panel: PanelModel) {\n    if (!panel.alert || config.unifiedAlertingEnabled) {\n      return false; // no update when no alerts\n    }\n\n    for (let i = 0; i < panel.alert.conditions.length; i++) {\n      const condition = panel.alert.conditions[i];\n      if (condition.type !== 'query') {\n        continue;\n      }\n\n      const evaluator = condition.evaluator;\n      const thresholds: any[] = (panel.thresholds = []);\n      const visible = hiddenReducerTypes.indexOf(condition.reducer?.type) === -1;\n\n      switch (evaluator.type) {\n        case 'gt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'gt', visible });\n          break;\n        }\n        case 'lt': {\n          const value = evaluator.params[0];\n          thresholds.push({ value: value, op: 'lt', visible });\n          break;\n        }\n        case 'outside_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'gt', visible });\n            thresholds.push({ value: value2, op: 'lt', visible });\n          } else {\n            thresholds.push({ value: value1, op: 'lt', visible });\n            thresholds.push({ value: value2, op: 'gt', visible });\n          }\n\n          break;\n        }\n        case 'within_range': {\n          const value1 = evaluator.params[0];\n          const value2 = evaluator.params[1];\n\n          if (value1 > value2) {\n            thresholds.push({ value: value1, op: 'lt', visible });\n            thresholds.push({ value: value2, op: 'gt', visible });\n          } else {\n            thresholds.push({ value: value1, op: 'gt', visible });\n            thresholds.push({ value: value2, op: 'lt', visible });\n          }\n          break;\n        }\n      }\n      break;\n    }\n\n    for (const t of panel.thresholds) {\n      t.fill = panel.options.alertThreshold;\n      t.line = panel.options.alertThreshold;\n      t.colorMode = 'critical';\n    }\n\n    const updated = true;\n    return updated;\n  }\n}\n","import { applyFieldOverrides, ArrayDataFrame, getDefaultTimeRange, LoadingState, PanelData } from '@grafana/data';\nimport { config } from 'app/core/config';\n\nimport { SnapshotWorker } from '../../query/state/DashboardQueryRunner/SnapshotWorker';\nimport { getProcessedDataFrames } from '../../query/state/runRequest';\nimport { getTimeSrv } from '../services/TimeSrv';\nimport { DashboardModel, PanelModel } from '../state';\n\nimport { applyPanelTimeOverrides } from './panel';\n\nexport function loadSnapshotData(panel: PanelModel, dashboard: DashboardModel): PanelData {\n  const data = getProcessedDataFrames(panel.snapshotData);\n  const worker = new SnapshotWorker();\n  const options = { dashboard, range: getDefaultTimeRange() };\n  const annotationEvents = worker.canWork(options) ? worker.getAnnotationsInSnapshot(dashboard, panel.id) : [];\n  const annotations = [new ArrayDataFrame(annotationEvents)];\n  const timeData = applyPanelTimeOverrides(panel, getTimeSrv().timeRange());\n\n  return {\n    timeRange: timeData.timeRange,\n    state: LoadingState.Done,\n    series: applyFieldOverrides({\n      data,\n      fieldConfig: {\n        defaults: {},\n        overrides: [],\n      },\n      replaceVariables: panel.replaceVariables,\n      fieldConfigRegistry: panel.plugin!.fieldConfigRegistry,\n      theme: config.theme2,\n      timeZone: dashboard.getTimezone(),\n    }),\n    annotations,\n  };\n}\n","import {\n  DataLink,\n  DisplayValue,\n  FieldDisplay,\n  formattedValueToString,\n  getFieldDisplayValuesProxy,\n  getTimeField,\n  InterpolateFunction,\n  Labels,\n  LinkModelSupplier,\n  ScopedVar,\n  ScopedVars,\n} from '@grafana/data';\nimport { PanelModel } from 'app/features/dashboard/state/PanelModel';\n\nimport { getLinkSrv } from './link_srv';\n\ninterface SeriesVars {\n  name?: string;\n  refId?: string;\n}\n\ninterface FieldVars {\n  name: string;\n  labels?: Labels;\n}\n\ninterface ValueVars {\n  raw: any;\n  numeric: number;\n  text: string;\n  time?: number;\n  calc?: string;\n}\n\ninterface DataViewVars {\n  name?: string;\n  refId?: string;\n  fields?: Record<string, DisplayValue>;\n}\n\ninterface DataLinkScopedVars extends ScopedVars {\n  __series: ScopedVar<SeriesVars>;\n  __field: ScopedVar<FieldVars>;\n  __value: ScopedVar<ValueVars>;\n  __data: ScopedVar<DataViewVars>;\n}\n\n/**\n * Link suppliers creates link models based on a link origin\n */\nexport const getFieldLinksSupplier = (value: FieldDisplay): LinkModelSupplier<FieldDisplay> | undefined => {\n  const links = value.field.links;\n  if (!links || links.length === 0) {\n    return undefined;\n  }\n\n  return {\n    getLinks: (replaceVariables: InterpolateFunction) => {\n      const scopedVars: Partial<DataLinkScopedVars> = {};\n\n      if (value.view) {\n        const { dataFrame } = value.view;\n\n        scopedVars['__series'] = {\n          value: {\n            name: dataFrame.name,\n            refId: dataFrame.refId,\n          },\n          text: 'Series',\n        };\n\n        const field = value.colIndex !== undefined ? dataFrame.fields[value.colIndex] : undefined;\n\n        if (field) {\n          scopedVars['__field'] = {\n            value: {\n              name: field.name,\n              labels: field.labels,\n            },\n            text: 'Field',\n          };\n\n          if (value.rowIndex !== undefined && value.rowIndex >= 0) {\n            const { timeField } = getTimeField(dataFrame);\n            scopedVars['__value'] = {\n              value: {\n                raw: field.values.get(value.rowIndex),\n                numeric: value.display.numeric,\n                text: formattedValueToString(value.display),\n                time: timeField ? timeField.values.get(value.rowIndex) : undefined,\n              },\n              text: 'Value',\n            };\n          }\n\n          // Expose other values on the row\n          if (value.view) {\n            scopedVars['__data'] = {\n              value: {\n                name: dataFrame.name,\n                refId: dataFrame.refId,\n                fields: getFieldDisplayValuesProxy({\n                  frame: dataFrame,\n                  rowIndex: value.rowIndex!,\n                }),\n              },\n              text: 'Data',\n            };\n          }\n        } else {\n          // calculation\n          scopedVars['__value'] = {\n            value: {\n              raw: value.display.numeric,\n              numeric: value.display.numeric,\n              text: formattedValueToString(value.display),\n              calc: value.name,\n            },\n            text: 'Value',\n          };\n        }\n      } else {\n        console.log('VALUE', value);\n      }\n\n      const replace: InterpolateFunction = (value: string, vars: ScopedVars | undefined, fmt?: string | Function) => {\n        const finalVars: ScopedVars = {\n          ...(scopedVars as ScopedVars),\n          ...vars,\n        };\n        return replaceVariables(value, finalVars, fmt);\n      };\n\n      return links.map((link: DataLink) => {\n        return getLinkSrv().getDataLinkUIModel(link, replace, value);\n      });\n    },\n  };\n};\n\nexport const getPanelLinksSupplier = (panel: PanelModel): LinkModelSupplier<PanelModel> | undefined => {\n  const links = panel.links;\n\n  if (!links || links.length === 0) {\n    return undefined;\n  }\n\n  return {\n    getLinks: () => {\n      return links.map((link) => {\n        return getLinkSrv().getDataLinkUIModel(link, panel.replaceVariables, panel);\n      });\n    },\n  };\n};\n","import { find } from 'lodash';\n\nimport { DataFrame, dateTime, Field, FieldType, getFieldDisplayName, getTimeField, TimeRange } from '@grafana/data';\nimport { colors } from '@grafana/ui';\nimport { applyNullInsertThreshold } from '@grafana/ui/src/components/GraphNG/nullInsertThreshold';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\n\ntype Options = {\n  dataList: DataFrame[];\n  range?: TimeRange;\n};\n\nexport class DataProcessor {\n  constructor(private panel: any) {}\n\n  getSeriesList(options: Options): TimeSeries[] {\n    const list: TimeSeries[] = [];\n    const { dataList, range } = options;\n\n    if (!dataList || !dataList.length) {\n      return list;\n    }\n\n    for (let i = 0; i < dataList.length; i++) {\n      let series = dataList[i];\n      let { timeField } = getTimeField(series);\n\n      if (!timeField) {\n        continue;\n      }\n\n      series = applyNullInsertThreshold({ frame: series, refFieldName: timeField.name });\n      timeField = getTimeField(series).timeField!; // use updated length\n\n      for (let j = 0; j < series.fields.length; j++) {\n        const field = series.fields[j];\n\n        if (field.type !== FieldType.number) {\n          continue;\n        }\n        const name = getFieldDisplayName(field, series, dataList);\n        const datapoints = [];\n\n        for (let r = 0; r < series.length; r++) {\n          datapoints.push([field.values.get(r), dateTime(timeField.values.get(r)).valueOf()]);\n        }\n\n        list.push(this.toTimeSeries(field, name, i, j, datapoints, list.length, range));\n      }\n    }\n\n    // Merge all the rows if we want to show a histogram\n    if (this.panel.xaxis.mode === 'histogram' && !this.panel.stack && list.length > 1) {\n      const first = list[0];\n      first.alias = first.aliasEscaped = 'Count';\n\n      for (let i = 1; i < list.length; i++) {\n        first.datapoints = first.datapoints.concat(list[i].datapoints);\n      }\n\n      return [first];\n    }\n\n    return list;\n  }\n\n  private toTimeSeries(\n    field: Field,\n    alias: string,\n    dataFrameIndex: number,\n    fieldIndex: number,\n    datapoints: any[][],\n    index: number,\n    range?: TimeRange\n  ) {\n    const colorIndex = index % colors.length;\n    const color = this.panel.aliasColors[alias] || colors[colorIndex];\n\n    const series = new TimeSeries({\n      datapoints: datapoints || [],\n      alias: alias,\n      color: config.theme2.visualization.getColorByName(color),\n      unit: field.config ? field.config.unit : undefined,\n      dataFrameIndex,\n      fieldIndex,\n    });\n\n    if (datapoints && datapoints.length > 0 && range) {\n      const last = datapoints[datapoints.length - 1][1];\n      const from = range.from;\n\n      if (last - from.valueOf() < -10000) {\n        // If the data is in reverse order\n        const first = datapoints[0][1];\n        if (first - from.valueOf() < -10000) {\n          series.isOutsideRange = true;\n        }\n      }\n    }\n    return series;\n  }\n\n  setPanelDefaultsForNewXAxisMode() {\n    switch (this.panel.xaxis.mode) {\n      case 'time': {\n        this.panel.bars = false;\n        this.panel.lines = true;\n        this.panel.points = false;\n        this.panel.legend.show = true;\n        this.panel.tooltip.shared = true;\n        this.panel.xaxis.values = [];\n        break;\n      }\n      case 'series': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        this.panel.xaxis.values = ['total'];\n        break;\n      }\n      case 'histogram': {\n        this.panel.bars = true;\n        this.panel.lines = false;\n        this.panel.points = false;\n        this.panel.stack = false;\n        this.panel.legend.show = false;\n        this.panel.tooltip.shared = false;\n        break;\n      }\n    }\n  }\n\n  validateXAxisSeriesValue() {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        if (this.panel.xaxis.values.length === 0) {\n          this.panel.xaxis.values = ['total'];\n          return;\n        }\n\n        const validOptions = this.getXAxisValueOptions({});\n        const found: any = find(validOptions, { value: this.panel.xaxis.values[0] });\n        if (!found) {\n          this.panel.xaxis.values = ['total'];\n        }\n        return;\n      }\n    }\n  }\n\n  getXAxisValueOptions(options: any) {\n    switch (this.panel.xaxis.mode) {\n      case 'series': {\n        return [\n          { text: 'Avg', value: 'avg' },\n          { text: 'Min', value: 'min' },\n          { text: 'Max', value: 'max' },\n          { text: 'Total', value: 'total' },\n          { text: 'Count', value: 'count' },\n        ];\n      }\n    }\n\n    return [];\n  }\n\n  pluckDeep(obj: any, property: string) {\n    const propertyParts = property.split('.');\n    let value = obj;\n    for (let i = 0; i < propertyParts.length; ++i) {\n      if (value[propertyParts[i]]) {\n        value = value[propertyParts[i]];\n      } else {\n        return undefined;\n      }\n    }\n    return value;\n  }\n}\n","import $ from 'jquery';\nimport { partition, each } from 'lodash';\n//@ts-ignore\nimport Drop from 'tether-drop';\n\nimport { CreatePlotOverlay } from '@grafana/data';\nimport { getLegacyAngularInjector } from '@grafana/runtime';\n\n/** @ngInject */\nconst createAnnotationToolip: CreatePlotOverlay = (element, event, plot) => {\n  const injector = getLegacyAngularInjector();\n  const content = document.createElement('div');\n  content.innerHTML = '<annotation-tooltip event=\"event\" on-edit=\"onEdit()\"></annotation-tooltip>';\n\n  injector.invoke([\n    '$compile',\n    '$rootScope',\n    ($compile, $rootScope) => {\n      const eventManager = plot.getOptions().events.manager;\n      const tmpScope = $rootScope.$new(true);\n      tmpScope.event = event;\n      tmpScope.onEdit = () => {\n        eventManager.editEvent(event);\n      };\n\n      $compile(content)(tmpScope);\n      tmpScope.$digest();\n      tmpScope.$destroy();\n\n      const drop = new Drop({\n        target: element[0],\n        content: content,\n        position: 'bottom center',\n        classes: 'drop-popover drop-popover--annotation',\n        openOn: 'hover',\n        hoverCloseDelay: 200,\n        tetherOptions: {\n          constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n        },\n      });\n\n      drop.open();\n\n      drop.on('close', () => {\n        setTimeout(() => {\n          drop.destroy();\n        });\n      });\n    },\n  ]);\n};\n\nlet markerElementToAttachTo: any = null;\n\n/** @ngInject */\nconst createEditPopover: CreatePlotOverlay = (element, event, plot) => {\n  const eventManager = plot.getOptions().events.manager;\n  if (eventManager.editorOpen) {\n    // update marker element to attach to (needed in case of legend on the right\n    // when there is a double render pass and the initial marker element is removed)\n    markerElementToAttachTo = element;\n    return;\n  }\n\n  // mark as openend\n  eventManager.editorOpened();\n  // set marker elment to attache to\n  markerElementToAttachTo = element;\n\n  // wait for element to be attached and positioned\n  setTimeout(() => {\n    const injector = getLegacyAngularInjector();\n    const content = document.createElement('div');\n    content.innerHTML = '<event-editor panel-ctrl=\"panelCtrl\" event=\"event\" close=\"close()\"></event-editor>';\n\n    injector.invoke([\n      '$compile',\n      '$rootScope',\n      ($compile, $rootScope) => {\n        const scope = $rootScope.$new(true);\n        let drop: any;\n\n        scope.event = event;\n        scope.panelCtrl = eventManager.panelCtrl;\n        scope.close = () => {\n          drop.close();\n        };\n\n        $compile(content)(scope);\n        scope.$digest();\n\n        drop = new Drop({\n          target: markerElementToAttachTo[0],\n          content: content,\n          position: 'bottom center',\n          classes: 'drop-popover drop-popover--form',\n          openOn: 'click',\n          tetherOptions: {\n            constraints: [{ to: 'window', pin: true, attachment: 'both' }],\n          },\n        });\n\n        drop.open();\n        eventManager.editorOpened();\n\n        drop.on('close', () => {\n          // need timeout here in order call drop.destroy\n          setTimeout(() => {\n            eventManager.editorClosed();\n            scope.$destroy();\n            drop.destroy();\n          });\n        });\n      },\n    ]);\n  }, 100);\n};\n\nexport { createEditPopover, createAnnotationToolip };\n\n/*\n * jquery.flot.events\n *\n * description: Flot plugin for adding events/markers to the plot\n * version: 0.2.5\n * authors:\n *    Alexander Wunschik <alex@wunschik.net>\n *    Joel Oughton <joeloughton@gmail.com>\n *    Nicolas Joseph <www.nicolasjoseph.com>\n *\n * website: https://github.com/mojoaxel/flot-events\n *\n * released under MIT License and GPLv2+\n */\n\n/**\n * A class that allows for the drawing an remove of some object\n */\nexport class DrawableEvent {\n  _object: any;\n  _drawFunc: any;\n  _clearFunc: any;\n  _moveFunc: any;\n  _position: any;\n  _width: any;\n  _height: any;\n\n  /** @ngInject */\n  constructor(\n    object: JQuery,\n    drawFunc: any,\n    clearFunc: any,\n    moveFunc: any,\n    left: number,\n    top: number,\n    width: number,\n    height: number\n  ) {\n    this._object = object;\n    this._drawFunc = drawFunc;\n    this._clearFunc = clearFunc;\n    this._moveFunc = moveFunc;\n    this._position = { left, top };\n    this._width = width;\n    this._height = height;\n  }\n\n  width() {\n    return this._width;\n  }\n  height() {\n    return this._height;\n  }\n  position() {\n    return this._position;\n  }\n  draw() {\n    this._drawFunc(this._object);\n  }\n  clear() {\n    this._clearFunc(this._object);\n  }\n  getObject() {\n    return this._object;\n  }\n  moveTo(position: { left: number; top: number }) {\n    this._position = position;\n    this._moveFunc(this._object, this._position);\n  }\n}\n\n/**\n * Event class that stores options (eventType, min, max, title, description) and the object to draw.\n */\nexport class VisualEvent {\n  _parent: any;\n  _options: any;\n  _drawableEvent: any;\n  _hidden: any;\n\n  /** @ngInject */\n  constructor(options: any, drawableEvent: DrawableEvent) {\n    this._options = options;\n    this._drawableEvent = drawableEvent;\n    this._hidden = false;\n  }\n\n  visual() {\n    return this._drawableEvent;\n  }\n  getOptions() {\n    return this._options;\n  }\n  getParent() {\n    return this._parent;\n  }\n  isHidden() {\n    return this._hidden;\n  }\n  hide() {\n    this._hidden = true;\n  }\n  unhide() {\n    this._hidden = false;\n  }\n}\n\n/**\n * A Class that handles the event-markers inside the given plot\n */\nexport class EventMarkers {\n  _events: any;\n  _types: any;\n  _plot: any;\n  eventsEnabled: any;\n\n  /** @ngInject */\n  constructor(plot: any) {\n    this._events = [];\n    this._types = [];\n    this._plot = plot;\n    this.eventsEnabled = false;\n  }\n\n  getEvents() {\n    return this._events;\n  }\n\n  setTypes(types: any) {\n    return (this._types = types);\n  }\n\n  /**\n   * create internal objects for the given events\n   */\n  setupEvents(events: any[]) {\n    const parts = partition(events, 'isRegion');\n    const regions = parts[0];\n    events = parts[1];\n\n    $.each(events, (index, event) => {\n      const ve = new VisualEvent(event, this._buildDiv(event));\n      this._events.push(ve);\n    });\n\n    $.each(regions, (index, event) => {\n      const vre = new VisualEvent(event, this._buildRegDiv(event));\n      this._events.push(vre);\n    });\n\n    this._events.sort((a: any, b: any) => {\n      const ao = a.getOptions(),\n        bo = b.getOptions();\n      if (ao.min > bo.min) {\n        return 1;\n      }\n      if (ao.min < bo.min) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * draw the events to the plot\n   */\n  drawEvents() {\n    // var o = this._plot.getPlotOffset();\n\n    $.each(this._events, (index, event) => {\n      const options = event.getOptions();\n      const insidePlot = this._insidePlot(options.min) || this._insidePlot(options.timeEnd);\n      const overlapPlot = this._overlapPlot(options.min, options.timeEnd);\n      // check event is inside the graph range\n      if ((insidePlot || overlapPlot) && !event.isHidden()) {\n        event.visual().draw();\n      } else {\n        event.visual().getObject().hide();\n      }\n    });\n  }\n\n  /**\n   * update the position of the event-markers (e.g. after scrolling or zooming)\n   */\n  updateEvents() {\n    const o = this._plot.getPlotOffset();\n    let left;\n    let top;\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n\n    $.each(this._events, (index, event) => {\n      top = o.top + this._plot.height() - event.visual().height();\n      left = xaxis.p2c(event.getOptions().min) + o.left - event.visual().width() / 2;\n      event.visual().moveTo({ top: top, left: left });\n    });\n  }\n\n  /**\n   * remove all events from the plot\n   */\n  _clearEvents() {\n    $.each(this._events, (index, val) => {\n      val.visual().clear();\n    });\n    this._events = [];\n  }\n\n  /**\n   * create a DOM element for the given event\n   */\n  _buildDiv(event: { eventType: any; min: any; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top, left, color, markerSize, markerShow, lineStyle, lineWidth;\n    let markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].markerSize) {\n      markerSize = 8; //default marker size\n    } else {\n      markerSize = this._types[eventTypeId].markerSize;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerShow === undefined) {\n      markerShow = true;\n    } else {\n      markerShow = this._types[eventTypeId].markerShow;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    let topOffset = xaxis.options.eventSectionHeight || 0;\n    topOffset = topOffset / 3;\n\n    top = o.top + this._plot.height() + topOffset;\n    left = xaxis.p2c(event.min) + o.left;\n\n    const line = $('<div class=\"events_line flot-temp-elem\"></div>')\n      .css({\n        position: 'absolute',\n        opacity: 0.8,\n        left: left + 'px',\n        top: 8,\n        width: lineWidth + 'px',\n        height: this._plot.height() + topOffset * 0.8,\n        'border-left-width': lineWidth + 'px',\n        'border-left-style': lineStyle,\n        'border-left-color': color,\n        color: color,\n      })\n      .appendTo(container);\n\n    if (markerShow) {\n      const marker = $('<div class=\"events_marker\"></div>').css({\n        position: 'absolute',\n        left: -markerSize - Math.round(lineWidth / 2) + 'px',\n        'font-size': 0,\n        'line-height': 0,\n        width: 0,\n        height: 0,\n        'border-left': markerSize + 'px solid transparent',\n        'border-right': markerSize + 'px solid transparent',\n      });\n\n      marker.appendTo(line);\n\n      if (\n        this._types[eventTypeId] &&\n        this._types[eventTypeId].position &&\n        this._types[eventTypeId].position.toUpperCase() === 'BOTTOM'\n      ) {\n        marker.css({\n          top: top - markerSize - 8 + 'px',\n          'border-top': 'none',\n          'border-bottom': markerSize + 'px solid ' + color,\n        });\n      } else {\n        marker.css({\n          top: '0px',\n          'border-top': markerSize + 'px solid ' + color,\n          'border-bottom': 'none',\n        });\n      }\n\n      marker.data({\n        event: event,\n      });\n\n      const mouseenter = function (this: any) {\n        createAnnotationToolip(marker, $(this).data('event'), that._plot);\n      };\n\n      if (event.editModel) {\n        createEditPopover(marker, event.editModel, that._plot);\n      }\n\n      const mouseleave = () => {\n        that._plot.clearSelection();\n      };\n\n      if (markerTooltip) {\n        marker.css({ cursor: 'help' });\n        marker.hover(mouseenter, mouseleave);\n      }\n    }\n\n    const drawableEvent = new DrawableEvent(\n      line,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: any, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      line.width() ?? 1,\n      line.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * create a DOM element for the given region\n   */\n  _buildRegDiv(event: { eventType: any; min: number; timeEnd: number; editModel: any }) {\n    const that = this;\n\n    const container = this._plot.getPlaceholder();\n    const o = this._plot.getPlotOffset();\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    let top,\n      left,\n      lineWidth: number,\n      regionWidth,\n      lineStyle: string | number | cssPropertySetter,\n      color: string,\n      markerTooltip;\n\n    // map the eventType to a types object\n    const eventTypeId = event.eventType;\n\n    if (this._types === null || !this._types[eventTypeId] || !this._types[eventTypeId].color) {\n      color = '#666';\n    } else {\n      color = this._types[eventTypeId].color;\n    }\n\n    if (this._types === null || !this._types[eventTypeId] || this._types[eventTypeId].markerTooltip === undefined) {\n      markerTooltip = true;\n    } else {\n      markerTooltip = this._types[eventTypeId].markerTooltip;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || this._types[eventTypeId].lineWidth === undefined) {\n      lineWidth = 1; //default line width\n    } else {\n      lineWidth = this._types[eventTypeId].lineWidth;\n    }\n\n    if (this._types == null || !this._types[eventTypeId] || !this._types[eventTypeId].lineStyle) {\n      lineStyle = 'dashed'; //default line style\n    } else {\n      lineStyle = this._types[eventTypeId].lineStyle.toLowerCase();\n    }\n\n    const topOffset = 2;\n    top = o.top + this._plot.height() + topOffset;\n\n    const timeFrom = Math.min(event.min, event.timeEnd);\n    const timeTo = Math.max(event.min, event.timeEnd);\n    left = xaxis.p2c(timeFrom) + o.left;\n    const right = xaxis.p2c(timeTo) + o.left;\n\n    const [xmin, xmax] = [o.left, o.left + this._plot.width()];\n    const regionStart = Math.max(left, xmin);\n    const regionEnd = Math.min(right, xmax);\n    const regionOffset = right > xmax ? 0 : lineWidth; // only include lineWidth when right line is visible\n    regionWidth = regionEnd - regionStart + regionOffset;\n\n    each([left, right], (position) => {\n      // only draw visible region lines\n      if (xmin <= position && position < xmax) {\n        const line = $('<div class=\"events_line flot-temp-elem\"></div>').css({\n          position: 'absolute',\n          opacity: 0.8,\n          left: position + 'px',\n          top: 8,\n          width: lineWidth + 'px',\n          height: this._plot.height() + topOffset,\n          'border-left-width': lineWidth + 'px',\n          'border-left-style': lineStyle,\n          'border-left-color': color,\n          color: color,\n        });\n        line.appendTo(container);\n      }\n    });\n\n    const region = $('<div class=\"events_marker region_marker flot-temp-elem\"></div>').css({\n      position: 'absolute',\n      opacity: 0.5,\n      left: regionStart + 'px',\n      top: top,\n      width: regionWidth + 'px',\n      height: '0.5rem',\n      'border-left-color': color,\n      color: color,\n      'background-color': color,\n    });\n    region.appendTo(container);\n\n    region.data({\n      event: event,\n    });\n\n    const mouseenter = function (this: any) {\n      createAnnotationToolip(region, $(this).data('event'), that._plot);\n    };\n\n    if (event.editModel) {\n      createEditPopover(region, event.editModel, that._plot);\n    }\n\n    const mouseleave = () => {\n      that._plot.clearSelection();\n    };\n\n    if (markerTooltip) {\n      region.css({ cursor: 'help' });\n      region.hover(mouseenter, mouseleave);\n    }\n\n    const drawableEvent = new DrawableEvent(\n      region,\n      function drawFunc(obj: { show: () => void }) {\n        obj.show();\n      },\n      (obj: { remove: () => void }) => {\n        obj.remove();\n      },\n      (obj: { css: (arg0: { top: any; left: any }) => void }, position: { top: any; left: any }) => {\n        obj.css({\n          top: position.top,\n          left: position.left,\n        });\n      },\n      left,\n      top,\n      region.width() ?? 1,\n      region.height() ?? 1\n    );\n\n    return drawableEvent;\n  }\n\n  /**\n   * check if the event is inside visible range\n   */\n  _insidePlot(x: any) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const xc = xaxis.p2c(x);\n    return xc > 0 && xc < xaxis.p2c(xaxis.max);\n  }\n\n  /**\n   * check if the event overlaps the visible range\n   */\n  _overlapPlot(point0: number, point1: number) {\n    const xaxis = this._plot.getXAxes()[this._plot.getOptions().events.xaxis - 1];\n    const [coord0, coord1] = [xaxis.p2c(point0), xaxis.p2c(point1)];\n    const [coordMin, coordMax] = [0, xaxis.p2c(xaxis.max)];\n    return coordMin < coord0 && coord1 < coordMax;\n  }\n}\n\n/**\n * initialize the plugin for the given plot\n */\n\n/** @ngInject */\nexport function init(this: any, plot: any) {\n  const that = this;\n  const eventMarkers = new EventMarkers(plot);\n\n  plot.getEvents = () => {\n    return eventMarkers._events;\n  };\n\n  plot.hideEvents = () => {\n    $.each(eventMarkers._events, (index, event) => {\n      event.visual().getObject().hide();\n    });\n  };\n\n  plot.showEvents = () => {\n    plot.hideEvents();\n    $.each(eventMarkers._events, (index, event) => {\n      event.hide();\n    });\n\n    that.eventMarkers.drawEvents();\n  };\n\n  // change events on an existing plot\n  plot.setEvents = (events: any[]) => {\n    if (eventMarkers.eventsEnabled) {\n      eventMarkers.setupEvents(events);\n    }\n  };\n\n  plot.hooks.processOptions.push((plot: any, options: any) => {\n    // enable the plugin\n    if (options.events.data != null) {\n      eventMarkers.eventsEnabled = true;\n    }\n  });\n\n  plot.hooks.draw.push((plot: any) => {\n    const options = plot.getOptions();\n\n    if (eventMarkers.eventsEnabled) {\n      // check for first run\n      if (eventMarkers.getEvents().length < 1) {\n        eventMarkers.setTypes(options.events.types);\n        eventMarkers.setupEvents(options.events.data);\n      } else {\n        eventMarkers.updateEvents();\n      }\n    }\n\n    eventMarkers.drawEvents();\n  });\n}\n\nconst defaultOptions: any = {\n  events: {\n    data: null,\n    types: null,\n    xaxis: 1,\n    position: 'BOTTOM',\n  },\n};\n\n$.plot.plugins.push({\n  init: init,\n  options: defaultOptions,\n  name: 'events',\n  version: '0.2.5',\n});\n","import classNames from 'classnames';\nimport React, { PureComponent } from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\nimport { SeriesColorPicker, SeriesIcon } from '@grafana/ui';\nimport { TimeSeries } from 'app/core/core';\n\nexport const LEGEND_STATS = ['min', 'max', 'avg', 'current', 'total'] as const;\nexport type LegendStat = typeof LEGEND_STATS[number];\n\nexport interface LegendLabelProps {\n  series: TimeSeries;\n  asTable?: boolean;\n  hidden?: boolean;\n  onLabelClick: (series: any, event: any) => void;\n  onColorChange: (series: any, color: string) => void;\n  onToggleAxis: (series: any) => void;\n}\n\nexport interface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ntype LegendItemProps = LegendLabelProps & LegendValuesProps;\n\ninterface LegendItemState {\n  yaxis: number;\n}\n\nexport class LegendItem extends PureComponent<LegendItemProps, LegendItemState> {\n  static defaultProps = {\n    asTable: false,\n    hidden: false,\n    onLabelClick: () => {},\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  constructor(props: LegendItemProps) {\n    super(props);\n    this.state = {\n      yaxis: this.props.series.yaxis,\n    };\n  }\n\n  onLabelClick = (e: any) => this.props.onLabelClick(this.props.series, e);\n\n  onToggleAxis = () => {\n    const yaxis = this.state.yaxis === 2 ? 1 : 2;\n    const info = { alias: this.props.series.alias, yaxis: yaxis };\n    this.setState({ yaxis: yaxis });\n    this.props.onToggleAxis(info);\n  };\n\n  onColorChange = (color: string) => {\n    this.props.onColorChange(this.props.series, color);\n    // Because of PureComponent nature it makes only shallow props comparison and changing of series.color doesn't run\n    // component re-render. In this case we can't rely on color, selected by user, because it may be overwritten\n    // by series overrides. So we need to use forceUpdate() to make sure we have proper series color.\n    this.forceUpdate();\n  };\n\n  renderLegendValues() {\n    const { series, asTable } = this.props;\n    const legendValueItems = [];\n    for (const valueName of LEGEND_STATS) {\n      // @ts-ignore\n      if (this.props[valueName]) {\n        const valueFormatted = series.formatValue(series.stats[valueName]);\n        legendValueItems.push(\n          <LegendValue\n            key={valueName}\n            valueName={valueName}\n            value={valueFormatted}\n            asTable={asTable}\n            onValueClick={this.onLabelClick}\n          />\n        );\n      }\n    }\n    return legendValueItems;\n  }\n\n  render() {\n    const { series, values, asTable, hidden } = this.props;\n    const seriesOptionClasses = classNames({\n      'graph-legend-series-hidden': hidden,\n      'graph-legend-series--right-y': series.yaxis === 2,\n    });\n    const valueItems = values ? this.renderLegendValues() : [];\n    const seriesLabel = (\n      <LegendSeriesLabel\n        label={series.alias}\n        color={series.color}\n        yaxis={this.state.yaxis}\n        onLabelClick={this.onLabelClick}\n        onColorChange={this.onColorChange}\n        onToggleAxis={this.onToggleAxis}\n      />\n    );\n\n    if (asTable) {\n      return (\n        <tr className={`graph-legend-series ${seriesOptionClasses}`}>\n          <td role=\"gridcell\">\n            <div className=\"graph-legend-series__table-name\">{seriesLabel}</div>\n          </td>\n          {valueItems}\n        </tr>\n      );\n    } else {\n      return (\n        <div className={`graph-legend-series ${seriesOptionClasses}`}>\n          {seriesLabel}\n          {valueItems}\n        </div>\n      );\n    }\n  }\n}\n\ninterface LegendSeriesLabelProps {\n  label: string;\n  color: string;\n  yaxis?: number;\n  onLabelClick: (event: any) => void;\n}\n\nclass LegendSeriesLabel extends PureComponent<LegendSeriesLabelProps & LegendSeriesIconProps> {\n  static defaultProps: Partial<LegendSeriesLabelProps> = {\n    yaxis: undefined,\n    onLabelClick: () => {},\n  };\n\n  render() {\n    const { label, color, yaxis } = this.props;\n    const { onColorChange, onToggleAxis } = this.props;\n    const onLabelClick = this.props.onLabelClick ? this.props.onLabelClick : () => {};\n\n    return [\n      <LegendSeriesIcon\n        key=\"icon\"\n        color={color}\n        yaxis={yaxis}\n        onColorChange={onColorChange}\n        onToggleAxis={onToggleAxis}\n      />,\n      <button\n        type=\"button\"\n        className=\"graph-legend-alias pointer\"\n        title={label}\n        key=\"label\"\n        onClick={onLabelClick}\n        aria-label={selectors.components.Panels.Visualization.Graph.Legend.legendItemAlias(label)}\n      >\n        {label}\n      </button>,\n    ];\n  }\n}\n\ninterface LegendSeriesIconProps {\n  color: string;\n  yaxis?: number;\n  onColorChange?: (color: string) => void;\n  onToggleAxis?: () => void;\n}\n\ninterface LegendSeriesIconState {\n  color: string;\n}\n\nclass LegendSeriesIcon extends PureComponent<LegendSeriesIconProps, LegendSeriesIconState> {\n  static defaultProps: Partial<LegendSeriesIconProps> = {\n    yaxis: undefined,\n    onColorChange: () => {},\n    onToggleAxis: () => {},\n  };\n\n  onColorChange = (color: string) => {\n    const { onColorChange } = this.props;\n    if (onColorChange) {\n      onColorChange(color);\n    }\n  };\n  render() {\n    return (\n      <SeriesColorPicker\n        yaxis={this.props.yaxis}\n        color={this.props.color}\n        onChange={this.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n        enableNamedColors\n      >\n        {({ ref, showColorPicker, hideColorPicker }) => (\n          <SeriesIcon\n            color={this.props.color}\n            ref={ref}\n            onClick={showColorPicker}\n            onMouseLeave={hideColorPicker}\n            className=\"graph-legend-icon\"\n          />\n        )}\n      </SeriesColorPicker>\n    );\n  }\n}\n\ninterface LegendValueProps {\n  value: string;\n  valueName: string;\n  asTable?: boolean;\n  onValueClick?: (event: any) => void;\n}\n\nfunction LegendValue({ value, valueName, asTable, onValueClick }: LegendValueProps) {\n  if (asTable) {\n    return (\n      <td role=\"gridcell\" className={`graph-legend-value ${valueName}`} onClick={onValueClick}>\n        {value}\n      </td>\n    );\n  }\n  return (\n    <div className={`graph-legend-value ${valueName}`} onClick={onValueClick}>\n      {value}\n    </div>\n  );\n}\n","import { sortBy as _sortBy } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { CustomScrollbar, Icon } from '@grafana/ui';\nimport { TimeSeries } from 'app/core/core';\n\nimport { LegendStat, LegendItem, LEGEND_STATS } from './LegendSeriesItem';\n\ninterface LegendProps {\n  seriesList: TimeSeries[];\n  optionalClass?: string;\n}\n\ninterface LegendEventHandlers {\n  onToggleSeries?: (hiddenSeries: any) => void;\n  onToggleSort?: (sortBy: any, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendComponentEventHandlers {\n  onToggleSeries?: (series: TimeSeries, event: any) => void;\n  onToggleSort?: (sortBy: LegendStat | undefined, sortDesc: any) => void;\n  onToggleAxis?: (series: TimeSeries) => void;\n  onColorChange?: (series: TimeSeries, color: string) => void;\n}\n\ninterface LegendDisplayProps {\n  hiddenSeries: any;\n  hideEmpty?: boolean;\n  hideZero?: boolean;\n  alignAsTable?: boolean;\n  rightSide?: boolean;\n  sideWidth?: number;\n}\n\ninterface LegendValuesProps {\n  values?: boolean;\n  min?: boolean;\n  max?: boolean;\n  avg?: boolean;\n  current?: boolean;\n  total?: boolean;\n}\n\ninterface LegendSortProps {\n  sort?: LegendStat;\n  sortDesc?: boolean;\n}\n\nexport type GraphLegendProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendEventHandlers;\nexport type LegendComponentProps = LegendProps &\n  LegendDisplayProps &\n  LegendValuesProps &\n  LegendSortProps &\n  LegendComponentEventHandlers;\n\ninterface LegendState {\n  hiddenSeries: { [seriesAlias: string]: boolean };\n}\n\nexport class GraphLegend extends PureComponent<GraphLegendProps, LegendState> {\n  static defaultProps: Partial<GraphLegendProps> = {\n    values: false,\n    min: false,\n    max: false,\n    avg: false,\n    current: false,\n    total: false,\n    alignAsTable: false,\n    rightSide: false,\n    sort: undefined,\n    sortDesc: false,\n    optionalClass: '',\n    onToggleSeries: () => {},\n    onToggleSort: () => {},\n    onToggleAxis: () => {},\n    onColorChange: () => {},\n  };\n\n  constructor(props: GraphLegendProps) {\n    super(props);\n    this.state = {\n      hiddenSeries: this.props.hiddenSeries,\n    };\n  }\n\n  sortLegend() {\n    let seriesList: TimeSeries[] = [...this.props.seriesList] || [];\n    const sortBy = this.props.sort;\n    if (sortBy && this.props[sortBy] && this.props.alignAsTable) {\n      seriesList = _sortBy(seriesList, (series) => {\n        let sort = series.stats[sortBy];\n        if (sort === null) {\n          sort = -Infinity;\n        }\n        return sort;\n      }) as TimeSeries[];\n      if (this.props.sortDesc) {\n        seriesList = seriesList.reverse();\n      }\n    }\n    return seriesList;\n  }\n\n  onToggleSeries = (series: TimeSeries, event: any) => {\n    if (!this.props.onToggleSeries) {\n      return;\n    }\n\n    let hiddenSeries = { ...this.state.hiddenSeries };\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      if (hiddenSeries[series.alias]) {\n        delete hiddenSeries[series.alias];\n      } else {\n        hiddenSeries[series.alias] = true;\n      }\n    } else {\n      hiddenSeries = this.toggleSeriesExclusiveMode(series);\n    }\n    this.setState({ hiddenSeries: hiddenSeries });\n    this.props.onToggleSeries(hiddenSeries);\n  };\n\n  toggleSeriesExclusiveMode(series: TimeSeries) {\n    const hiddenSeries = { ...this.state.hiddenSeries };\n\n    if (hiddenSeries[series.alias]) {\n      delete hiddenSeries[series.alias];\n    }\n\n    // check if every other series is hidden\n    const alreadyExclusive = this.props.seriesList.every((value) => {\n      if (value.alias === series.alias) {\n        return true;\n      }\n\n      return hiddenSeries[value.alias];\n    });\n\n    if (alreadyExclusive) {\n      // remove all hidden series\n      this.props.seriesList.forEach((value) => {\n        delete hiddenSeries[value.alias];\n      });\n    } else {\n      // hide all but this serie\n      this.props.seriesList.forEach((value) => {\n        if (value.alias === series.alias) {\n          return;\n        }\n\n        hiddenSeries[value.alias] = true;\n      });\n    }\n\n    return hiddenSeries;\n  }\n\n  render() {\n    const {\n      optionalClass,\n      rightSide,\n      sideWidth,\n      sort,\n      sortDesc,\n      hideEmpty,\n      hideZero,\n      values,\n      min,\n      max,\n      avg,\n      current,\n      total,\n    } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    const hiddenSeries = this.state.hiddenSeries;\n    const seriesHideProps = { hideEmpty, hideZero };\n    const sortProps = { sort, sortDesc };\n    const seriesList = this.sortLegend().filter((series) => !series.hideFromLegend(seriesHideProps));\n    const legendClass = `${this.props.alignAsTable ? 'graph-legend-table' : ''} ${optionalClass}`;\n\n    // Set min-width if side style and there is a value, otherwise remove the CSS property\n    // Set width so it works with IE11\n    const width: any = rightSide && sideWidth ? sideWidth : undefined;\n    const ieWidth: any = rightSide && sideWidth ? sideWidth - 1 : undefined;\n    const legendStyle: React.CSSProperties = {\n      minWidth: width,\n      width: ieWidth,\n    };\n\n    const legendProps: LegendComponentProps = {\n      seriesList: seriesList,\n      hiddenSeries: hiddenSeries,\n      onToggleSeries: this.onToggleSeries,\n      onToggleAxis: this.props.onToggleAxis,\n      onToggleSort: this.props.onToggleSort,\n      onColorChange: this.props.onColorChange,\n      ...seriesValuesProps,\n      ...sortProps,\n    };\n\n    return (\n      <div className={`graph-legend-content ${legendClass}`} style={legendStyle}>\n        {this.props.alignAsTable ? <LegendTable {...legendProps} /> : <LegendSeriesList {...legendProps} />}\n      </div>\n    );\n  }\n}\n\nclass LegendSeriesList extends PureComponent<LegendComponentProps> {\n  render() {\n    const { seriesList, hiddenSeries, values, min, max, avg, current, total } = this.props;\n    const seriesValuesProps = { values, min, max, avg, current, total };\n    return seriesList.map((series, i) => (\n      <LegendItem\n        // This trick required because TimeSeries.id is not unique (it's just TimeSeries.alias).\n        // In future would be good to make id unique across the series list.\n        key={`${series.id}-${i}`}\n        series={series}\n        hidden={hiddenSeries[series.alias]}\n        {...seriesValuesProps}\n        onLabelClick={this.props.onToggleSeries}\n        onColorChange={this.props.onColorChange}\n        onToggleAxis={this.props.onToggleAxis}\n      />\n    ));\n  }\n}\n\nclass LegendTable extends PureComponent<Partial<LegendComponentProps>> {\n  onToggleSort = (stat: LegendStat) => {\n    if (!this.props.onToggleSort) {\n      return;\n    }\n\n    let sortDesc = this.props.sortDesc;\n    let sortBy = this.props.sort;\n    if (stat !== sortBy) {\n      sortDesc = undefined;\n    }\n\n    // if already sort ascending, disable sorting\n    if (sortDesc === false) {\n      sortBy = undefined;\n      sortDesc = undefined;\n    } else {\n      sortDesc = !sortDesc;\n      sortBy = stat;\n    }\n    this.props.onToggleSort(sortBy, sortDesc);\n  };\n\n  render() {\n    const seriesList = this.props.seriesList;\n    const { values, min, max, avg, current, total, sort, sortDesc, hiddenSeries } = this.props;\n    const seriesValuesProps: any = { values, min, max, avg, current, total };\n\n    if (!seriesList) {\n      return null;\n    }\n\n    return (\n      <table role=\"grid\">\n        <colgroup>\n          <col style={{ width: '100%' }} />\n        </colgroup>\n        <thead>\n          <tr>\n            <th style={{ textAlign: 'left' }} />\n            {LEGEND_STATS.map(\n              (statName) =>\n                seriesValuesProps[statName] && (\n                  <LegendTableHeaderItem\n                    key={statName}\n                    statName={statName}\n                    sort={sort}\n                    sortDesc={sortDesc}\n                    onClick={this.onToggleSort}\n                  />\n                )\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {seriesList &&\n            seriesList.map((series, i) => (\n              <LegendItem\n                key={`${series.id}-${i}`}\n                asTable={true}\n                series={series}\n                hidden={hiddenSeries[series.alias]}\n                onLabelClick={this.props.onToggleSeries}\n                onColorChange={this.props.onColorChange}\n                onToggleAxis={this.props.onToggleAxis}\n                {...seriesValuesProps}\n              />\n            ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\ninterface LegendTableHeaderProps {\n  statName: LegendStat;\n  onClick?: (statName: LegendStat) => void;\n}\n\nclass LegendTableHeaderItem extends PureComponent<LegendTableHeaderProps & LegendSortProps> {\n  onClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick(this.props.statName);\n    }\n  };\n\n  render() {\n    const { statName, sort, sortDesc } = this.props;\n    return (\n      <th className=\"pointer\" onClick={this.onClick}>\n        {statName}\n        {sort === statName && <Icon name={sortDesc ? 'angle-down' : 'angle-up'} />}\n      </th>\n    );\n  }\n}\n\nexport class Legend extends PureComponent<GraphLegendProps> {\n  render() {\n    return (\n      <CustomScrollbar hideHorizontalTrack>\n        <GraphLegend {...this.props} />\n      </CustomScrollbar>\n    );\n  }\n}\n\nexport default Legend;\n","/**\n * To align two Y axes by Y level\n * @param yAxes data [{min: min_y1, min: max_y1}, {min: min_y2, max: max_y2}]\n * @param level Y level\n */\nexport function alignYLevel(yAxes: any, level: any) {\n  if (isNaN(level) || !checkCorrectAxis(yAxes)) {\n    return;\n  }\n\n  const [yLeft, yRight] = yAxes;\n  moveLevelToZero(yLeft, yRight, level);\n\n  expandStuckValues(yLeft, yRight);\n\n  // one of graphs on zero\n  const zero = yLeft.min === 0 || yRight.min === 0 || yLeft.max === 0 || yRight.max === 0;\n\n  const oneSide = checkOneSide(yLeft, yRight);\n\n  if (zero && oneSide) {\n    yLeft.min = yLeft.max > 0 ? 0 : yLeft.min;\n    yLeft.max = yLeft.max > 0 ? yLeft.max : 0;\n    yRight.min = yRight.max > 0 ? 0 : yRight.min;\n    yRight.max = yRight.max > 0 ? yRight.max : 0;\n  } else {\n    if (checkOppositeSides(yLeft, yRight)) {\n      if (yLeft.min >= 0) {\n        yLeft.min = -yLeft.max;\n        yRight.max = -yRight.min;\n      } else {\n        yLeft.max = -yLeft.min;\n        yRight.min = -yRight.max;\n      }\n    } else {\n      const rate = getRate(yLeft, yRight);\n\n      if (oneSide) {\n        // all graphs above the Y level\n        if (yLeft.min > 0) {\n          yLeft.min = yLeft.max / rate;\n          yRight.min = yRight.max / rate;\n        } else {\n          yLeft.max = yLeft.min / rate;\n          yRight.max = yRight.min / rate;\n        }\n      } else {\n        if (checkTwoCross(yLeft, yRight)) {\n          yLeft.min = yRight.min ? yRight.min * rate : yLeft.min;\n          yRight.min = yLeft.min ? yLeft.min / rate : yRight.min;\n          yLeft.max = yRight.max ? yRight.max * rate : yLeft.max;\n          yRight.max = yLeft.max ? yLeft.max / rate : yRight.max;\n        } else {\n          yLeft.min = yLeft.min > 0 ? yRight.min * rate : yLeft.min;\n          yRight.min = yRight.min > 0 ? yLeft.min / rate : yRight.min;\n          yLeft.max = yLeft.max < 0 ? yRight.max * rate : yLeft.max;\n          yRight.max = yRight.max < 0 ? yLeft.max / rate : yRight.max;\n        }\n      }\n    }\n  }\n\n  restoreLevelFromZero(yLeft, yRight, level);\n}\n\nfunction expandStuckValues(yLeft: { max: number; min: number }, yRight: { max: number; min: number }) {\n  // wide Y min and max using increased wideFactor\n  const wideFactor = 0.25;\n  if (yLeft.max === yLeft.min) {\n    yLeft.min -= wideFactor;\n    yLeft.max += wideFactor;\n  }\n  if (yRight.max === yRight.min) {\n    yRight.min -= wideFactor;\n    yRight.max += wideFactor;\n  }\n}\n\nfunction moveLevelToZero(yLeft: { min: number; max: number }, yRight: { min: number; max: number }, level: number) {\n  if (level !== 0) {\n    yLeft.min -= level;\n    yLeft.max -= level;\n    yRight.min -= level;\n    yRight.max -= level;\n  }\n}\n\nfunction restoreLevelFromZero(\n  yLeft: { min: number; max: number },\n  yRight: { min: number; max: number },\n  level: number\n) {\n  if (level !== 0) {\n    yLeft.min += level;\n    yLeft.max += level;\n    yRight.min += level;\n    yRight.max += level;\n  }\n}\n\ninterface AxisSide {\n  max: number;\n  min: number;\n}\n\nfunction checkCorrectAxis(axis: any[]): boolean {\n  return axis.length === 2 && checkCorrectAxes(axis[0]) && checkCorrectAxes(axis[1]);\n}\n\nfunction checkCorrectAxes(axes: any): boolean {\n  return 'min' in axes && 'max' in axes;\n}\n\nfunction checkOneSide(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // on the one hand with respect to zero\n  return (yLeft.min >= 0 && yRight.min >= 0) || (yLeft.max <= 0 && yRight.max <= 0);\n}\n\nfunction checkTwoCross(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // both across zero\n  return yLeft.min <= 0 && yLeft.max >= 0 && yRight.min <= 0 && yRight.max >= 0;\n}\n\nfunction checkOppositeSides(yLeft: AxisSide, yRight: AxisSide): boolean {\n  // on the opposite sides with respect to zero\n  return (yLeft.min >= 0 && yRight.max <= 0) || (yLeft.max <= 0 && yRight.min >= 0);\n}\n\nfunction getRate(yLeft: AxisSide, yRight: AxisSide): number {\n  if (checkTwoCross(yLeft, yRight)) {\n    const rateLeft = yRight.min ? yLeft.min / yRight.min : 0;\n    const rateRight = yRight.max ? yLeft.max / yRight.max : 0;\n\n    return rateLeft > rateRight ? rateLeft : rateRight;\n  }\n\n  if (checkOneSide(yLeft, yRight)) {\n    const absLeftMin = Math.abs(yLeft.min);\n    const absLeftMax = Math.abs(yLeft.max);\n    const absRightMin = Math.abs(yRight.min);\n    const absRightMax = Math.abs(yRight.max);\n    const upLeft = Math.max(absLeftMin, absLeftMax);\n    const downLeft = Math.min(absLeftMin, absLeftMax);\n    const upRight = Math.max(absRightMin, absRightMax);\n    const downRight = Math.min(absRightMin, absRightMax);\n\n    const rateLeft = downLeft !== 0 ? upLeft / downLeft : upLeft;\n    const rateRight = downRight !== 0 ? upRight / downRight : upRight;\n\n    return rateLeft > rateRight ? rateLeft : rateRight;\n  }\n\n  if (yLeft.min > 0 || yRight.min > 0) {\n    return yLeft.max / yRight.max;\n  } else {\n    return yLeft.min / yRight.min;\n  }\n}\n","import { each, filter, keys } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\nimport { AnnotationEvent } from '@grafana/data';\nimport {\n  ALERTING_COLOR,\n  DEFAULT_ANNOTATION_COLOR,\n  NO_DATA_COLOR,\n  OK_COLOR,\n  PENDING_COLOR,\n  REGION_FILL_ALPHA,\n} from '@grafana/ui';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\n\nexport class EventManager {\n  event: AnnotationEvent | null = null;\n  editorOpen = false;\n\n  constructor(private panelCtrl: MetricsPanelCtrl) {}\n\n  editorClosed() {\n    this.event = null;\n    this.editorOpen = false;\n    this.panelCtrl.render();\n  }\n\n  editorOpened() {\n    this.editorOpen = true;\n  }\n\n  updateTime(range: { from: any; to: any }) {\n    if (!this.event) {\n      this.event = {};\n      this.event.dashboardUID = this.panelCtrl.dashboard.uid;\n      this.event.panelId = this.panelCtrl.panel.id;\n    }\n\n    // update time\n    this.event.time = range.from;\n    this.event.isRegion = false;\n\n    if (range.to) {\n      this.event.timeEnd = range.to;\n      this.event.isRegion = true;\n    }\n\n    this.panelCtrl.render();\n  }\n\n  editEvent(event: AnnotationEvent, elem?: any) {\n    this.event = event;\n    this.panelCtrl.render();\n  }\n\n  addFlotEvents(annotations: any, flotOptions: any) {\n    if (!this.event && annotations.length === 0) {\n      return;\n    }\n\n    const types: any = {\n      $__alerting: {\n        color: ALERTING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__ok: {\n        color: OK_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__no_data: {\n        color: NO_DATA_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__pending: {\n        color: PENDING_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n      $__editing: {\n        color: DEFAULT_ANNOTATION_COLOR,\n        position: 'BOTTOM',\n        markerSize: 5,\n      },\n    };\n\n    if (this.event) {\n      if (this.event.isRegion) {\n        annotations = [\n          {\n            isRegion: true,\n            min: this.event.time,\n            timeEnd: this.event.timeEnd,\n            text: this.event.text,\n            eventType: '$__editing',\n            editModel: this.event,\n          },\n        ];\n      } else {\n        annotations = [\n          {\n            min: this.event.time,\n            text: this.event.text,\n            editModel: this.event,\n            eventType: '$__editing',\n          },\n        ];\n      }\n    } else {\n      // annotations from query\n      for (let i = 0; i < annotations.length; i++) {\n        const item = annotations[i];\n\n        // add properties used by jquery flot events\n        item.min = item.time;\n        item.max = item.time;\n        item.eventType = item.type;\n\n        if (item.newState) {\n          item.eventType = '$__' + item.newState;\n          continue;\n        }\n\n        if (!types[item.type]) {\n          types[item.type] = {\n            color: item.color,\n            position: 'BOTTOM',\n            markerSize: 5,\n          };\n        }\n      }\n    }\n\n    const regions = getRegions(annotations);\n    addRegionMarking(regions, flotOptions);\n\n    const eventSectionHeight = 20;\n    const eventSectionMargin = 7;\n    flotOptions.grid.eventSectionHeight = eventSectionMargin;\n    flotOptions.xaxis.eventSectionHeight = eventSectionHeight;\n\n    flotOptions.events = {\n      levels: keys(types).length + 1,\n      data: annotations,\n      types: types,\n      manager: this,\n    };\n  }\n}\n\nfunction getRegions(events: AnnotationEvent[]) {\n  return filter(events, 'isRegion');\n}\n\nfunction addRegionMarking(regions: any[], flotOptions: { grid: { markings: any } }) {\n  const markings = flotOptions.grid.markings;\n  const defaultColor = DEFAULT_ANNOTATION_COLOR;\n  let fillColor;\n\n  each(regions, (region) => {\n    if (region.source) {\n      fillColor = region.color || defaultColor;\n    } else {\n      fillColor = defaultColor;\n    }\n\n    fillColor = addAlphaToRGB(fillColor, REGION_FILL_ALPHA);\n    markings.push({\n      xaxis: { from: region.min, to: region.timeEnd },\n      color: fillColor,\n    });\n  });\n}\n\nfunction addAlphaToRGB(colorString: string, alpha: number): string {\n  const color = tinycolor(colorString);\n  if (color.isValid()) {\n    color.setAlpha(alpha);\n    return color.toRgbString();\n  } else {\n    return colorString;\n  }\n}\n","import $ from 'jquery';\n\nimport {\n  textUtil,\n  systemDateFormats,\n  LegacyGraphHoverClearEvent,\n  LegacyGraphHoverEvent,\n  DataHoverClearEvent,\n} from '@grafana/data';\nimport { appEvents } from 'app/core/core';\nimport { CoreEvents } from 'app/types';\n\nexport default function GraphTooltip(this: any, elem: any, dashboard: any, scope: any, getSeriesFn: any) {\n  const self = this;\n  const ctrl = scope.ctrl;\n  const panel = ctrl.panel;\n  const hoverEvent = new LegacyGraphHoverEvent({ pos: {}, point: {}, panel: this.panel });\n\n  const $tooltip = $('<div class=\"graph-tooltip\">');\n\n  this.destroy = () => {\n    $tooltip.remove();\n  };\n\n  this.findHoverIndexFromDataPoints = (posX: number, series: any, last: number) => {\n    const ps = series.datapoints.pointsize;\n    const initial = last * ps;\n    const len = series.datapoints.points.length;\n    let j;\n    for (j = initial; j < len; j += ps) {\n      // Special case of a non stepped line, highlight the very last point just before a null point\n      if (\n        (!series.lines.steps && series.datapoints.points[initial] != null && series.datapoints.points[j] == null) ||\n        //normal case\n        series.datapoints.points[j] > posX\n      ) {\n        return Math.max(j - ps, 0) / ps;\n      }\n    }\n    return j / ps - 1;\n  };\n\n  this.findHoverIndexFromData = (posX: any, series: any) => {\n    let lower = 0;\n    let upper = series.data.length - 1;\n    let middle;\n    while (true) {\n      if (lower > upper) {\n        return Math.max(upper, 0);\n      }\n      middle = Math.floor((lower + upper) / 2);\n      if (series.data[middle][0] === posX) {\n        return middle;\n      } else if (series.data[middle][0] < posX) {\n        lower = middle + 1;\n      } else {\n        upper = middle - 1;\n      }\n    }\n  };\n\n  this.renderAndShow = (absoluteTime: string, innerHtml: string, pos: { pageX: number; pageY: any }, xMode: string) => {\n    if (xMode === 'time') {\n      innerHtml = '<div class=\"graph-tooltip-time\">' + absoluteTime + '</div>' + innerHtml;\n    }\n    $tooltip.html(innerHtml).place_tt(pos.pageX, pos.pageY, { offset: 10 });\n  };\n\n  this.getMultiSeriesPlotHoverInfo = function (seriesList: any[], pos: { x: number }) {\n    let value, i, series, hoverIndex, hoverDistance, pointTime, yaxis;\n    // 3 sub-arrays, 1st for hidden series, 2nd for left yaxis, 3rd for right yaxis.\n    let results: any = [[], [], []];\n\n    //now we know the current X (j) position for X and Y values\n    let lastValue = 0; //needed for stacked values\n\n    let minDistance, minTime;\n\n    for (i = 0; i < seriesList.length; i++) {\n      series = seriesList[i];\n\n      if (!series.data.length || (panel.legend.hideEmpty && series.allIsNull)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (!series.data.length || (panel.legend.hideZero && series.allIsZero)) {\n        // Init value so that it does not brake series sorting\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      if (series.hideTooltip) {\n        results[0].push({ hidden: true, value: 0 });\n        continue;\n      }\n\n      hoverIndex = this.findHoverIndexFromData(pos.x, series);\n      hoverDistance = pos.x - series.data[hoverIndex][0];\n      pointTime = series.data[hoverIndex][0];\n\n      // Take the closest point before the cursor, or if it does not exist, the closest after\n      if (\n        !minDistance ||\n        (hoverDistance >= 0 && (hoverDistance < minDistance || minDistance < 0)) ||\n        (hoverDistance < 0 && hoverDistance > minDistance)\n      ) {\n        minDistance = hoverDistance;\n        minTime = pointTime;\n      }\n\n      value = series.data[hoverIndex][1];\n\n      if (series.stack && value !== null && panel.tooltip.value_type !== 'individual') {\n        lastValue += value;\n        value = lastValue;\n      }\n\n      // Highlighting multiple Points depending on the plot type\n      if (series.lines.steps || series.stack) {\n        // stacked and steppedLine plots can have series with different length.\n        // Stacked series can increase its length on each new stacked serie if null points found,\n        // to speed the index search we begin always on the last found hoverIndex.\n        hoverIndex = this.findHoverIndexFromDataPoints(pos.x, series, hoverIndex);\n      }\n\n      // Be sure we have a yaxis so that it does not brake series sorting\n      yaxis = 0;\n      if (series.yaxis) {\n        yaxis = series.yaxis.n;\n      }\n\n      results[yaxis].push({\n        value: value,\n        hoverIndex: hoverIndex,\n        color: series.color,\n        label: series.aliasEscaped,\n        time: pointTime,\n        distance: hoverDistance,\n        index: i,\n      });\n    }\n\n    // Contat the 3 sub-arrays\n    results = results[0].concat(results[1], results[2]);\n\n    // Time of the point closer to pointer\n    results.time = minTime;\n\n    return results;\n  };\n\n  elem.mouseleave(() => {\n    if (panel.tooltip?.shared) {\n      const plot = elem.data().plot;\n      if (plot) {\n        $tooltip.detach();\n        plot.unhighlight();\n      }\n    }\n    dashboard.events.publish(new LegacyGraphHoverClearEvent());\n    dashboard.events.publish(new DataHoverClearEvent());\n  });\n\n  elem.bind('plothover', (event: any, pos: { panelRelY: number; pageY: number }, item: any) => {\n    self.show(pos, item);\n\n    // broadcast to other graph panels that we are hovering!\n    if (!dashboard.panelInEdit) {\n      pos.panelRelY = (pos.pageY - elem.offset().top) / elem.height();\n      hoverEvent.payload.pos = pos;\n      hoverEvent.payload.panel = panel;\n      hoverEvent.payload.point['time'] = (pos as any).x;\n      dashboard.events.publish(hoverEvent);\n    }\n  });\n\n  elem.bind('plotclick', (event: any, pos: any, item: any) => {\n    appEvents.emit(CoreEvents.graphClicked, { pos: pos, panel: panel, item: item });\n  });\n\n  elem.bind('plotleave', () => {\n    if (!panel.tooltip.shared) {\n      return;\n    }\n\n    const plot = elem.data().plot;\n    if (plot) {\n      $tooltip.detach();\n      plot.unhighlight();\n    }\n  });\n\n  this.clear = (plot: { clearCrosshair: () => void; unhighlight: () => void }) => {\n    $tooltip.detach();\n    plot.clearCrosshair();\n    plot.unhighlight();\n  };\n\n  this.show = (pos: any, item: any) => {\n    const plot = elem.data().plot;\n    const plotData = plot.getData();\n    const xAxes = plot.getXAxes();\n    const xMode = xAxes[0].options.mode;\n    const seriesList = getSeriesFn();\n    let allSeriesMode = panel.tooltip.shared;\n    let group, value, absoluteTime, hoverInfo, i, series, seriesHtml, tooltipFormat;\n\n    // if panelRelY is defined another panel wants us to show a tooltip\n    // get pageX from position on x axis and pageY from relative position in original panel\n    if (pos.panelRelY) {\n      const pointOffset = plot.pointOffset({ x: pos.x });\n      if (Number.isNaN(pointOffset.left) || pointOffset.left < 0 || pointOffset.left > elem.width()) {\n        self.clear(plot);\n        return;\n      }\n\n      pos.pageX = elem.offset().left + pointOffset.left;\n      pos.pageY = elem.offset().top + elem.height() * pos.panelRelY;\n\n      const scrollTop = $(window).scrollTop() ?? 0;\n      const isVisible = pos.pageY >= scrollTop && pos.pageY <= $(window).innerHeight()! + scrollTop;\n\n      if (!isVisible) {\n        self.clear(plot);\n        return;\n      }\n\n      plot.setCrosshair(pos);\n      allSeriesMode = true;\n\n      if (dashboard.sharedCrosshairModeOnly()) {\n        // if only crosshair mode we are done\n        return;\n      }\n    }\n\n    if (seriesList.length === 0) {\n      return;\n    }\n\n    if (seriesList[0].hasMsResolution) {\n      tooltipFormat = systemDateFormats.fullDateMS;\n    } else {\n      tooltipFormat = systemDateFormats.fullDate;\n    }\n\n    if (allSeriesMode) {\n      plot.unhighlight();\n\n      const seriesHoverInfo = self.getMultiSeriesPlotHoverInfo(plotData, pos);\n\n      seriesHtml = '';\n\n      absoluteTime = dashboard.formatDate(seriesHoverInfo.time, tooltipFormat);\n\n      // Dynamically reorder the hovercard for the current time point if the\n      // option is enabled.\n      if (panel.tooltip.sort === 2) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return b.value - a.value;\n        });\n      } else if (panel.tooltip.sort === 1) {\n        seriesHoverInfo.sort((a: { value: number }, b: { value: number }) => {\n          return a.value - b.value;\n        });\n      }\n\n      for (i = 0; i < seriesHoverInfo.length; i++) {\n        hoverInfo = seriesHoverInfo[i];\n\n        if (hoverInfo.hidden) {\n          continue;\n        }\n\n        let highlightClass = '';\n        if (item && hoverInfo.index === item.seriesIndex) {\n          highlightClass = 'graph-tooltip-list-item--highlight';\n        }\n\n        series = seriesList[hoverInfo.index];\n        value = textUtil.sanitize(series.formatValue(hoverInfo.value));\n\n        const color = textUtil.sanitize(hoverInfo.color);\n        const label = textUtil.sanitize(hoverInfo.label);\n\n        seriesHtml +=\n          '<div class=\"graph-tooltip-list-item ' + highlightClass + '\"><div class=\"graph-tooltip-series-name\">';\n        seriesHtml += '<i class=\"fa fa-minus\" style=\"color:' + color + ';\"></i> ' + label + ':</div>';\n        seriesHtml += '<div class=\"graph-tooltip-value\">' + value + '</div></div>';\n        plot.highlight(hoverInfo.index, hoverInfo.hoverIndex);\n      }\n\n      self.renderAndShow(absoluteTime, seriesHtml, pos, xMode);\n    } else if (item) {\n      // single series tooltip\n      const color = textUtil.sanitize(item.series.color);\n      series = seriesList[item.seriesIndex];\n      group = '<div class=\"graph-tooltip-list-item\"><div class=\"graph-tooltip-series-name\">';\n      group += '<i class=\"fa fa-minus\" style=\"color:' + color + ';\"></i> ' + series.aliasEscaped + ':</div>';\n\n      if (panel.stack && panel.tooltip.value_type === 'individual') {\n        value = item.datapoint[1] - item.datapoint[2];\n      } else {\n        value = item.datapoint[1];\n      }\n\n      value = textUtil.sanitize(series.formatValue(value));\n      absoluteTime = dashboard.formatDate(item.datapoint[0], tooltipFormat);\n\n      group += '<div class=\"graph-tooltip-value\">' + value + '</div>';\n\n      self.renderAndShow(absoluteTime, group, pos, xMode);\n    } else {\n      // no hit\n      $tooltip.detach();\n    }\n  };\n}\n","import { histogram } from 'd3';\n\nimport TimeSeries from 'app/core/time_series2';\n\n/**\n * Convert series into array of series values.\n * @param data Array of series\n */\nexport function getSeriesValues(dataList: TimeSeries[]): number[] {\n  const VALUE_INDEX = 0;\n  const values = [];\n\n  // Count histogam stats\n  for (let i = 0; i < dataList.length; i++) {\n    const series = dataList[i];\n    const datapoints = series.datapoints;\n    for (let j = 0; j < datapoints.length; j++) {\n      if (datapoints[j][VALUE_INDEX] !== null) {\n        values.push(datapoints[j][VALUE_INDEX]);\n      }\n    }\n  }\n\n  return values;\n}\n\n/**\n * Convert array of values into timeseries-like histogram:\n * [[val_1, count_1], [val_2, count_2], ..., [val_n, count_n]]\n * @param values\n * @param bucketSize\n */\nexport function convertValuesToHistogram(values: number[], bucketSize: number, min: number, max: number): any[] {\n  const minBound = getBucketBound(min, bucketSize);\n  const maxBound = getBucketBound(max, bucketSize);\n\n  const histGenerator = histogram()\n    .domain([minBound, maxBound])\n    .thresholds(Math.round(max - min) / bucketSize);\n\n  return histGenerator(values).map((bin) => {\n    return [bin.x0, bin.length];\n  });\n}\n\n/**\n * Convert series into array of histogram data.\n * @param data Array of series\n * @param bucketSize\n */\nexport function convertToHistogramData(\n  data: any,\n  bucketSize: number,\n  hiddenSeries: any,\n  min: number,\n  max: number\n): any[] {\n  return data.map((series: any) => {\n    const values = getSeriesValues([series]);\n    series.histogram = true;\n    if (!hiddenSeries[series.alias]) {\n      const histogram = convertValuesToHistogram(values, bucketSize, min, max);\n      series.data = histogram;\n    } else {\n      series.data = [];\n    }\n    return series;\n  });\n}\n\nfunction getBucketBound(value: number, bucketSize: number): number {\n  return Math.floor(value / bucketSize) * bucketSize;\n}\n","import 'vendor/flot/jquery.flot';\nimport $ from 'jquery';\nimport { isNumber } from 'lodash';\n\nimport { PanelCtrl } from 'app/angular/panel/panel_ctrl';\nimport { config } from 'app/core/config';\nimport { CoreEvents } from 'app/types';\n\nexport class ThresholdManager {\n  plot: any;\n  placeholder: any;\n  height: any;\n  thresholds: any;\n  needsCleanup = false;\n  hasSecondYAxis: any;\n\n  constructor(private panelCtrl: PanelCtrl) {}\n\n  getHandleHtml(handleIndex: any, model: { colorMode: string }, valueStr: any) {\n    let stateClass = model.colorMode;\n    if (model.colorMode === 'custom') {\n      stateClass = 'critical';\n    }\n\n    return `\n    <div class=\"alert-handle-wrapper alert-handle-wrapper--T${handleIndex}\">\n      <div class=\"alert-handle-line alert-handle-line--${stateClass}\">\n      </div>\n      <div class=\"alert-handle\" data-handle-index=\"${handleIndex}\">\n        <i class=\"icon-gf icon-gf-${stateClass} alert-state-${stateClass}\"></i>\n        <span class=\"alert-handle-value\">${valueStr}<i class=\"alert-handle-grip\"></i></span>\n      </div>\n    </div>`;\n  }\n\n  initDragging(evt: any) {\n    const handleElem = $(evt.currentTarget).parents('.alert-handle-wrapper');\n    const handleIndex = $(evt.currentTarget).data('handleIndex');\n\n    let lastY: number | null = null;\n    let posTop: number;\n    const plot = this.plot;\n    const panelCtrl = this.panelCtrl;\n    const model = this.thresholds[handleIndex];\n\n    function dragging(evt: any) {\n      if (lastY === null) {\n        lastY = evt.clientY;\n      } else {\n        const diff = evt.clientY - lastY;\n        posTop = posTop + diff;\n        lastY = evt.clientY;\n        handleElem.css({ top: posTop + diff });\n      }\n    }\n\n    function stopped() {\n      // calculate graph level\n      let graphValue = plot.c2p({ left: 0, top: posTop }).y;\n      graphValue = parseInt(graphValue.toFixed(0), 10);\n      model.value = graphValue;\n\n      handleElem.off('mousemove', dragging);\n      document.removeEventListener('mouseup', stopped);\n\n      // trigger digest and render\n      panelCtrl.$scope.$apply(() => {\n        panelCtrl.render();\n        panelCtrl.events.emit(CoreEvents.thresholdChanged, {\n          threshold: model,\n          handleIndex: handleIndex,\n        });\n      });\n    }\n\n    lastY = null;\n    posTop = handleElem.position().top;\n\n    handleElem.on('mousemove', dragging);\n    document.addEventListener('mouseup', stopped);\n  }\n\n  cleanUp() {\n    this.placeholder.find('.alert-handle-wrapper').remove();\n    this.needsCleanup = false;\n  }\n\n  renderHandle(handleIndex: number, defaultHandleTopPos: number) {\n    const model = this.thresholds[handleIndex];\n    // alerting defines\n    if (!model.visible && (this.panelCtrl as any).alert) {\n      return;\n    }\n\n    const value = model.value;\n    let valueStr = value;\n    let handleTopPos = 0;\n\n    // handle no value\n    if (!isNumber(value)) {\n      valueStr = '';\n      handleTopPos = defaultHandleTopPos;\n    } else {\n      const valueCanvasPos = this.plot.p2c({ x: 0, y: value });\n      handleTopPos = Math.round(Math.min(Math.max(valueCanvasPos.top, 0), this.height) - 6);\n    }\n\n    const handleElem = $(this.getHandleHtml(handleIndex, model, valueStr));\n    this.placeholder.append(handleElem);\n\n    handleElem.toggleClass('alert-handle-wrapper--no-value', valueStr === '');\n    handleElem.css({ top: handleTopPos });\n  }\n\n  shouldDrawHandles() {\n    // @ts-ignore\n    return !this.hasSecondYAxis && this.panelCtrl.editingThresholds && this.panelCtrl.panel.thresholds.length > 0;\n  }\n\n  prepare(elem: JQuery, data: any[]) {\n    this.hasSecondYAxis = false;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].yaxis > 1) {\n        this.hasSecondYAxis = true;\n        break;\n      }\n    }\n\n    if (this.shouldDrawHandles()) {\n      const thresholdMargin = this.panelCtrl.panel.thresholds.length > 1 ? '220px' : '110px';\n      elem.css('margin-right', thresholdMargin);\n    } else if (this.needsCleanup) {\n      elem.css('margin-right', '0');\n    }\n  }\n\n  draw(plot: any) {\n    this.thresholds = this.panelCtrl.panel.thresholds;\n    this.plot = plot;\n    this.placeholder = plot.getPlaceholder();\n\n    if (this.needsCleanup) {\n      this.cleanUp();\n    }\n\n    if (!this.shouldDrawHandles()) {\n      return;\n    }\n\n    this.height = plot.height();\n\n    if (this.thresholds.length > 0) {\n      this.renderHandle(0, 10);\n    }\n    if (this.thresholds.length > 1) {\n      this.renderHandle(1, this.height - 30);\n    }\n\n    this.placeholder.off('mousedown', '.alert-handle');\n    this.placeholder.on('mousedown', '.alert-handle', this.initDragging.bind(this));\n    this.needsCleanup = true;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.thresholds || panel.thresholds.length === 0) {\n      return;\n    }\n\n    let gtLimit = Infinity;\n    let ltLimit = -Infinity;\n    let i, threshold, other;\n\n    for (i = 0; i < panel.thresholds.length; i++) {\n      threshold = panel.thresholds[i];\n      if (!isNumber(threshold.value)) {\n        continue;\n      }\n\n      let limit;\n      switch (threshold.op) {\n        case 'gt': {\n          limit = gtLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value > threshold.value) {\n              limit = other.value;\n              ltLimit = limit;\n            }\n          }\n          break;\n        }\n        case 'lt': {\n          limit = ltLimit;\n          // if next threshold is less then op and greater value, then use that as limit\n          if (panel.thresholds.length > i + 1) {\n            other = panel.thresholds[i + 1];\n            if (other.value < threshold.value) {\n              limit = other.value;\n              gtLimit = limit;\n            }\n          }\n          break;\n        }\n      }\n\n      let fillColor, lineColor;\n\n      switch (threshold.colorMode) {\n        case 'critical': {\n          fillColor = 'rgba(234, 112, 112, 0.12)';\n          lineColor = 'rgba(237, 46, 24, 0.60)';\n          break;\n        }\n        case 'warning': {\n          fillColor = 'rgba(235, 138, 14, 0.12)';\n          lineColor = 'rgba(247, 149, 32, 0.60)';\n          break;\n        }\n        case 'ok': {\n          fillColor = 'rgba(11, 237, 50, 0.090)';\n          lineColor = 'rgba(6,163,69, 0.60)';\n          break;\n        }\n        case 'custom': {\n          fillColor = threshold.fillColor;\n          lineColor = threshold.lineColor;\n          break;\n        }\n      }\n\n      // fill\n      if (threshold.fill) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: limit },\n            color: config.theme2.visualization.getColorByName(fillColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: limit },\n            color: config.theme2.visualization.getColorByName(fillColor),\n          });\n        }\n      }\n      if (threshold.line) {\n        if (threshold.yaxis === 'right' && this.hasSecondYAxis) {\n          options.grid.markings.push({\n            y2axis: { from: threshold.value, to: threshold.value },\n            color: config.theme2.visualization.getColorByName(lineColor),\n          });\n        } else {\n          options.grid.markings.push({\n            yaxis: { from: threshold.value, to: threshold.value },\n            color: config.theme2.visualization.getColorByName(lineColor),\n          });\n        }\n      }\n    }\n  }\n}\n","import { AbsoluteTimeRange, dateTime, TimeRange } from '@grafana/data';\n\nexport interface TimeRegionConfig {\n  from?: string;\n  fromDayOfWeek?: number; // 1-7\n\n  to?: string;\n  toDayOfWeek?: number; // 1-7\n}\n\ninterface ParsedTime {\n  dayOfWeek?: number; // 1-7\n  h?: number; // 0-23\n  m?: number; // 0-59\n  s?: number; // 0-59\n}\n\nexport function calculateTimesWithin(cfg: TimeRegionConfig, tRange: TimeRange): AbsoluteTimeRange[] {\n  if (!(cfg.fromDayOfWeek || cfg.from) && !(cfg.toDayOfWeek || cfg.to)) {\n    return [];\n  }\n\n  // So we can mutate\n  const timeRegion = { ...cfg };\n\n  if (timeRegion.from && !timeRegion.to) {\n    timeRegion.to = timeRegion.from;\n  }\n\n  if (!timeRegion.from && timeRegion.to) {\n    timeRegion.from = timeRegion.to;\n  }\n\n  const hRange = {\n    from: parseTimeRange(timeRegion.from),\n    to: parseTimeRange(timeRegion.to),\n  };\n\n  if (!timeRegion.fromDayOfWeek && timeRegion.toDayOfWeek) {\n    timeRegion.fromDayOfWeek = timeRegion.toDayOfWeek;\n  }\n\n  if (!timeRegion.toDayOfWeek && timeRegion.fromDayOfWeek) {\n    timeRegion.toDayOfWeek = timeRegion.fromDayOfWeek;\n  }\n\n  if (timeRegion.fromDayOfWeek) {\n    hRange.from.dayOfWeek = Number(timeRegion.fromDayOfWeek);\n  }\n\n  if (timeRegion.toDayOfWeek) {\n    hRange.to.dayOfWeek = Number(timeRegion.toDayOfWeek);\n  }\n\n  if (hRange.from.dayOfWeek && hRange.from.h == null && hRange.from.m == null) {\n    hRange.from.h = 0;\n    hRange.from.m = 0;\n    hRange.from.s = 0;\n  }\n\n  if (hRange.to.dayOfWeek && hRange.to.h == null && hRange.to.m == null) {\n    hRange.to.h = 23;\n    hRange.to.m = 59;\n    hRange.to.s = 59;\n  }\n\n  if (!hRange.from || !hRange.to) {\n    return [];\n  }\n\n  if (hRange.from.h == null) {\n    hRange.from.h = 0;\n  }\n\n  if (hRange.to.h == null) {\n    hRange.to.h = 23;\n  }\n\n  const regions: AbsoluteTimeRange[] = [];\n\n  const fromStart = dateTime(tRange.from);\n  fromStart.set('hour', 0);\n  fromStart.set('minute', 0);\n  fromStart.set('second', 0);\n  fromStart.add(hRange.from.h, 'hours');\n  fromStart.add(hRange.from.m, 'minutes');\n  fromStart.add(hRange.from.s, 'seconds');\n\n  while (fromStart.unix() <= tRange.to.unix()) {\n    while (hRange.from.dayOfWeek && hRange.from.dayOfWeek !== fromStart.isoWeekday()) {\n      fromStart.add(24, 'hours');\n    }\n\n    if (fromStart.unix() > tRange.to.unix()) {\n      break;\n    }\n\n    const fromEnd = dateTime(fromStart);\n\n    if (fromEnd.hour) {\n      if (hRange.from.h <= hRange.to.h) {\n        fromEnd.add(hRange.to.h - hRange.from.h, 'hours');\n      } else if (hRange.from.h > hRange.to.h) {\n        while (fromEnd.hour() !== hRange.to.h) {\n          fromEnd.add(1, 'hours');\n        }\n      } else {\n        fromEnd.add(24 - hRange.from.h, 'hours');\n\n        while (fromEnd.hour() !== hRange.to.h) {\n          fromEnd.add(1, 'hours');\n        }\n      }\n    }\n\n    fromEnd.set('minute', hRange.to.m ?? 0);\n    fromEnd.set('second', hRange.to.s ?? 0);\n\n    while (hRange.to.dayOfWeek && hRange.to.dayOfWeek !== fromEnd.isoWeekday()) {\n      fromEnd.add(24, 'hours');\n    }\n\n    const outsideRange =\n      (fromStart.unix() < tRange.from.unix() && fromEnd.unix() < tRange.from.unix()) ||\n      (fromStart.unix() > tRange.to.unix() && fromEnd.unix() > tRange.to.unix());\n\n    if (!outsideRange) {\n      regions.push({ from: fromStart.valueOf(), to: fromEnd.valueOf() });\n    }\n\n    fromStart.add(24, 'hours');\n  }\n\n  return regions;\n}\n\nfunction parseTimeRange(str?: string): ParsedTime {\n  const result: ParsedTime = {};\n  if (!str?.length) {\n    return result;\n  }\n\n  const timeRegex = /^([\\d]+):?(\\d{2})?/;\n  const match = timeRegex.exec(str);\n\n  if (!match) {\n    return result;\n  }\n\n  if (match.length > 1) {\n    result.h = Number(match[1]);\n    result.m = 0;\n\n    if (match.length > 2 && match[2] !== undefined) {\n      result.m = Number(match[2]);\n    }\n\n    if (result.h > 23) {\n      result.h = 23;\n    }\n\n    if (result.m > 59) {\n      result.m = 59;\n    }\n  }\n\n  return result;\n}\n","import 'vendor/flot/jquery.flot';\nimport { map } from 'lodash';\n\nimport { dateTime, GrafanaTheme2, TimeRange } from '@grafana/data';\nimport { config } from 'app/core/config';\nimport { calculateTimesWithin, TimeRegionConfig } from 'app/core/utils/timeRegions';\n\ntype TimeRegionColorDefinition = {\n  fill: string | null;\n  line: string | null;\n};\n\nexport const colorModes: any = {\n  gray: {\n    themeDependent: true,\n    title: 'Gray',\n    darkColor: { fill: 'rgba(255, 255, 255, 0.09)', line: 'rgba(255, 255, 255, 0.2)' },\n    lightColor: { fill: 'rgba(0, 0, 0, 0.09)', line: 'rgba(0, 0, 0, 0.2)' },\n  },\n  red: {\n    title: 'Red',\n    color: { fill: 'rgba(234, 112, 112, 0.12)', line: 'rgba(237, 46, 24, 0.60)' },\n  },\n  green: {\n    title: 'Green',\n    color: { fill: 'rgba(11, 237, 50, 0.090)', line: 'rgba(6,163,69, 0.60)' },\n  },\n  blue: {\n    title: 'Blue',\n    color: { fill: 'rgba(11, 125, 238, 0.12)', line: 'rgba(11, 125, 238, 0.60)' },\n  },\n  yellow: {\n    title: 'Yellow',\n    color: { fill: 'rgba(235, 138, 14, 0.12)', line: 'rgba(247, 149, 32, 0.60)' },\n  },\n  custom: { title: 'Custom' },\n};\n\nexport function getColorModes() {\n  return map(Object.keys(colorModes), (key) => {\n    return {\n      key,\n      value: colorModes[key].title,\n    };\n  });\n}\n\nfunction getColor(timeRegion: any, theme: GrafanaTheme2): TimeRegionColorDefinition {\n  if (Object.keys(colorModes).indexOf(timeRegion.colorMode) === -1) {\n    timeRegion.colorMode = 'red';\n  }\n\n  if (timeRegion.colorMode === 'custom') {\n    return {\n      fill: timeRegion.fill && timeRegion.fillColor ? theme.visualization.getColorByName(timeRegion.fillColor) : null,\n      line: timeRegion.line && timeRegion.lineColor ? theme.visualization.getColorByName(timeRegion.lineColor) : null,\n    };\n  }\n\n  const colorMode = colorModes[timeRegion.colorMode];\n\n  if (colorMode.themeDependent === true) {\n    return theme.isLight ? colorMode.lightColor : colorMode.darkColor;\n  }\n\n  return {\n    fill: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.fill) : null,\n    line: timeRegion.fill ? theme.visualization.getColorByName(colorMode.color.line) : null,\n  };\n}\n\ninterface GraphTimeRegionConfig extends TimeRegionConfig {\n  colorMode: string;\n\n  fill: boolean;\n  fillColor: string;\n\n  line: boolean;\n  lineColor: string;\n}\n\nexport class TimeRegionManager {\n  plot: any;\n  timeRegions?: TimeRegionConfig[];\n\n  constructor(private panelCtrl: any) {}\n\n  draw(plot: any) {\n    this.timeRegions = this.panelCtrl.panel.timeRegions;\n    this.plot = plot;\n  }\n\n  addFlotOptions(options: any, panel: any) {\n    if (!panel.timeRegions?.length) {\n      return;\n    }\n\n    // The panel range\n    const tRange: TimeRange = {\n      from: dateTime(this.panelCtrl.range.from).utc(),\n      to: dateTime(this.panelCtrl.range.to).utc(),\n      raw: {\n        from: '',\n        to: '',\n      },\n    };\n\n    for (const tr of panel.timeRegions) {\n      const timeRegion: GraphTimeRegionConfig = tr;\n      const regions = calculateTimesWithin(tr, tRange);\n      if (regions.length) {\n        const timeRegionColor = getColor(timeRegion, config.theme2);\n\n        for (let j = 0; j < regions.length; j++) {\n          const r = regions[j];\n          if (timeRegion.fill) {\n            options.grid.markings.push({\n              xaxis: { from: r.from, to: r.to },\n              color: timeRegionColor.fill,\n            });\n          }\n\n          if (timeRegion.line) {\n            options.grid.markings.push({\n              xaxis: { from: r.from, to: r.from },\n              color: timeRegionColor.line,\n            });\n            options.grid.markings.push({\n              xaxis: { from: r.to, to: r.to },\n              color: timeRegionColor.line,\n            });\n          }\n        }\n      }\n    }\n  }\n}\n","import 'vendor/flot/jquery.flot';\nimport 'vendor/flot/jquery.flot.selection';\nimport 'vendor/flot/jquery.flot.time';\nimport 'vendor/flot/jquery.flot.stack';\nimport 'vendor/flot/jquery.flot.stackpercent';\nimport 'vendor/flot/jquery.flot.fillbelow';\nimport 'vendor/flot/jquery.flot.crosshair';\nimport 'vendor/flot/jquery.flot.dashes';\nimport './jquery.flot.events';\n\nimport $ from 'jquery';\nimport { clone, find, flatten, isUndefined, map, max as _max, min as _min, sortBy as _sortBy, toNumber } from 'lodash';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n  DataFrame,\n  DataFrameView,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  DataHoverPayload,\n  DecimalCount,\n  FieldDisplay,\n  FieldType,\n  formattedValueToString,\n  getDisplayProcessor,\n  getFlotPairsConstant,\n  getTimeField,\n  getValueFormat,\n  hasLinks,\n  LegacyEventHandler,\n  LegacyGraphHoverClearEvent,\n  LegacyGraphHoverEvent,\n  LegacyGraphHoverEventPayload,\n  LinkModelSupplier,\n  PanelEvents,\n  toUtc,\n} from '@grafana/data';\nimport { graphTickFormatter, graphTimeFormat, MenuItemProps, MenuItemsGroup } from '@grafana/ui';\nimport { coreModule } from 'app/angular/core_module';\nimport config from 'app/core/config';\nimport { updateLegendValues } from 'app/core/core';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport { provideTheme } from 'app/core/utils/ConfigProvider';\nimport { tickStep } from 'app/core/utils/ticks';\nimport { TimeSrv } from 'app/features/dashboard/services/TimeSrv';\nimport { getFieldLinksSupplier } from 'app/features/panel/panellinks/linkSuppliers';\n\nimport { DashboardModel } from '../../../features/dashboard/state';\n\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { GraphLegendProps, Legend } from './Legend/Legend';\nimport { alignYLevel } from './align_yaxes';\nimport { EventManager } from './event_manager';\nimport GraphTooltip from './graph_tooltip';\nimport { convertToHistogramData } from './histogram';\nimport { GraphCtrl } from './module';\nimport { ThresholdManager } from './threshold_manager';\nimport { TimeRegionManager } from './time_region_manager';\nimport { isLegacyGraphHoverEvent } from './utils';\n\nconst LegendWithThemeProvider = provideTheme(Legend, config.theme2);\n\nclass GraphElement {\n  ctrl: GraphCtrl;\n  contextMenu: GraphContextMenuCtrl;\n  tooltip: any;\n  dashboard: DashboardModel;\n  annotations: object[];\n  panel: any;\n  plot: any;\n  sortedSeries?: any[];\n  data: any[] = [];\n  panelWidth: number;\n  eventManager: EventManager;\n  thresholdManager: ThresholdManager;\n  timeRegionManager: TimeRegionManager;\n  declare legendElem: HTMLElement;\n\n  constructor(\n    private scope: any,\n    private elem: JQuery & {\n      bind(eventType: string, handler: (eventObject: JQueryEventObject, ...args: any[]) => any): JQuery; // need to extend with Plot\n    },\n    private timeSrv: TimeSrv\n  ) {\n    this.ctrl = scope.ctrl;\n    this.contextMenu = scope.ctrl.contextMenuCtrl;\n    this.dashboard = this.ctrl.dashboard;\n    this.panel = this.ctrl.panel;\n    this.annotations = [];\n\n    this.panelWidth = 0;\n    this.eventManager = new EventManager(this.ctrl);\n    this.thresholdManager = new ThresholdManager(this.ctrl);\n    this.timeRegionManager = new TimeRegionManager(this.ctrl);\n    // @ts-ignore\n    this.tooltip = new GraphTooltip(this.elem, this.ctrl.dashboard, this.scope, () => {\n      return this.sortedSeries;\n    });\n\n    // panel events\n    this.ctrl.events.on(PanelEvents.panelTeardown, this.onPanelTeardown.bind(this));\n    this.ctrl.events.on(PanelEvents.render, this.onRender.bind(this));\n\n    // global events\n    // Using old way here to use the scope unsubscribe model as the new $on function does not take scope\n    this.ctrl.dashboard.events.on(LegacyGraphHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(LegacyGraphHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope);\n\n    this.ctrl.dashboard.events.on(DataHoverEvent.type, this.onGraphHover.bind(this), this.scope);\n    this.ctrl.dashboard.events.on(DataHoverClearEvent.type, this.onGraphHoverClear.bind(this), this.scope);\n\n    // plot events\n    this.elem.bind('plotselected', this.onPlotSelected.bind(this));\n    this.elem.bind('plotclick', this.onPlotClick.bind(this));\n\n    // get graph legend element\n    if (this.elem && this.elem.parent) {\n      this.legendElem = this.elem.parent().find('.graph-legend')[0];\n    }\n  }\n\n  onRender(renderData: any[]) {\n    this.data = renderData || this.data;\n    if (!this.data) {\n      return;\n    }\n\n    this.annotations = this.ctrl.annotations || [];\n    this.buildFlotPairs(this.data);\n    const graphHeight = this.ctrl.height;\n    updateLegendValues(this.data, this.panel, graphHeight);\n\n    if (!this.panel.legend.show) {\n      if (this.legendElem.hasChildNodes()) {\n        ReactDOM.unmountComponentAtNode(this.legendElem);\n      }\n      this.renderPanel();\n      return;\n    }\n\n    const { values, min, max, avg, current, total } = this.panel.legend;\n    const { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero } = this.panel.legend;\n    const legendOptions = { alignAsTable, rightSide, sideWidth, sort, sortDesc, hideEmpty, hideZero };\n    const valueOptions = { values, min, max, avg, current, total };\n    const legendProps: GraphLegendProps = {\n      seriesList: this.data,\n      hiddenSeries: this.ctrl.hiddenSeries,\n      ...legendOptions,\n      ...valueOptions,\n      onToggleSeries: this.ctrl.onToggleSeries,\n      onToggleSort: this.ctrl.onToggleSort,\n      onColorChange: this.ctrl.onColorChange,\n      onToggleAxis: this.ctrl.onToggleAxis,\n    };\n\n    const legendReactElem = React.createElement(LegendWithThemeProvider, legendProps);\n    ReactDOM.render(legendReactElem, this.legendElem, () => this.renderPanel());\n  }\n\n  onGraphHover(evt: LegacyGraphHoverEventPayload | DataHoverPayload) {\n    // ignore other graph hover events if shared tooltip is disabled\n    if (!this.dashboard.sharedTooltipModeEnabled()) {\n      return;\n    }\n\n    if (isLegacyGraphHoverEvent(evt)) {\n      // ignore if we are the emitter\n      if (!this.plot || evt.panel?.id === this.panel.id || this.ctrl.otherPanelInFullscreenMode()) {\n        return;\n      }\n\n      this.tooltip.show(evt.pos);\n    }\n\n    // DataHoverEvent can come from multiple panels that doesn't include x position\n    if (!evt.point?.time) {\n      return;\n    }\n\n    this.tooltip.show({ x: evt.point.time, panelRelY: evt.point.panelRelY ?? 1 });\n  }\n\n  onPanelTeardown() {\n    if (this.plot) {\n      this.plot.destroy();\n      this.plot = null;\n    }\n\n    this.tooltip.destroy();\n    this.elem.off();\n    this.elem.remove();\n\n    ReactDOM.unmountComponentAtNode(this.legendElem);\n  }\n\n  onGraphHoverClear(handler: LegacyEventHandler<any>) {\n    if (this.plot) {\n      this.tooltip.clear(this.plot);\n    }\n  }\n\n  onPlotSelected(event: JQueryEventObject, ranges: any) {\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      this.plot.clearSelection();\n      return;\n    }\n\n    if ((ranges.ctrlKey || ranges.metaKey) && this.dashboard.canAddAnnotations()) {\n      // Add annotation\n      setTimeout(() => {\n        this.eventManager.updateTime(ranges.xaxis);\n      }, 100);\n    } else {\n      this.scope.$apply(() => {\n        this.timeSrv.setTime({\n          from: toUtc(ranges.xaxis.from),\n          to: toUtc(ranges.xaxis.to),\n        });\n      });\n    }\n  }\n\n  getContextMenuItemsSupplier = (\n    flotPosition: { x: number; y: number },\n    linksSupplier?: LinkModelSupplier<FieldDisplay>\n  ): (() => MenuItemsGroup[]) => {\n    return () => {\n      // Fixed context menu items\n      const items: MenuItemsGroup[] = this.dashboard.canAddAnnotations()\n        ? [\n            {\n              items: [\n                {\n                  label: 'Add annotation',\n                  ariaLabel: 'Add annotation',\n                  icon: 'comment-alt',\n                  onClick: () => this.eventManager.updateTime({ from: flotPosition.x, to: null }),\n                },\n              ],\n            },\n          ]\n        : [];\n\n      if (!linksSupplier) {\n        return items;\n      }\n\n      const dataLinks = [\n        {\n          items: linksSupplier.getLinks(this.panel.replaceVariables).map<MenuItemProps>((link) => {\n            return {\n              label: link.title,\n              ariaLabel: link.title,\n              url: link.href,\n              target: link.target,\n              icon: link.target === '_self' ? 'link' : 'external-link-alt',\n              onClick: link.onClick,\n            };\n          }),\n        },\n      ];\n\n      return [...items, ...dataLinks];\n    };\n  };\n\n  onPlotClick(event: JQueryEventObject, pos: any, item: any) {\n    const scrollContextElement = this.elem.closest('.view') ? this.elem.closest('.view').get()[0] : null;\n    const contextMenuSourceItem = item;\n\n    if (this.panel.xaxis.mode !== 'time') {\n      // Skip if panel in histogram or series mode\n      return;\n    }\n\n    if (pos.ctrlKey || pos.metaKey) {\n      // Skip if range selected (added in \"plotselected\" event handler)\n      if (pos.x !== pos.x1) {\n        return;\n      }\n\n      // skip if dashboard is not saved yet (exists in db) or user cannot edit\n      if (!this.dashboard.id || !this.dashboard.canAddAnnotations()) {\n        return;\n      }\n\n      setTimeout(() => {\n        this.eventManager.updateTime({ from: pos.x, to: null });\n      }, 100);\n      return;\n    } else {\n      this.tooltip.clear(this.plot);\n      let linksSupplier: LinkModelSupplier<FieldDisplay> | undefined;\n\n      if (item) {\n        // pickup y-axis index to know which field's config to apply\n        const yAxisConfig = this.panel.yaxes[item.series.yaxis.n === 2 ? 1 : 0];\n        const dataFrame = this.ctrl.dataList[item.series.dataFrameIndex];\n        const field = dataFrame.fields[item.series.fieldIndex];\n        const dataIndex = this.getDataIndexWithNullValuesCorrection(item, dataFrame);\n\n        let links: any[] = this.panel.options.dataLinks || [];\n        const hasLinksValue = hasLinks(field);\n        if (hasLinksValue) {\n          // Append the configured links to the panel datalinks\n          links = [...links, ...field.config.links!];\n        }\n        const fieldConfig = {\n          decimals: yAxisConfig.decimals,\n          links,\n        };\n        const fieldDisplay = getDisplayProcessor({\n          field: { config: fieldConfig, type: FieldType.number },\n          theme: config.theme2,\n          timeZone: this.dashboard.getTimezone(),\n        })(field.values.get(dataIndex));\n        linksSupplier = links.length\n          ? getFieldLinksSupplier({\n              display: fieldDisplay,\n              name: field.name,\n              view: new DataFrameView(dataFrame),\n              rowIndex: dataIndex,\n              colIndex: item.series.fieldIndex,\n              field: fieldConfig,\n              hasLinks: hasLinksValue,\n            })\n          : undefined;\n      }\n\n      this.scope.$apply(() => {\n        // Setting nearest CustomScrollbar element as a scroll context for graph context menu\n        this.contextMenu.setScrollContextElement(scrollContextElement);\n        this.contextMenu.setSource(contextMenuSourceItem);\n        this.contextMenu.setMenuItemsSupplier(this.getContextMenuItemsSupplier(pos, linksSupplier) as any);\n        this.contextMenu.toggleMenu(pos);\n      });\n    }\n  }\n\n  getDataIndexWithNullValuesCorrection(item: any, dataFrame: DataFrame): number {\n    /** This is one added to handle the scenario where we have null values in\n     *  the time series data and the: \"visualization options -> null value\"\n     *  set to \"connected\". In this scenario we will get the wrong dataIndex.\n     *\n     *  https://github.com/grafana/grafana/issues/22651\n     */\n    const { datapoint, dataIndex } = item;\n\n    if (!Array.isArray(datapoint) || datapoint.length === 0) {\n      return dataIndex;\n    }\n\n    const ts = datapoint[0];\n    const { timeField } = getTimeField(dataFrame);\n\n    if (!timeField || !timeField.values) {\n      return dataIndex;\n    }\n\n    const field = timeField.values.get(dataIndex);\n\n    if (field === ts) {\n      return dataIndex;\n    }\n\n    const correctIndex = timeField.values.toArray().findIndex((value) => value === ts);\n    return correctIndex > -1 ? correctIndex : dataIndex;\n  }\n\n  shouldAbortRender() {\n    if (!this.data) {\n      return true;\n    }\n\n    if (this.panelWidth === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  drawHook(plot: any) {\n    // add left axis labels\n    if (this.panel.yaxes[0].label && this.panel.yaxes[0].show) {\n      $(\"<div class='axisLabel left-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[0].label)\n        .appendTo(this.elem);\n    }\n\n    // add right axis labels\n    if (this.panel.yaxes[1].label && this.panel.yaxes[1].show) {\n      $(\"<div class='axisLabel right-yaxis-label flot-temp-elem'></div>\")\n        .text(this.panel.yaxes[1].label)\n        .appendTo(this.elem);\n    }\n\n    const { dataWarning } = this.ctrl;\n    if (dataWarning) {\n      const msg = $(`<div class=\"datapoints-warning flot-temp-elem\">${dataWarning.title}</div>`);\n      if (dataWarning.action) {\n        $(`<button class=\"btn btn-secondary\">${dataWarning.actionText}</button>`)\n          .click(dataWarning.action)\n          .appendTo(msg);\n      }\n      msg.appendTo(this.elem);\n    }\n    this.thresholdManager.draw(plot);\n    this.timeRegionManager.draw(plot);\n  }\n\n  processOffsetHook(plot: any, gridMargin: { left: number; right: number }) {\n    const left = this.panel.yaxes[0];\n    const right = this.panel.yaxes[1];\n    if (left.show && left.label) {\n      gridMargin.left = 20;\n    }\n    if (right.show && right.label) {\n      gridMargin.right = 20;\n    }\n\n    // apply y-axis min/max options\n    const yaxis = plot.getYAxes();\n    for (let i = 0; i < yaxis.length; i++) {\n      const axis: any = yaxis[i];\n      const panelOptions = this.panel.yaxes[i];\n      axis.options.max = axis.options.max !== null ? axis.options.max : panelOptions.max;\n      axis.options.min = axis.options.min !== null ? axis.options.min : panelOptions.min;\n    }\n  }\n\n  processRangeHook(plot: any) {\n    const yAxes = plot.getYAxes();\n    const align = this.panel.yaxis.align || false;\n\n    if (yAxes.length > 1 && align === true) {\n      const level = this.panel.yaxis.alignLevel || 0;\n      alignYLevel(yAxes, parseFloat(level));\n    }\n  }\n\n  // Series could have different timeSteps,\n  // let's find the smallest one so that bars are correctly rendered.\n  // In addition, only take series which are rendered as bars for this.\n  getMinTimeStepOfSeries(data: any[]) {\n    let min = Number.MAX_VALUE;\n\n    for (let i = 0; i < data.length; i++) {\n      if (!data[i].stats.timeStep) {\n        continue;\n      }\n      if (this.panel.bars) {\n        if (data[i].bars && data[i].bars.show === false) {\n          continue;\n        }\n      } else {\n        if (typeof data[i].bars === 'undefined' || typeof data[i].bars.show === 'undefined' || !data[i].bars.show) {\n          continue;\n        }\n      }\n\n      if (data[i].stats.timeStep < min) {\n        min = data[i].stats.timeStep;\n      }\n    }\n\n    return min;\n  }\n\n  // Function for rendering panel\n  renderPanel() {\n    this.panelWidth = this.elem.width() ?? 0;\n\n    if (this.shouldAbortRender()) {\n      return;\n    }\n\n    // give space to alert editing\n    this.thresholdManager.prepare(this.elem, this.data);\n\n    // un-check dashes if lines are unchecked\n    this.panel.dashes = this.panel.lines ? this.panel.dashes : false;\n\n    // Populate element\n    const options: any = this.buildFlotOptions(this.panel);\n    this.prepareXAxis(options, this.panel);\n    this.configureYAxisOptions(this.data, options);\n    this.thresholdManager.addFlotOptions(options, this.panel);\n    this.timeRegionManager.addFlotOptions(options, this.panel);\n    this.eventManager.addFlotEvents(this.annotations, options);\n    this.sortedSeries = this.sortSeries(this.data, this.panel);\n    this.callPlot(options, true);\n  }\n\n  buildFlotPairs(data: any) {\n    for (let i = 0; i < data.length; i++) {\n      const series = data[i];\n      series.data = series.getFlotPairs(series.nullPointMode || this.panel.nullPointMode);\n\n      if (series.transform === 'constant') {\n        series.data = getFlotPairsConstant(series.data, this.ctrl.range!);\n      }\n\n      // if hidden remove points and disable stack\n      if (this.ctrl.hiddenSeries[series.alias]) {\n        series.data = [];\n        series.stack = false;\n      }\n    }\n  }\n\n  prepareXAxis(options: any, panel: any) {\n    switch (panel.xaxis.mode) {\n      case 'series': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n\n        for (let i = 0; i < this.data.length; i++) {\n          const series = this.data[i];\n          series.data = [[i + 1, series.stats[panel.xaxis.values[0]]]];\n        }\n\n        this.addXSeriesAxis(options);\n        break;\n      }\n      case 'histogram': {\n        let bucketSize: number;\n\n        if (this.data.length) {\n          let histMin = _min(map(this.data, (s) => s.stats.min));\n          let histMax = _max(map(this.data, (s) => s.stats.max));\n          const ticks = panel.xaxis.buckets || this.panelWidth / 50;\n          if (panel.xaxis.min != null) {\n            const isInvalidXaxisMin = tickStep(panel.xaxis.min, histMax, ticks) <= 0;\n            histMin = isInvalidXaxisMin ? histMin : panel.xaxis.min;\n          }\n          if (panel.xaxis.max != null) {\n            const isInvalidXaxisMax = tickStep(histMin, panel.xaxis.max, ticks) <= 0;\n            histMax = isInvalidXaxisMax ? histMax : panel.xaxis.max;\n          }\n          bucketSize = tickStep(histMin, histMax, ticks);\n          options.series.bars.barWidth = bucketSize * 0.8;\n          this.data = convertToHistogramData(this.data, bucketSize, this.ctrl.hiddenSeries, histMin, histMax);\n        } else {\n          bucketSize = 0;\n        }\n\n        this.addXHistogramAxis(options, bucketSize);\n        break;\n      }\n      case 'table': {\n        options.series.bars.barWidth = 0.7;\n        options.series.bars.align = 'center';\n        this.addXTableAxis(options);\n        break;\n      }\n      default: {\n        options.series.bars.barWidth = this.getMinTimeStepOfSeries(this.data) / 1.5;\n        this.addTimeAxis(options);\n        break;\n      }\n    }\n  }\n\n  callPlot(options: any, incrementRenderCounter: boolean) {\n    try {\n      this.plot = $.plot(this.elem, this.sortedSeries, options);\n      if (this.ctrl.renderError) {\n        delete this.ctrl.error;\n      }\n    } catch (e) {\n      console.error('flotcharts error', e);\n      this.ctrl.error = e instanceof Error ? e.message : 'Render Error';\n      this.ctrl.renderError = true;\n    }\n\n    if (incrementRenderCounter) {\n      this.ctrl.renderingCompleted();\n    }\n  }\n\n  buildFlotOptions(panel: any) {\n    let gridColor = '#c8c8c8';\n    if (config.bootData.user.lightTheme === true) {\n      gridColor = '#a1a1a1';\n    }\n    const stack = panel.stack ? true : null;\n    const options: any = {\n      hooks: {\n        draw: [this.drawHook.bind(this)],\n        processOffset: [this.processOffsetHook.bind(this)],\n        processRange: [this.processRangeHook.bind(this)],\n      },\n      legend: { show: false },\n      series: {\n        stackpercent: panel.stack ? panel.percentage : false,\n        stack: panel.percentage ? null : stack,\n        lines: {\n          show: panel.lines,\n          zero: false,\n          fill: this.translateFillOption(panel.fill),\n          fillColor: this.getFillGradient(panel.fillGradient),\n          lineWidth: panel.dashes ? 0 : panel.linewidth,\n          steps: panel.steppedLine,\n        },\n        dashes: {\n          show: panel.dashes,\n          lineWidth: panel.linewidth,\n          dashLength: [panel.dashLength, panel.spaceLength],\n        },\n        bars: {\n          show: panel.bars,\n          fill: 1,\n          barWidth: 1,\n          zero: false,\n          lineWidth: 0,\n        },\n        points: {\n          show: panel.points,\n          fill: 1,\n          fillColor: false,\n          radius: panel.points ? panel.pointradius : 2,\n        },\n        shadowSize: 0,\n      },\n      yaxes: [],\n      xaxis: {},\n      grid: {\n        minBorderMargin: 0,\n        markings: [],\n        backgroundColor: null,\n        borderWidth: 0,\n        hoverable: true,\n        clickable: true,\n        color: gridColor,\n        margin: { left: 0, right: 0 },\n        labelMarginX: 0,\n        mouseActiveRadius: 30,\n      },\n      selection: {\n        mode: 'x',\n        color: '#666',\n      },\n      crosshair: {\n        mode: 'x',\n      },\n    };\n    return options;\n  }\n\n  sortSeries(series: any, panel: any) {\n    const sortBy = panel.legend.sort;\n    const sortOrder = panel.legend.sortDesc;\n    const haveSortBy = sortBy !== null && sortBy !== undefined && panel.legend[sortBy];\n    const haveSortOrder = sortOrder !== null && sortOrder !== undefined;\n    const shouldSortBy = panel.stack && haveSortBy && haveSortOrder && panel.legend.alignAsTable;\n    const sortDesc = panel.legend.sortDesc === true ? -1 : 1;\n\n    if (shouldSortBy) {\n      return _sortBy(series, (s) => s.stats[sortBy] * sortDesc);\n    } else {\n      return _sortBy(series, (s) => s.zindex);\n    }\n  }\n\n  getFillGradient(amount: number) {\n    if (!amount) {\n      return null;\n    }\n\n    return {\n      colors: [{ opacity: 0.0 }, { opacity: amount / 10 }],\n    };\n  }\n\n  translateFillOption(fill: number) {\n    if (this.panel.percentage && this.panel.stack) {\n      return fill === 0 ? 0.001 : fill / 10;\n    } else {\n      return fill / 10;\n    }\n  }\n\n  addTimeAxis(options: any) {\n    const ticks = this.panelWidth / 100;\n    const min = isUndefined(this.ctrl.range!.from) ? null : this.ctrl.range!.from.valueOf();\n    const max = isUndefined(this.ctrl.range!.to) ? null : this.ctrl.range!.to.valueOf();\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: 'time',\n      min: min,\n      max: max,\n      label: 'Datetime',\n      ticks: ticks,\n      timeformat: graphTimeFormat(ticks, min, max),\n      tickFormatter: graphTickFormatter,\n    };\n  }\n\n  addXSeriesAxis(options: any) {\n    const ticks = map(this.data, (series, index) => {\n      return [index + 1, series.alias];\n    });\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  addXHistogramAxis(options: any, bucketSize: number) {\n    let ticks: number | number[];\n    let min: number | undefined;\n    let max: number | undefined;\n\n    const defaultTicks = this.panelWidth / 50;\n\n    if (this.data.length && bucketSize) {\n      const tickValues = [];\n\n      for (const d of this.data) {\n        for (const point of d.data) {\n          tickValues[point[0]] = true;\n        }\n      }\n\n      ticks = Object.keys(tickValues).map((v) => Number(v));\n      min = _min(ticks)!;\n      max = _max(ticks)!;\n\n      // Adjust tick step\n      let tickStep = bucketSize;\n      let ticksNum = Math.floor((max - min) / tickStep);\n      while (ticksNum > defaultTicks) {\n        tickStep = tickStep * 2;\n        ticksNum = Math.ceil((max - min) / tickStep);\n      }\n\n      // Expand ticks for pretty view\n      min = Math.floor(min / tickStep) * tickStep;\n      // 1.01 is 101% - ensure we have enough space for last bar\n      max = Math.ceil((max * 1.01) / tickStep) * tickStep;\n\n      ticks = [];\n      for (let i = min; i <= max; i += tickStep) {\n        ticks.push(i);\n      }\n    } else {\n      // Set defaults if no data\n      ticks = defaultTicks / 2;\n      min = 0;\n      max = 1;\n    }\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: min,\n      max: max,\n      label: 'Histogram',\n      ticks: ticks,\n    };\n\n    // Use 'short' format for histogram values\n    this.configureAxisMode(options.xaxis, 'short', null);\n  }\n\n  addXTableAxis(options: any) {\n    let ticks = map(this.data, (series, seriesIndex) => {\n      return map(series.datapoints, (point, pointIndex) => {\n        const tickIndex = seriesIndex * series.datapoints.length + pointIndex;\n        return [tickIndex + 1, point[1]];\n      });\n    });\n    // @ts-ignore, potential bug? is this flattenDeep?\n    ticks = flatten(ticks, true);\n\n    options.xaxis = {\n      timezone: this.dashboard.getTimezone(),\n      show: this.panel.xaxis.show,\n      mode: null,\n      min: 0,\n      max: ticks.length + 1,\n      label: 'Datetime',\n      ticks: ticks,\n    };\n  }\n\n  configureYAxisOptions(data: any, options: any) {\n    const defaults = {\n      position: 'left',\n      show: this.panel.yaxes[0].show,\n      index: 1,\n      logBase: this.panel.yaxes[0].logBase || 1,\n      min: this.parseNumber(this.panel.yaxes[0].min),\n      max: this.parseNumber(this.panel.yaxes[0].max),\n      tickDecimals: this.panel.yaxes[0].decimals,\n    };\n\n    options.yaxes.push(defaults);\n\n    if (find(data, { yaxis: 2 })) {\n      const secondY = clone(defaults);\n      secondY.index = 2;\n      secondY.show = this.panel.yaxes[1].show;\n      secondY.logBase = this.panel.yaxes[1].logBase || 1;\n      secondY.position = 'right';\n      secondY.min = this.parseNumber(this.panel.yaxes[1].min);\n      secondY.max = this.parseNumber(this.panel.yaxes[1].max);\n      secondY.tickDecimals = this.panel.yaxes[1].decimals;\n      options.yaxes.push(secondY);\n\n      this.applyLogScale(options.yaxes[1], data);\n      this.configureAxisMode(\n        options.yaxes[1],\n        this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[1].format,\n        this.panel.yaxes[1].decimals\n      );\n    }\n    this.applyLogScale(options.yaxes[0], data);\n    this.configureAxisMode(\n      options.yaxes[0],\n      this.panel.percentage && this.panel.stack ? 'percent' : this.panel.yaxes[0].format,\n      this.panel.yaxes[0].decimals\n    );\n  }\n\n  parseNumber(value: any) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n\n    return toNumber(value);\n  }\n\n  applyLogScale(axis: any, data: any) {\n    if (axis.logBase === 1) {\n      return;\n    }\n\n    const minSetToZero = axis.min === 0;\n\n    if (axis.min < Number.MIN_VALUE) {\n      axis.min = null;\n    }\n    if (axis.max < Number.MIN_VALUE) {\n      axis.max = null;\n    }\n\n    let series, i;\n    let max = axis.max,\n      min = axis.min;\n\n    for (i = 0; i < data.length; i++) {\n      series = data[i];\n      if (series.yaxis === axis.index) {\n        if (!max || max < series.stats.max) {\n          max = series.stats.max;\n        }\n        if (!min || min > series.stats.logmin) {\n          min = series.stats.logmin;\n        }\n      }\n    }\n\n    axis.transform = (v: number) => {\n      return v < Number.MIN_VALUE ? null : Math.log(v) / Math.log(axis.logBase);\n    };\n    axis.inverseTransform = (v: any) => {\n      return Math.pow(axis.logBase, v);\n    };\n\n    if (!max && !min) {\n      max = axis.inverseTransform(+2);\n      min = axis.inverseTransform(-2);\n    } else if (!max) {\n      max = min * axis.inverseTransform(+4);\n    } else if (!min) {\n      min = max * axis.inverseTransform(-4);\n    }\n\n    if (axis.min) {\n      min = axis.inverseTransform(Math.ceil(axis.transform(axis.min)));\n    } else {\n      min = axis.min = axis.inverseTransform(Math.floor(axis.transform(min)));\n    }\n    if (axis.max) {\n      max = axis.inverseTransform(Math.floor(axis.transform(axis.max)));\n    } else {\n      max = axis.max = axis.inverseTransform(Math.ceil(axis.transform(max)));\n    }\n\n    if (!min || min < Number.MIN_VALUE || !max || max < Number.MIN_VALUE) {\n      return;\n    }\n\n    if (Number.isFinite(min) && Number.isFinite(max)) {\n      if (minSetToZero) {\n        axis.min = 0.1;\n        min = 1;\n      }\n\n      axis.ticks = this.generateTicksForLogScaleYAxis(min, max, axis.logBase);\n      if (minSetToZero) {\n        axis.ticks.unshift(0.1);\n      }\n      if (axis.ticks[axis.ticks.length - 1] > axis.max) {\n        axis.max = axis.ticks[axis.ticks.length - 1];\n      }\n    } else {\n      axis.ticks = [1, 2];\n      delete axis.min;\n      delete axis.max;\n    }\n  }\n\n  generateTicksForLogScaleYAxis(min: any, max: number, logBase: number) {\n    let ticks = [];\n\n    let nextTick;\n    for (nextTick = min; nextTick <= max; nextTick *= logBase) {\n      ticks.push(nextTick);\n    }\n\n    const maxNumTicks = Math.ceil(this.ctrl.height / 25);\n    const numTicks = ticks.length;\n    if (numTicks > maxNumTicks) {\n      const factor = Math.ceil(numTicks / maxNumTicks) * logBase;\n      ticks = [];\n\n      for (nextTick = min; nextTick <= max * factor; nextTick *= factor) {\n        ticks.push(nextTick);\n      }\n    }\n\n    return ticks;\n  }\n\n  configureAxisMode(axis: { tickFormatter: (val: any, axis: any) => string }, format: string, decimals?: DecimalCount) {\n    axis.tickFormatter = (val, axis) => {\n      const formatter = getValueFormat(format);\n\n      if (!formatter) {\n        throw new Error(`Unit '${format}' is not supported`);\n      }\n\n      return formattedValueToString(formatter(val, decimals));\n    };\n  }\n}\n\n/** @ngInject */\nfunction graphDirective(timeSrv: TimeSrv, popoverSrv: any, contextSrv: ContextSrv) {\n  return {\n    restrict: 'A',\n    template: '',\n    link: (scope: any, elem: JQuery) => {\n      return new GraphElement(scope, elem, timeSrv);\n    },\n  };\n}\n\ncoreModule.directive('grafanaGraph', graphDirective);\nexport { GraphElement, graphDirective };\n","import {\n  AbsoluteTimeRange,\n  DataFrame,\n  FieldType,\n  LegacyGraphHoverEventPayload,\n  reduceField,\n  ReducerID,\n} from '@grafana/data';\n\n/**\n * Find the min and max time that covers all data\n */\nexport function getDataTimeRange(frames: DataFrame[]): AbsoluteTimeRange | undefined {\n  const range: AbsoluteTimeRange = {\n    from: Number.MAX_SAFE_INTEGER,\n    to: Number.MIN_SAFE_INTEGER,\n  };\n  let found = false;\n  const reducers = [ReducerID.min, ReducerID.max];\n  for (const frame of frames) {\n    for (const field of frame.fields) {\n      if (field.type === FieldType.time) {\n        const calcs = reduceField({ field, reducers });\n        range.from = Math.min(range.from, calcs[ReducerID.min]);\n        range.to = Math.max(range.to, calcs[ReducerID.max]);\n        found = true;\n      }\n    }\n  }\n  return found ? range : undefined;\n}\n\n// Check wether event is LegacyGraphHoverEvent\nexport function isLegacyGraphHoverEvent(event: any): event is LegacyGraphHoverEventPayload {\n  return event.hasOwnProperty('pos');\n}\n","import { map, each, isUndefined } from 'lodash';\n\nimport { textUtil } from '@grafana/data';\nimport coreModule from 'app/angular/core_module';\n\n/** @ngInject */\nexport function SeriesOverridesCtrl($scope: any, $element: JQuery, popoverSrv: any) {\n  $scope.overrideMenu = [];\n  $scope.currentOverrides = [];\n  $scope.override = $scope.override || {};\n  $scope.colorPickerModel = {};\n\n  $scope.addOverrideOption = (name: string, propertyName: string, values: any) => {\n    const option = {\n      text: name,\n      propertyName: propertyName,\n      index: $scope.overrideMenu.length,\n      values,\n      submenu: map(values, (value) => {\n        return { text: String(value), value: value };\n      }),\n    };\n\n    $scope.overrideMenu.push(option);\n  };\n\n  $scope.setOverride = (item: { propertyName: string }, subItem: { value: any }) => {\n    // handle color overrides\n    if (item.propertyName === 'color') {\n      $scope.openColorSelector($scope.override['color']);\n      return;\n    }\n\n    $scope.override[item.propertyName] = subItem.value;\n\n    // automatically disable lines for this series and the fill below to series\n    // can be removed by the user if they still want lines\n    if (item.propertyName === 'fillBelowTo') {\n      $scope.override['lines'] = false;\n      $scope.ctrl.addSeriesOverride({ alias: subItem.value, lines: false });\n    }\n\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n  };\n\n  $scope.colorSelected = (color: any) => {\n    $scope.override['color'] = color;\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.render();\n\n    // update picker model so that the picker UI will also update\n    $scope.colorPickerModel.series.color = color;\n  };\n\n  $scope.openColorSelector = (color: any) => {\n    $scope.colorPickerModel = {\n      autoClose: true,\n      colorSelected: $scope.colorSelected,\n      series: { color },\n    };\n\n    popoverSrv.show({\n      element: $element.find('.dropdown')[0],\n      position: 'top center',\n      openOn: 'click',\n      template: '<series-color-picker-popover color=\"series.color\" onColorChange=\"colorSelected\" />',\n      classNames: 'drop-popover drop-popover--transparent',\n      model: $scope.colorPickerModel,\n      onClose: () => {\n        $scope.ctrl.render();\n      },\n    });\n  };\n\n  $scope.removeOverride = (option: { propertyName: string | number }) => {\n    delete $scope.override[option.propertyName];\n    $scope.updateCurrentOverrides();\n    $scope.ctrl.refresh();\n  };\n\n  $scope.getSeriesNames = () => {\n    return map($scope.ctrl.seriesList, (series) => {\n      return textUtil.escapeHtml(series.alias);\n    });\n  };\n\n  $scope.updateCurrentOverrides = () => {\n    $scope.currentOverrides = [];\n    each($scope.overrideMenu, (option) => {\n      const value = $scope.override[option.propertyName];\n      if (isUndefined(value)) {\n        return;\n      }\n      $scope.currentOverrides.push({\n        name: option.text,\n        propertyName: option.propertyName,\n        value: String(value),\n      });\n    });\n  };\n\n  $scope.addOverrideOption('Bars', 'bars', [true, false]);\n  $scope.addOverrideOption('Lines', 'lines', [true, false]);\n  $scope.addOverrideOption('Line fill', 'fill', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Fill gradient', 'fillGradient', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Line width', 'linewidth', [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  $scope.addOverrideOption('Null point mode', 'nullPointMode', ['connected', 'null', 'null as zero']);\n  $scope.addOverrideOption('Fill below to', 'fillBelowTo', $scope.getSeriesNames());\n  $scope.addOverrideOption('Staircase line', 'steppedLine', [true, false]);\n  $scope.addOverrideOption('Dashes', 'dashes', [true, false]);\n  $scope.addOverrideOption('Hidden Series', 'hiddenSeries', [true, false]);\n  $scope.addOverrideOption(\n    'Dash Length',\n    'dashLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption(\n    'Dash Space',\n    'spaceLength',\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n  );\n  $scope.addOverrideOption('Points', 'points', [true, false]);\n  $scope.addOverrideOption('Points Radius', 'pointradius', [1, 2, 3, 4, 5]);\n  $scope.addOverrideOption('Stack', 'stack', [true, false, 'A', 'B', 'C', 'D']);\n  $scope.addOverrideOption('Color', 'color', ['change']);\n  $scope.addOverrideOption('Y-axis', 'yaxis', [1, 2]);\n  $scope.addOverrideOption('Z-index', 'zindex', [-3, -2, -1, 0, 1, 2, 3]);\n  $scope.addOverrideOption('Transform', 'transform', ['constant', 'negative-Y']);\n  $scope.addOverrideOption('Legend', 'legend', [true, false]);\n  $scope.addOverrideOption('Hide in tooltip', 'hideTooltip', [true, false]);\n  $scope.updateCurrentOverrides();\n}\n\ncoreModule.controller('SeriesOverridesCtrl', SeriesOverridesCtrl);\n","import tinycolor from 'tinycolor2';\n\nimport coreModule from 'app/angular/core_module';\nimport config from 'app/core/config';\nexport class ThresholdFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled = false;\n\n  /** @ngInject */\n  constructor(private $scope: any) {}\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n\n    if (this.panel.alert && !config.unifiedAlertingEnabled) {\n      this.disabled = true;\n    }\n\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingThresholds = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.panelCtrl.editingThresholds = true;\n  }\n\n  addThreshold() {\n    this.panel.thresholds.push({\n      value: undefined,\n      colorMode: 'critical',\n      op: 'gt',\n      fill: true,\n      line: true,\n      yaxis: 'left',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeThreshold(index: number) {\n    this.panel.thresholds.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.thresholds[index].lineColor = newColor;\n      this.render();\n    };\n  }\n\n  onThresholdTypeChange(index: number) {\n    // Because of the ng-model binding, threshold's color mode is already set here\n    if (this.panel.thresholds[index].colorMode === 'custom') {\n      this.panel.thresholds[index].fillColor = tinycolor(config.theme2.v1.palette.blue85).setAlpha(0.2).toRgbString();\n      this.panel.thresholds[index].lineColor = tinycolor(config.theme2.v1.palette.blue77).setAlpha(0.6).toRgbString();\n    }\n    this.panelCtrl.render();\n  }\n}\n\ncoreModule.directive('graphThresholdForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/thresholds_form.html',\n    controller: ThresholdFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","import coreModule from 'app/angular/core_module';\n\nimport { getColorModes } from './time_region_manager';\n\nexport class TimeRegionFormCtrl {\n  panelCtrl: any;\n  panel: any;\n  disabled = false;\n  colorModes: any;\n\n  /** @ngInject */\n  constructor(private $scope: any) {}\n\n  $onInit() {\n    this.panel = this.panelCtrl.panel;\n\n    const unbindDestroy = this.$scope.$on('$destroy', () => {\n      this.panelCtrl.editingTimeRegions = false;\n      this.panelCtrl.render();\n      unbindDestroy();\n    });\n\n    this.colorModes = getColorModes();\n    this.panelCtrl.editingTimeRegions = true;\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  addTimeRegion() {\n    this.panel.timeRegions.push({\n      op: 'time',\n      fromDayOfWeek: undefined,\n      from: undefined,\n      toDayOfWeek: undefined,\n      to: undefined,\n      colorMode: 'background6',\n      fill: true,\n      line: false,\n      // Default colors for new\n      fillColor: 'rgba(234, 112, 112, 0.12)',\n      lineColor: 'rgba(237, 46, 24, 0.60)',\n    });\n    this.panelCtrl.render();\n  }\n\n  removeTimeRegion(index: number) {\n    this.panel.timeRegions.splice(index, 1);\n    this.panelCtrl.render();\n  }\n\n  onFillColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].fillColor = newColor;\n      this.render();\n    };\n  }\n\n  onLineColorChange(index: number) {\n    return (newColor: string) => {\n      this.panel.timeRegions[index].lineColor = newColor;\n      this.render();\n    };\n  }\n}\n\ncoreModule.directive('graphTimeRegionForm', () => {\n  return {\n    restrict: 'E',\n    templateUrl: 'public/app/plugins/panel/graph/time_regions_form.html',\n    controller: TimeRegionFormCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    scope: {\n      panelCtrl: '=',\n    },\n  };\n});\n","import $ from 'jquery';\nimport { isString, escape } from 'lodash';\n\nimport coreModule from 'app/angular/core_module';\nimport { ContextSrv } from 'app/core/services/context_srv';\nimport alertDef from 'app/features/alerting/state/alertDef';\nimport { DashboardSrv } from 'app/features/dashboard/services/DashboardSrv';\n\n/** @ngInject */\nexport function annotationTooltipDirective(\n  $sanitize: any,\n  dashboardSrv: DashboardSrv,\n  contextSrv: ContextSrv,\n  $compile: any\n) {\n  function sanitizeString(str: string) {\n    try {\n      return $sanitize(str);\n    } catch (err) {\n      console.log('Could not sanitize annotation string, html escaping instead');\n      return escape(str);\n    }\n  }\n\n  return {\n    restrict: 'E',\n    scope: {\n      event: '=',\n      onEdit: '&',\n    },\n    link: (scope: any, element: JQuery) => {\n      const event = scope.event;\n      let title = event.title;\n      let text = event.text;\n      const dashboard = dashboardSrv.getCurrent();\n\n      let tooltip = '<div class=\"graph-annotation\">';\n      let titleStateClass = '';\n\n      if (event.alertId !== undefined && event.newState) {\n        const stateModel = alertDef.getStateDisplayModel(event.newState);\n        titleStateClass = stateModel.stateClass;\n        title = `<i class=\"${stateModel.iconClass}\"></i> ${stateModel.text}`;\n        text = alertDef.getAlertAnnotationInfo(event);\n        if (event.text) {\n          text = text + '<br />' + event.text;\n        }\n      } else if (title) {\n        text = title + '<br />' + (isString(text) ? text : '');\n        title = '';\n      }\n\n      let header = `<div class=\"graph-annotation__header\">`;\n      if (event.login && event.avatarUrl) {\n        header += `<div class=\"graph-annotation__user\" bs-tooltip=\"'Created by ${event.login}'\"><img src=\"${event.avatarUrl}\" /></div>`;\n      }\n      header += `\n          <span class=\"graph-annotation__title ${titleStateClass}\">${sanitizeString(title)}</span>\n          <span class=\"graph-annotation__time\">${dashboard?.formatDate(event.min)}</span>\n      `;\n\n      // Show edit icon only for users with at least Editor role\n      if (event.id && dashboard?.canEditAnnotations(event.dashboardId)) {\n        header += `\n          <span class=\"pointer graph-annotation__edit-icon\" ng-click=\"onEdit()\">\n            <i class=\"fa fa-pencil-square\"></i>\n          </span>\n        `;\n      }\n\n      header += `</div>`;\n      tooltip += header;\n      tooltip += '<div class=\"graph-annotation__body\">';\n\n      if (text) {\n        tooltip += '<div ng-non-bindable>' + sanitizeString(text.replace(/\\n/g, '<br>')) + '</div>';\n      }\n\n      const tags = event.tags;\n\n      if (tags && tags.length) {\n        scope.tags = tags;\n        tooltip +=\n          '<span class=\"label label-tag small\" ng-repeat=\"tag in tags\" tag-color-from-name=\"tag\">{{tag}}</span><br/>';\n      }\n\n      tooltip += '</div>';\n      tooltip += '</div>';\n\n      const $tooltip = $(tooltip);\n      $tooltip.appendTo(element);\n\n      $compile(element.contents())(scope);\n    },\n  };\n}\n\ncoreModule.directive('annotationTooltip', annotationTooltipDirective);\n","import { cloneDeep, isNumber } from 'lodash';\n\nimport { AnnotationEvent, dateTime } from '@grafana/data';\nimport { coreModule } from 'app/angular/core_module';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\n\nimport { contextSrv } from '../../../core/services/context_srv';\nimport { deleteAnnotation, saveAnnotation, updateAnnotation } from '../../../features/annotations/api';\nimport { getDashboardQueryRunner } from '../../../features/query/state/DashboardQueryRunner/DashboardQueryRunner';\n\nexport class EventEditorCtrl {\n  // @ts-ignore initialized through Angular not constructor\n  panelCtrl: MetricsPanelCtrl;\n  // @ts-ignore initialized through Angular not constructor\n  event: AnnotationEvent;\n  timeRange?: { from: number; to: number };\n  form: any;\n  close: any;\n  timeFormated?: string;\n\n  /** @ngInject */\n  constructor() {}\n\n  $onInit() {\n    this.event.panelId = this.panelCtrl.panel.id; // set correct id if in panel edit\n    this.event.dashboardUID = this.panelCtrl.dashboard.uid;\n\n    // Annotations query returns time as Unix timestamp in milliseconds\n    this.event.time = tryEpochToMoment(this.event.time);\n    if (this.event.isRegion) {\n      this.event.timeEnd = tryEpochToMoment(this.event.timeEnd);\n    }\n\n    this.timeFormated = this.panelCtrl.dashboard.formatDate(this.event.time!);\n  }\n\n  canDelete(): boolean {\n    if (contextSrv.accessControlEnabled()) {\n      if (this.event.source.type === 'dashboard') {\n        return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.dashboard.canDelete;\n      }\n      return !!this.panelCtrl.dashboard.meta.annotationsPermissions?.organization.canDelete;\n    }\n    return true;\n  }\n\n  async save(): Promise<void> {\n    if (!this.form.$valid) {\n      return;\n    }\n\n    const saveModel = cloneDeep(this.event);\n    saveModel.time = saveModel.time!.valueOf();\n    saveModel.timeEnd = 0;\n\n    if (saveModel.isRegion) {\n      saveModel.timeEnd = this.event.timeEnd!.valueOf();\n\n      if (saveModel.timeEnd < saveModel.time) {\n        console.log('invalid time');\n        return;\n      }\n    }\n\n    let crudFunction = saveAnnotation;\n    if (saveModel.id) {\n      crudFunction = updateAnnotation;\n    }\n\n    try {\n      await crudFunction(saveModel);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n\n  async delete(): Promise<void> {\n    try {\n      await deleteAnnotation(this.event);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.close();\n      getDashboardQueryRunner().run({ dashboard: this.panelCtrl.dashboard, range: this.panelCtrl.range });\n    }\n  }\n}\n\nfunction tryEpochToMoment(timestamp: any) {\n  if (timestamp && isNumber(timestamp)) {\n    const epoch = Number(timestamp);\n    return dateTime(epoch);\n  } else {\n    return timestamp;\n  }\n}\n\nexport function eventEditor() {\n  return {\n    restrict: 'E',\n    controller: EventEditorCtrl,\n    bindToController: true,\n    controllerAs: 'ctrl',\n    templateUrl: 'public/app/features/annotations/partials/event_editor.html',\n    scope: {\n      panelCtrl: '=',\n      event: '=',\n      close: '&',\n    },\n  };\n}\n\ncoreModule.directive('eventEditor', eventEditor);\n","import { FlotDataPoint } from '@grafana/data';\nimport { MenuItemProps } from '@grafana/ui';\n\nexport class GraphContextMenuCtrl {\n  private source?: FlotDataPoint | null;\n  private scope?: any;\n  menuItemsSupplier?: () => MenuItemProps[];\n  scrollContextElement: HTMLElement | null = null;\n  position: {\n    x: number;\n    y: number;\n  } = { x: 0, y: 0 };\n\n  isVisible: boolean;\n\n  constructor($scope: any) {\n    this.isVisible = false;\n    this.scope = $scope;\n  }\n\n  onClose = () => {\n    if (this.scrollContextElement) {\n      this.scrollContextElement.removeEventListener('scroll', this.onClose);\n    }\n\n    this.scope.$apply(() => {\n      this.isVisible = false;\n    });\n  };\n\n  toggleMenu = (event?: { pageX: number; pageY: number }) => {\n    this.isVisible = !this.isVisible;\n    if (this.isVisible && this.scrollContextElement) {\n      this.scrollContextElement.addEventListener('scroll', this.onClose);\n    }\n\n    if (this.source) {\n      this.position = {\n        x: this.source.pageX,\n        y: this.source.pageY,\n      };\n    } else {\n      this.position = {\n        x: event ? event.pageX : 0,\n        y: event ? event.pageY : 0,\n      };\n    }\n  };\n\n  // Sets element which is considered as a scroll context of given context menu.\n  // Having access to this element allows scroll event attachement for menu to be closed when user scrolls\n  setScrollContextElement = (el: HTMLElement | null) => {\n    this.scrollContextElement = el;\n  };\n\n  setSource = (source: FlotDataPoint | null) => {\n    this.source = source;\n  };\n\n  getSource = () => {\n    return this.source;\n  };\n\n  setMenuItemsSupplier = (menuItemsSupplier: () => MenuItemProps[]) => {\n    this.menuItemsSupplier = menuItemsSupplier;\n  };\n}\n","import { selectors } from '@grafana/e2e-selectors';\n\nimport { GraphCtrl } from './module';\n\nexport class AxesEditorCtrl {\n  panel: any;\n  panelCtrl: GraphCtrl;\n  logScales: any;\n  xAxisModes: any;\n  xAxisStatOptions: any;\n  xNameSegment: any;\n  selectors: typeof selectors.components.Panels.Visualization.Graph.VisualizationTab;\n\n  /** @ngInject */\n  constructor(private $scope: any) {\n    this.panelCtrl = $scope.ctrl as GraphCtrl;\n    this.panel = this.panelCtrl.panel;\n    this.$scope.ctrl = this;\n\n    this.logScales = {\n      linear: 1,\n      'log (base 2)': 2,\n      'log (base 10)': 10,\n      'log (base 32)': 32,\n      'log (base 1024)': 1024,\n    };\n\n    this.xAxisModes = {\n      Time: 'time',\n      Series: 'series',\n      Histogram: 'histogram',\n      // 'Data field': 'field',\n    };\n\n    this.xAxisStatOptions = [\n      { text: 'Avg', value: 'avg' },\n      { text: 'Min', value: 'min' },\n      { text: 'Max', value: 'max' },\n      { text: 'Total', value: 'total' },\n      { text: 'Count', value: 'count' },\n      { text: 'Current', value: 'current' },\n    ];\n\n    if (this.panel.xaxis.mode === 'custom') {\n      if (!this.panel.xaxis.name) {\n        this.panel.xaxis.name = 'specify field';\n      }\n    }\n    this.selectors = selectors.components.Panels.Visualization.Graph.VisualizationTab;\n  }\n\n  setUnitFormat(axis: { format: any }) {\n    return (unit: string) => {\n      axis.format = unit;\n      // if already set via field config we clear that\n      if (this.panel.fieldConfig.defaults.unit) {\n        this.panel.fieldConfig.defaults.unit = undefined;\n        this.panelCtrl.refresh();\n      } else {\n        this.panelCtrl.render();\n      }\n    };\n  }\n\n  render() {\n    this.panelCtrl.render();\n  }\n\n  xAxisModeChanged() {\n    this.panelCtrl.processor.setPanelDefaultsForNewXAxisMode();\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n\n  xAxisValueChanged() {\n    this.panelCtrl.onDataFramesReceived(this.panelCtrl.dataList);\n  }\n}\n\n/** @ngInject */\nexport function axesEditorComponent() {\n  'use strict';\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/app/plugins/panel/graph/axes_editor.html',\n    controller: AxesEditorCtrl,\n  };\n}\n","import './graph';\nimport './series_overrides_ctrl';\nimport './thresholds_form';\nimport './time_regions_form';\nimport './annotation_tooltip';\nimport './event_editor';\n\nimport { auto } from 'angular';\nimport { defaults, find, without } from 'lodash';\n\nimport { DataFrame, FieldConfigProperty, PanelEvents, PanelPlugin } from '@grafana/data';\nimport { locationService } from '@grafana/runtime';\nimport { MetricsPanelCtrl } from 'app/angular/panel/metrics_panel_ctrl';\nimport config from 'app/core/config';\nimport TimeSeries from 'app/core/time_series2';\nimport { ThresholdMapper } from 'app/features/alerting/state/ThresholdMapper';\nimport { changePanelPlugin } from 'app/features/panel/state/actions';\nimport { dispatch } from 'app/store/store';\n\nimport { appEvents } from '../../../core/core';\nimport { loadSnapshotData } from '../../../features/dashboard/utils/loadSnapshotData';\nimport { annotationsFromDataFrames } from '../../../features/query/state/DashboardQueryRunner/utils';\nimport { ZoomOutEvent } from '../../../types/events';\n\nimport { GraphContextMenuCtrl } from './GraphContextMenuCtrl';\nimport { graphPanelMigrationHandler } from './GraphMigrations';\nimport { axesEditorComponent } from './axes_editor';\nimport { DataProcessor } from './data_processor';\nimport template from './template';\nimport { DataWarning, GraphFieldConfig, GraphPanelOptions } from './types';\nimport { getDataTimeRange } from './utils';\n\nexport class GraphCtrl extends MetricsPanelCtrl {\n  static template = template;\n\n  renderError = false;\n  hiddenSeries: any = {};\n  hiddenSeriesTainted = false;\n  seriesList: TimeSeries[] = [];\n  dataList: DataFrame[] = [];\n  annotations: any = [];\n  alertState: any;\n\n  dataWarning?: DataWarning;\n  colors: any = [];\n  subTabIndex = 0;\n  processor: DataProcessor;\n  contextMenuCtrl: GraphContextMenuCtrl;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // sets client side (flot) or native graphite png renderer (png)\n    renderer: 'flot',\n    yaxes: [\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n      {\n        label: null,\n        show: true,\n        logBase: 1,\n        min: null,\n        max: null,\n        format: 'short',\n      },\n    ],\n    xaxis: {\n      show: true,\n      mode: 'time',\n      name: null,\n      values: [],\n      buckets: null,\n    },\n    yaxis: {\n      align: false,\n      alignLevel: null,\n    },\n    // show/hide lines\n    lines: true,\n    // fill factor\n    fill: 1,\n    // fill gradient\n    fillGradient: 0,\n    // line width in pixels\n    linewidth: 1,\n    // show/hide dashed line\n    dashes: false,\n    // show/hide line\n    hiddenSeries: false,\n    // length of a dash\n    dashLength: 10,\n    // length of space between two dashes\n    spaceLength: 10,\n    // show hide points\n    points: false,\n    // point radius in pixels\n    pointradius: 2,\n    // show hide bars\n    bars: false,\n    // enable/disable stacking\n    stack: false,\n    // stack percentage mode\n    percentage: false,\n    // legend options\n    legend: {\n      show: true, // disable/enable legend\n      values: false, // disable/enable legend values\n      min: false,\n      max: false,\n      current: false,\n      total: false,\n      avg: false,\n    },\n    // how null points should be handled\n    nullPointMode: 'null',\n    // staircase line mode\n    steppedLine: false,\n    // tooltip options\n    tooltip: {\n      value_type: 'individual',\n      shared: true,\n      sort: 0,\n    },\n    // time overrides\n    timeFrom: null,\n    timeShift: null,\n    // metric queries\n    targets: [{}],\n    // series color overrides\n    aliasColors: {},\n    // other style overrides\n    seriesOverrides: [],\n    thresholds: [],\n    timeRegions: [],\n    options: {\n      // show/hide alert threshold lines and fill\n      alertThreshold: true,\n    },\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService) {\n    super($scope, $injector);\n\n    defaults(this.panel, this.panelDefaults);\n    defaults(this.panel.tooltip, this.panelDefaults.tooltip);\n    defaults(this.panel.legend, this.panelDefaults.legend);\n    defaults(this.panel.xaxis, this.panelDefaults.xaxis);\n    defaults(this.panel.options, this.panelDefaults.options);\n\n    this.useDataFrames = true;\n    this.processor = new DataProcessor(this.panel);\n    this.contextMenuCtrl = new GraphContextMenuCtrl($scope);\n\n    this.events.on(PanelEvents.render, this.onRender.bind(this));\n    this.events.on(PanelEvents.dataFramesReceived, this.onDataFramesReceived.bind(this));\n    this.events.on(PanelEvents.dataSnapshotLoad, this.onDataSnapshotLoad.bind(this));\n    this.events.on(PanelEvents.editModeInitialized, this.onInitEditMode.bind(this));\n    this.events.on(PanelEvents.initPanelActions, this.onInitPanelActions.bind(this));\n\n    // set axes format from field config\n    const fieldConfigUnit = this.panel.fieldConfig.defaults.unit;\n    if (fieldConfigUnit) {\n      this.panel.yaxes[0].format = fieldConfigUnit;\n    }\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Display', 'public/app/plugins/panel/graph/tab_display.html');\n    this.addEditorTab('Series overrides', 'public/app/plugins/panel/graph/tab_series_overrides.html');\n    this.addEditorTab('Axes', axesEditorComponent);\n    this.addEditorTab('Legend', 'public/app/plugins/panel/graph/tab_legend.html');\n    this.addEditorTab('Thresholds', 'public/app/plugins/panel/graph/tab_thresholds.html');\n    this.addEditorTab('Time regions', 'public/app/plugins/panel/graph/tab_time_regions.html');\n    this.subTabIndex = 0;\n    this.hiddenSeriesTainted = false;\n  }\n\n  onInitPanelActions(actions: any[]) {\n    actions.push({ text: 'Toggle legend', click: 'ctrl.toggleLegend()', shortcut: 'p l' });\n  }\n\n  zoomOut(evt: any) {\n    appEvents.publish(new ZoomOutEvent({ scale: 2 }));\n  }\n\n  onDataSnapshotLoad(snapshotData: any) {\n    const { series, annotations } = loadSnapshotData(this.panel, this.dashboard);\n    this.panelData!.annotations = annotations;\n    this.onDataFramesReceived(series);\n  }\n\n  onDataFramesReceived(data: DataFrame[]) {\n    this.dataList = data;\n    this.seriesList = this.processor.getSeriesList({\n      dataList: this.dataList,\n      range: this.range,\n    });\n\n    this.dataWarning = this.getDataWarning();\n\n    this.alertState = undefined;\n    (this.seriesList as any).alertState = undefined;\n    if (this.panelData!.alertState) {\n      this.alertState = this.panelData!.alertState;\n      (this.seriesList as any).alertState = this.alertState.state;\n    }\n\n    this.annotations = [];\n    if (this.panelData!.annotations?.length) {\n      this.annotations = annotationsFromDataFrames(this.panelData!.annotations);\n    }\n\n    this.loading = false;\n    this.render(this.seriesList);\n  }\n\n  getDataWarning(): DataWarning | undefined {\n    const datapointsCount = this.seriesList.reduce((prev, series) => {\n      return prev + series.datapoints.length;\n    }, 0);\n\n    if (datapointsCount === 0) {\n      if (this.dataList) {\n        for (const frame of this.dataList) {\n          if (frame.length && frame.fields?.length) {\n            return {\n              title: 'Unable to graph data',\n              tip: 'Data exists, but is not timeseries',\n              actionText: 'Switch to table view',\n              action: () => {\n                dispatch(changePanelPlugin({ panel: this.panel, pluginId: 'table' }));\n              },\n            };\n          }\n        }\n      }\n\n      return {\n        title: 'No data',\n        tip: 'No data returned from query',\n      };\n    }\n\n    // If any data is in range, do not return an error\n    for (const series of this.seriesList) {\n      if (!series.isOutsideRange) {\n        return undefined;\n      }\n    }\n\n    // All data is outside the time range\n    const dataWarning: DataWarning = {\n      title: 'Data outside time range',\n      tip: 'Can be caused by timezone mismatch or missing time filter in query',\n    };\n\n    const range = getDataTimeRange(this.dataList);\n\n    if (range) {\n      dataWarning.actionText = 'Zoom to data';\n      dataWarning.action = () => {\n        locationService.partial({\n          from: range.from,\n          to: range.to,\n        });\n      };\n    }\n\n    return dataWarning;\n  }\n\n  onRender() {\n    if (!this.seriesList) {\n      return;\n    }\n\n    ThresholdMapper.alertToGraphThresholds(this.panel);\n\n    for (const series of this.seriesList) {\n      series.applySeriesOverrides(this.panel.seriesOverrides);\n\n      // Always use the configured field unit\n      if (series.unit) {\n        this.panel.yaxes[series.yaxis - 1].format = series.unit;\n      }\n      if (this.hiddenSeriesTainted === false && series.hiddenSeries === true) {\n        this.hiddenSeries[series.alias] = true;\n      }\n    }\n  }\n\n  onColorChange = (series: any, color: string) => {\n    series.setColor(config.theme2.visualization.getColorByName(color));\n    this.panel.aliasColors[series.alias] = color;\n    this.render();\n  };\n\n  onToggleSeries = (hiddenSeries: any) => {\n    this.hiddenSeriesTainted = true;\n    this.hiddenSeries = hiddenSeries;\n    this.render();\n  };\n\n  onToggleSort = (sortBy: any, sortDesc: any) => {\n    this.panel.legend.sort = sortBy;\n    this.panel.legend.sortDesc = sortDesc;\n    this.render();\n  };\n\n  onToggleAxis = (info: { alias: any; yaxis: any }) => {\n    let override: any = find(this.panel.seriesOverrides, { alias: info.alias });\n    if (!override) {\n      override = { alias: info.alias };\n      this.panel.seriesOverrides.push(override);\n    }\n    override.yaxis = info.yaxis;\n    this.render();\n  };\n\n  addSeriesOverride(override: any) {\n    this.panel.seriesOverrides.push(override || {});\n  }\n\n  removeSeriesOverride(override: any) {\n    this.panel.seriesOverrides = without(this.panel.seriesOverrides, override);\n    this.render();\n  }\n\n  toggleLegend() {\n    this.panel.legend.show = !this.panel.legend.show;\n    this.render();\n  }\n\n  legendValuesOptionChanged() {\n    const legend = this.panel.legend;\n    legend.values = legend.min || legend.max || legend.avg || legend.current || legend.total;\n    this.render();\n  }\n\n  onContextMenuClose = () => {\n    this.contextMenuCtrl.toggleMenu();\n  };\n\n  getTimeZone = () => this.dashboard.getTimezone();\n\n  getDataFrameByRefId = (refId: string) => {\n    return this.dataList.filter((dataFrame) => dataFrame.refId === refId)[0];\n  };\n\n  migrateToReact() {\n    this.onPluginTypeChange(config.panels['timeseries']);\n  }\n}\n\n// Use new react style configuration\nexport const plugin = new PanelPlugin<GraphPanelOptions, GraphFieldConfig>(null)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Mappings,\n    ],\n  })\n  .setDataSupport({ annotations: true, alertStates: true })\n  .setMigrationHandler(graphPanelMigrationHandler);\n\n// Use the angular ctrt rather than a react one\nplugin.angularPanelCtrl = GraphCtrl;\n","const template = `\n<div class=\"graph-panel\" ng-class=\"{'graph-panel--legend-right': ctrl.panel.legend.rightSide}\">\n  <div class=\"graph-panel__chart\" grafana-graph ng-dblclick=\"ctrl.zoomOut()\">\n  </div>\n\n  <div class=\"graph-legend\">\n    <div class=\"graph-legend-content\" graph-legend></div>\n  </div>\n  <div ng-if=\"ctrl.contextMenuCtrl.isVisible\">\n    <graph-context-menu\n      itemsGroup=\"ctrl.contextMenuCtrl.menuItemsSupplier()\"\n      on-close=\"ctrl.onContextMenuClose\"\n      getContextMenuSource=\"ctrl.contextMenuCtrl.getSource\"\n      timeZone=\"ctrl.getTimeZone()\"\n      x=\"ctrl.contextMenuCtrl.position.x\"\n      y=\"ctrl.contextMenuCtrl.position.y\"\n    ></graph-context-menu>\n  </div>\n</div>\n`;\n\nexport default template;\n","import { PanelModel, FieldConfigSource, DataLink } from '@grafana/data';\n\n/**\n * Called when upgrading from a previously saved versoin\n */\nexport const graphPanelMigrationHandler = (panel: PanelModel<any>): Partial<any> => {\n  const fieldConfig: FieldConfigSource = panel.fieldConfig ?? {\n    defaults: {},\n    overrides: [],\n  };\n\n  const options = panel.options || {};\n\n  // Move <7.1 dataLinks to the field section\n  if (options.dataLinks) {\n    fieldConfig.defaults.links = options.dataLinks as DataLink[];\n    delete options.dataLinks;\n  }\n\n  // Mutate the original panel state (only necessary because it is angular)\n  panel.options = options;\n  panel.fieldConfig = fieldConfig;\n  return options;\n};\n"],"names":["DEFAULT_PORTS","http","https","ftp","AngularLocationWrapper","constructor","this","absUrl","wrapInDeprecationWarning","hash","host","path","port","protocol","replace","search","state","url","fn","replacement","self","deprecationWarning","name","apply","arguments","window","location","origin","newHash","navigationLogger","Error","locationService","slice","URL","href","hostname","pathname","parsedPath","String","startsWith","length","parseInt","paramValue","newQuery","locationSearchToObject","key","Object","keys","undefined","updatedUrl","urlUtil","newUrl","trim","MetricsPanelCtrl","PanelCtrl","$scope","$injector","super","next","data","panelData","LoadingState","loading","processDataError","error","angularDirtyCheck","request","timeInfo","timeRange","range","useDataFrames","handleDataFrames","series","legacy","map","v","toLegacyResponseData","handleQueryResult","contextSrv","get","datasourceSrv","timeSrv","templateSrv","panel","datasource","events","on","PanelEvents","onMetricsPanelRefresh","bind","onPanelTearDown","onMetricsPanelMounted","queryRunner","getQueryRunner","querySubscription","getData","withTransforms","withFieldConfig","subscribe","panelDataObserver","unsubscribe","otherPanelInFullscreenMode","snapshotData","updateTimeRange","isArray","$timeout","emit","scopedVars","then","issueQueries","catch","err","cancelled","console","log","message","$root","$$phase","$digest","newTimeData","applyPanelTimeOverrides","run","queries","targets","panelId","id","dashboardId","dashboard","timezone","getTimezone","maxDataPoints","width","minInterval","interval","publicDashboardAccessToken","meta","cacheTimeout","transformations","snapshot","frame","toDataFrameDTO","result","plugin","$parent","editorTabs","$location","EventBusSrv","timing","config","type","pluginId","pluginName","$on","panelDidMount","panelInitialized","renderingCompleted","profiler","refresh","publishAppEvent","event","payload","appEvent","initEditMode","editModeInitiated","addEditorTab","title","directiveFn","index","icon","editorTab","isString","templateUrl","splice","push","getExtendedMenu","menu","async","otherPanelInFullscreen","render","hiddenReducerTypes","ThresholdMapper","static","alert","i","conditions","condition","evaluator","thresholds","visible","indexOf","reducer","value","params","op","value1","value2","t","fill","options","alertThreshold","line","colorMode","loadSnapshotData","getProcessedDataFrames","worker","SnapshotWorker","getDefaultTimeRange","annotationEvents","canWork","getAnnotationsInSnapshot","annotations","ArrayDataFrame","getTimeSrv","applyFieldOverrides","fieldConfig","defaults","overrides","replaceVariables","fieldConfigRegistry","theme","timeZone","getFieldLinksSupplier","links","field","getLinks","view","dataFrame","refId","text","colIndex","fields","labels","rowIndex","timeField","getTimeField","raw","values","numeric","display","formattedValueToString","time","getFieldDisplayValuesProxy","calc","vars","fmt","finalVars","link","getLinkSrv","getDataLinkUIModel","getPanelLinksSupplier","DataProcessor","getSeriesList","list","dataList","applyNullInsertThreshold","refFieldName","j","FieldType","getFieldDisplayName","datapoints","r","dateTime","valueOf","toTimeSeries","xaxis","mode","stack","first","alias","aliasEscaped","concat","dataFrameIndex","fieldIndex","colorIndex","colors","color","aliasColors","TimeSeries","unit","last","from","isOutsideRange","setPanelDefaultsForNewXAxisMode","bars","lines","points","legend","show","tooltip","shared","validateXAxisSeriesValue","validOptions","getXAxisValueOptions","find","pluckDeep","obj","property","propertyParts","split","createAnnotationToolip","element","plot","injector","getLegacyAngularInjector","content","document","createElement","innerHTML","invoke","$compile","$rootScope","eventManager","getOptions","manager","tmpScope","$new","onEdit","editEvent","$destroy","drop","Drop","target","position","classes","openOn","hoverCloseDelay","tetherOptions","constraints","to","pin","attachment","open","setTimeout","destroy","markerElementToAttachTo","createEditPopover","editorOpen","editorOpened","scope","panelCtrl","close","editorClosed","DrawableEvent","object","drawFunc","clearFunc","moveFunc","left","top","height","_object","_drawFunc","_clearFunc","_moveFunc","_position","_width","_height","draw","clear","getObject","moveTo","VisualEvent","drawableEvent","_options","_drawableEvent","_hidden","visual","getParent","_parent","isHidden","hide","unhide","EventMarkers","_events","_types","_plot","eventsEnabled","getEvents","setTypes","types","setupEvents","parts","partition","regions","$","ve","_buildDiv","vre","_buildRegDiv","sort","a","b","ao","bo","min","drawEvents","insidePlot","_insidePlot","timeEnd","overlapPlot","_overlapPlot","updateEvents","o","getPlotOffset","getXAxes","p2c","_clearEvents","val","that","container","getPlaceholder","markerSize","markerShow","lineStyle","lineWidth","markerTooltip","eventTypeId","eventType","toLowerCase","topOffset","eventSectionHeight","css","opacity","appendTo","marker","Math","round","toUpperCase","mouseenter","editModel","mouseleave","clearSelection","cursor","hover","remove","regionWidth","timeFrom","timeTo","max","right","xmin","xmax","regionStart","each","region","x","xc","point0","point1","coord0","coord1","coordMin","coordMax","init","eventMarkers","hideEvents","showEvents","setEvents","hooks","processOptions","version","LEGEND_STATS","LegendItem","PureComponent","props","e","onLabelClick","yaxis","info","setState","onToggleAxis","onColorChange","forceUpdate","renderLegendValues","asTable","legendValueItems","valueName","valueFormatted","formatValue","stats","LegendValue","onValueClick","hidden","seriesOptionClasses","classNames","valueItems","seriesLabel","LegendSeriesLabel","label","className","role","LegendSeriesIcon","onClick","selectors","onChange","enableNamedColors","ref","showColorPicker","hideColorPicker","SeriesIcon","onMouseLeave","GraphLegend","onToggleSeries","hiddenSeries","ctrlKey","metaKey","shiftKey","toggleSeriesExclusiveMode","sortLegend","seriesList","sortBy","alignAsTable","_sortBy","Infinity","sortDesc","reverse","every","forEach","optionalClass","rightSide","sideWidth","hideEmpty","hideZero","avg","current","total","seriesValuesProps","seriesHideProps","sortProps","filter","hideFromLegend","legendClass","legendStyle","minWidth","legendProps","onToggleSort","style","LegendTable","LegendSeriesList","stat","textAlign","statName","LegendTableHeaderItem","Icon","Legend","CustomScrollbar","hideHorizontalTrack","alignYLevel","yAxes","level","isNaN","axis","checkCorrectAxes","yLeft","yRight","moveLevelToZero","wideFactor","expandStuckValues","zero","oneSide","checkOneSide","checkOppositeSides","rate","checkTwoCross","rateLeft","rateRight","absLeftMin","abs","absLeftMax","absRightMin","absRightMax","upLeft","downLeft","upRight","downRight","getRate","restoreLevelFromZero","axes","EventManager","updateTime","dashboardUID","uid","isRegion","elem","addFlotEvents","flotOptions","$__alerting","ALERTING_COLOR","$__ok","OK_COLOR","$__no_data","NO_DATA_COLOR","$__pending","PENDING_COLOR","$__editing","DEFAULT_ANNOTATION_COLOR","item","newState","getRegions","markings","grid","defaultColor","fillColor","source","colorString","alpha","tinycolor","isValid","setAlpha","toRgbString","addAlphaToRGB","REGION_FILL_ALPHA","addRegionMarking","levels","GraphTooltip","getSeriesFn","ctrl","hoverEvent","LegacyGraphHoverEvent","pos","point","$tooltip","findHoverIndexFromDataPoints","posX","ps","pointsize","initial","len","steps","findHoverIndexFromData","middle","lower","upper","floor","renderAndShow","absoluteTime","innerHtml","xMode","html","place_tt","pageX","pageY","offset","getMultiSeriesPlotHoverInfo","hoverIndex","hoverDistance","pointTime","minDistance","minTime","results","lastValue","allIsNull","allIsZero","hideTooltip","value_type","n","distance","detach","unhighlight","publish","LegacyGraphHoverClearEvent","DataHoverClearEvent","panelInEdit","panelRelY","appEvents","CoreEvents","clearCrosshair","plotData","group","hoverInfo","seriesHtml","tooltipFormat","allSeriesMode","pointOffset","Number","scrollTop","innerHeight","setCrosshair","sharedCrosshairModeOnly","hasMsResolution","systemDateFormats","seriesHoverInfo","formatDate","highlightClass","seriesIndex","textUtil","highlight","datapoint","convertToHistogramData","bucketSize","getSeriesValues","histogram","minBound","getBucketBound","maxBound","domain","histGenerator","bin","x0","convertValuesToHistogram","ThresholdManager","getHandleHtml","handleIndex","model","valueStr","stateClass","initDragging","evt","handleElem","currentTarget","parents","posTop","lastY","dragging","clientY","diff","addEventListener","stopped","graphValue","c2p","y","toFixed","off","removeEventListener","$apply","threshold","cleanUp","placeholder","needsCleanup","renderHandle","defaultHandleTopPos","handleTopPos","isNumber","valueCanvasPos","append","toggleClass","shouldDrawHandles","hasSecondYAxis","editingThresholds","prepare","thresholdMargin","addFlotOptions","other","gtLimit","ltLimit","limit","lineColor","y2axis","calculateTimesWithin","cfg","tRange","fromDayOfWeek","toDayOfWeek","timeRegion","hRange","parseTimeRange","dayOfWeek","h","m","s","fromStart","set","add","unix","isoWeekday","fromEnd","hour","str","match","exec","colorModes","gray","themeDependent","darkColor","lightColor","red","green","blue","yellow","custom","getColor","visualization","getColorByName","isLight","TimeRegionManager","timeRegions","utc","tr","timeRegionColor","LegendWithThemeProvider","provideTheme","GraphElement","flotPosition","linksSupplier","items","canAddAnnotations","ariaLabel","dataLinks","contextMenu","contextMenuCtrl","panelWidth","thresholdManager","timeRegionManager","sortedSeries","onPanelTeardown","onRender","onGraphHover","onGraphHoverClear","DataHoverEvent","onPlotSelected","onPlotClick","parent","legendElem","renderData","buildFlotPairs","graphHeight","updateLegendValues","hasChildNodes","ReactDOM","renderPanel","legendOptions","valueOptions","legendReactElem","React","sharedTooltipModeEnabled","hasOwnProperty","handler","ranges","setTime","toUtc","scrollContextElement","closest","contextMenuSourceItem","x1","yAxisConfig","yaxes","dataIndex","getDataIndexWithNullValuesCorrection","hasLinksValue","hasLinks","decimals","fieldDisplay","getDisplayProcessor","DataFrameView","setScrollContextElement","setSource","setMenuItemsSupplier","getContextMenuItemsSupplier","toggleMenu","Array","ts","correctIndex","toArray","findIndex","shouldAbortRender","drawHook","dataWarning","msg","action","actionText","click","processOffsetHook","gridMargin","getYAxes","panelOptions","processRangeHook","align","alignLevel","parseFloat","getMinTimeStepOfSeries","MAX_VALUE","timeStep","dashes","buildFlotOptions","prepareXAxis","configureYAxisOptions","sortSeries","callPlot","getFlotPairs","nullPointMode","transform","getFlotPairsConstant","barWidth","addXSeriesAxis","histMin","_min","histMax","_max","ticks","buckets","tickStep","addXHistogramAxis","addXTableAxis","addTimeAxis","incrementRenderCounter","renderError","gridColor","processOffset","processRange","stackpercent","percentage","translateFillOption","getFillGradient","fillGradient","linewidth","steppedLine","dashLength","spaceLength","radius","pointradius","shadowSize","minBorderMargin","backgroundColor","borderWidth","hoverable","clickable","margin","labelMarginX","mouseActiveRadius","selection","crosshair","sortOrder","haveSortBy","haveSortOrder","shouldSortBy","zindex","amount","isUndefined","timeformat","graphTimeFormat","tickFormatter","graphTickFormatter","defaultTicks","tickValues","d","ticksNum","ceil","configureAxisMode","pointIndex","flatten","logBase","parseNumber","tickDecimals","secondY","clone","applyLogScale","format","toNumber","minSetToZero","MIN_VALUE","logmin","inverseTransform","pow","isFinite","generateTicksForLogScaleYAxis","unshift","nextTick","maxNumTicks","numTicks","factor","formatter","getValueFormat","graphDirective","popoverSrv","restrict","template","SeriesOverridesCtrl","$element","overrideMenu","currentOverrides","override","colorPickerModel","addOverrideOption","propertyName","option","submenu","setOverride","subItem","addSeriesOverride","updateCurrentOverrides","openColorSelector","colorSelected","autoClose","onClose","removeOverride","getSeriesNames","coreModule","ThresholdFormCtrl","$onInit","disabled","unbindDestroy","addThreshold","removeThreshold","onFillColorChange","newColor","onLineColorChange","onThresholdTypeChange","controller","bindToController","controllerAs","TimeRegionFormCtrl","editingTimeRegions","addTimeRegion","removeTimeRegion","annotationTooltipDirective","$sanitize","dashboardSrv","sanitizeString","escape","getCurrent","titleStateClass","alertId","stateModel","alertDef","iconClass","header","login","avatarUrl","canEditAnnotations","tags","contents","EventEditorCtrl","tryEpochToMoment","timeFormated","canDelete","annotationsPermissions","organization","form","$valid","saveModel","cloneDeep","crudFunction","saveAnnotation","updateAnnotation","getDashboardQueryRunner","deleteAnnotation","timestamp","epoch","GraphContextMenuCtrl","isVisible","el","menuItemsSupplier","AxesEditorCtrl","logScales","linear","xAxisModes","Time","Series","Histogram","xAxisStatOptions","setUnitFormat","xAxisModeChanged","processor","onDataFramesReceived","xAxisValueChanged","axesEditorComponent","GraphCtrl","renderer","timeShift","seriesOverrides","setColor","hiddenSeriesTainted","panelDefaults","onDataSnapshotLoad","onInitEditMode","onInitPanelActions","fieldConfigUnit","subTabIndex","actions","shortcut","zoomOut","ZoomOutEvent","scale","getDataWarning","alertState","annotationsFromDataFrames","reduce","prev","tip","dispatch","changePanelPlugin","frames","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","found","reducers","ReducerID","calcs","reduceField","getDataTimeRange","applySeriesOverrides","removeSeriesOverride","without","toggleLegend","legendValuesOptionChanged","migrateToReact","onPluginTypeChange","PanelPlugin","useFieldConfig","disableStandardOptions","FieldConfigProperty","setDataSupport","alertStates","setMigrationHandler","angularPanelCtrl"],"sourceRoot":""}