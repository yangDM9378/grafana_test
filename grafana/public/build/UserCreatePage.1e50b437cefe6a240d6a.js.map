{"version":3,"file":"UserCreatePage.1e50b437cefe6a240d6a.js","mappings":"uOAeA,MAEMA,EAAwB,CAC5BC,KAAM,OACNC,GAAI,WACJC,KAAM,WACNC,SAAU,6BACVC,YAAa,CAAC,CAAEC,MAAO,eAAgBC,IAAK,iBA8D9C,EA3DuB,KACrB,MAAMC,GAAUC,EAAAA,EAAAA,MAEVC,GAAWC,EAAAA,EAAAA,cACfC,UACE,MAAM,GAAEV,QAfKU,WAAyBC,EAAAA,EAAAA,KAAgBC,KAAK,mBAAoBC,GAe1DC,CAAWC,GAEhCT,EAAQU,KAAM,qBAAoBhB,IAAK,GAEzC,CAACM,IAGH,OACE,SAAC,IAAI,CAACW,MAAM,eAAenB,QAASA,EAAQ,UAC1C,SAAC,aAAa,WACZ,SAAC,IAAI,CAACU,SAAUA,EAAUU,WAAW,SAAQ,SAC1C,IAA0B,IAAzB,SAAEC,EAAQ,OAAEC,GAAQ,EACpB,OACE,iCACE,SAAC,IAAK,CACJC,MAAM,OACNC,UAAQ,EACRC,UAAWH,EAAOI,KAClBC,MAAOL,EAAOI,KAAO,wBAAqBE,EAAU,UAEpD,SAAC,EAAAC,EAAK,eAAC3B,GAAG,cAAiBmB,EAAS,OAAQ,CAAEG,UAAU,SAG1D,SAAC,IAAK,CAACD,MAAM,QAAO,UAClB,SAAC,EAAAM,EAAK,eAAC3B,GAAG,eAAkBmB,EAAS,cAGvC,SAAC,IAAK,CAACE,MAAM,WAAU,UACrB,SAAC,EAAAM,EAAK,eAAC3B,GAAG,kBAAqBmB,EAAS,cAE1C,SAAC,IAAK,CACJE,MAAM,WACNC,UAAQ,EACRC,UAAWH,EAAOQ,SAClBH,MAAOL,EAAOQ,SAAW,mEAAgEF,EAAU,UAEnG,SAAC,EAAAC,EAAK,eACJ3B,GAAG,kBACCmB,EAAS,WAAY,CACvBU,SAAWC,GAA2B,KAAjBA,EAAMC,QAAiBD,EAAME,QAAU,IAC5D,CACFC,KAAK,gBAED,OACR,SAAC,KAAM,CAACA,KAAK,SAAQ,4BACpB,OAKN,C","sources":["webpack://grafana/./public/app/features/admin/UserCreatePage.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { NavModelItem } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Form, Button, Input, Field } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\n\ninterface UserDTO {\n  name: string;\n  password: string;\n  email?: string;\n  login?: string;\n}\n\nconst createUser = async (user: UserDTO) => getBackendSrv().post('/api/admin/users', user);\n\nconst pageNav: NavModelItem = {\n  icon: 'user',\n  id: 'user-new',\n  text: 'New user',\n  subTitle: 'Create a new Grafana user.',\n  breadcrumbs: [{ title: 'Server admin', url: 'admin/users' }],\n};\n\nconst UserCreatePage = () => {\n  const history = useHistory();\n\n  const onSubmit = useCallback(\n    async (data: UserDTO) => {\n      const { id } = await createUser(data);\n\n      history.push(`/admin/users/edit/${id}`);\n    },\n    [history]\n  );\n\n  return (\n    <Page navId=\"global-users\" pageNav={pageNav}>\n      <Page.Contents>\n        <Form onSubmit={onSubmit} validateOn=\"onBlur\">\n          {({ register, errors }) => {\n            return (\n              <>\n                <Field\n                  label=\"Name\"\n                  required\n                  invalid={!!errors.name}\n                  error={errors.name ? 'Name is required' : undefined}\n                >\n                  <Input id=\"name-input\" {...register('name', { required: true })} />\n                </Field>\n\n                <Field label=\"Email\">\n                  <Input id=\"email-input\" {...register('email')} />\n                </Field>\n\n                <Field label=\"Username\">\n                  <Input id=\"username-input\" {...register('login')} />\n                </Field>\n                <Field\n                  label=\"Password\"\n                  required\n                  invalid={!!errors.password}\n                  error={errors.password ? 'Password is required and must contain at least 4 characters' : undefined}\n                >\n                  <Input\n                    id=\"password-input\"\n                    {...register('password', {\n                      validate: (value) => value.trim() !== '' && value.length >= 4,\n                    })}\n                    type=\"password\"\n                  />\n                </Field>\n                <Button type=\"submit\">Create user</Button>\n              </>\n            );\n          }}\n        </Form>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default UserCreatePage;\n"],"names":["pageNav","icon","id","text","subTitle","breadcrumbs","title","url","history","useHistory","onSubmit","useCallback","async","getBackendSrv","post","user","createUser","data","push","navId","validateOn","register","errors","label","required","invalid","name","error","undefined","I","password","validate","value","trim","length","type"],"sourceRoot":""}