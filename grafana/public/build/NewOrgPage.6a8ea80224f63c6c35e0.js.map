{"version":3,"file":"NewOrgPage.6a8ea80224f63c6c35e0.js","mappings":"4QAUA,MAAMA,EAAqB,CACzBC,mBAAkBA,EAAAA,IAGdC,GAAYC,EAAAA,EAAAA,cAAQC,EAAWJ,GAQ/BK,EAAwB,CAC5BC,KAAM,WACNC,GAAI,UACJC,KAAM,mBACNC,YAAa,CAAC,CAAEC,MAAO,eAAgBC,IAAK,gBAGjCC,EAAwB,IAA4B,IAA3B,mBAAEX,GAAoB,EAM1D,OACE,SAAC,IAAI,CAACY,MAAM,cAAcR,QAASA,EAAQ,UACzC,UAAC,aAAa,kBACZ,cAAGS,UAAU,QAAO,2RAMpB,SAAC,IAAI,CAAmBC,SAdZC,gBACVf,EAAmBgB,GACzBC,OAAOC,SAASC,MAAOC,EAAAA,EAAAA,MAAYC,UAAY,MAAM,EAYL,SACzC,IAA0B,IAAzB,SAAEC,EAAQ,OAAEC,GAAQ,EACpB,OACE,iCACE,SAAC,IAAQ,WACP,SAAC,IAAK,CAACC,MAAM,oBAAoBC,UAAWF,EAAOG,KAAMC,MAAOJ,EAAOG,MAAQH,EAAOG,KAAKE,QAAQ,UACjG,SAAC,EAAAC,EAAK,eACJC,YAAY,YACRR,EAAS,OAAQ,CACnBS,SAAU,wCAIP,OACX,SAAC,KAAM,CAACC,KAAK,SAAQ,uBACpB,QAKN,EAIX,EAAe/B,EAAUU,E","sources":["webpack://grafana/./public/app/features/org/NewOrgPage.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { NavModelItem } from '@grafana/data';\nimport { Button, Input, Field, Form, FieldSet } from '@grafana/ui';\nimport { Page } from 'app/core/components/Page/Page';\nimport { getConfig } from 'app/core/config';\n\nimport { createOrganization } from './state/actions';\n\nconst mapDispatchToProps = {\n  createOrganization,\n};\n\nconst connector = connect(undefined, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector>;\n\ninterface CreateOrgFormDTO {\n  name: string;\n}\n\nconst pageNav: NavModelItem = {\n  icon: 'building',\n  id: 'org-new',\n  text: 'New organization',\n  breadcrumbs: [{ title: 'Server admin', url: 'admin/orgs' }],\n};\n\nexport const NewOrgPage: FC<Props> = ({ createOrganization }) => {\n  const createOrg = async (newOrg: { name: string }) => {\n    await createOrganization(newOrg);\n    window.location.href = getConfig().appSubUrl + '/org';\n  };\n\n  return (\n    <Page navId=\"global-orgs\" pageNav={pageNav}>\n      <Page.Contents>\n        <p className=\"muted\">\n          Each organization contains their own dashboards, data sources, and configuration, which cannot be shared\n          shared between organizations. While users might belong to more than one organization, multiple organizations\n          are most frequently used in multi-tenant deployments.\n        </p>\n\n        <Form<CreateOrgFormDTO> onSubmit={createOrg}>\n          {({ register, errors }) => {\n            return (\n              <>\n                <FieldSet>\n                  <Field label=\"Organization name\" invalid={!!errors.name} error={errors.name && errors.name.message}>\n                    <Input\n                      placeholder=\"Org name\"\n                      {...register('name', {\n                        required: 'Organization name is required',\n                      })}\n                    />\n                  </Field>\n                </FieldSet>\n                <Button type=\"submit\">Create</Button>\n              </>\n            );\n          }}\n        </Form>\n      </Page.Contents>\n    </Page>\n  );\n};\n\nexport default connector(NewOrgPage);\n"],"names":["mapDispatchToProps","createOrganization","connector","connect","undefined","pageNav","icon","id","text","breadcrumbs","title","url","NewOrgPage","navId","className","onSubmit","async","newOrg","window","location","href","getConfig","appSubUrl","register","errors","label","invalid","name","error","message","I","placeholder","required","type"],"sourceRoot":""}