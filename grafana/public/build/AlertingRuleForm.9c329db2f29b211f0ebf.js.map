{"version":3,"file":"AlertingRuleForm.9c329db2f29b211f0ebf.js","mappings":"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","sources":["webpack://grafana/./public/app/features/alerting/unified/AlertWarning.tsx","webpack://grafana/./public/app/features/alerting/unified/api/preview.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/PreviewRuleResult.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/PreviewRule.tsx","webpack://grafana/./public/app/features/alerting/unified/types/preview.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/CloudEvaluationBehavior.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/dag.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/util.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/GroupAndNamespaceFields.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/RuleFolderPicker.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/DetailsStep.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/NotificationsStep.tsx","webpack://grafana/../../opt/drone/yarncache/js-yaml-npm-4.1.0-3606f32312-c7830dfd45.zip/node_modules/js-yaml/dist/js-yaml.mjs","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/RuleInspector.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/CloudAlertPreview.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/preview.ts","webpack://grafana/./public/app/features/alerting/unified/utils/labels.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/ExpressionEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/components/Spacer.tsx","webpack://grafana/./public/app/features/alerting/unified/components/expressions/AlertConditionIndicator.tsx","webpack://grafana/./public/app/features/alerting/unified/components/expressions/util.ts","webpack://grafana/./public/app/features/alerting/unified/components/expressions/Expression.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/ExpressionsEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/VizWrapper.tsx","webpack://grafana/./public/app/features/alerting/unified/hooks/useVizHeight.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/QueryWrapper.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/QueryRows.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/QueryEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/hooks/useRuleSourcesWithRuler.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/CloudRulesSourcePicker.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/RuleType.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/GrafanaManagedAlert.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/DisabledTooltip.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/MimirOrLokiAlert.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/MimirOrLokiRecordingRule.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/rule-types/RuleTypePicker.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/AlertType.tsx","webpack://grafana/./public/app/features/alerting/utils/dataSourceFromExpression.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/reducer.ts","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/query-and-alert-condition/QueryAndExpressionsStep.tsx","webpack://grafana/./public/app/features/alerting/unified/components/rule-editor/AlertRuleForm.tsx","webpack://grafana/./public/app/features/alerting/unified/ExistingRuleEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/RuleEditor.tsx","webpack://grafana/./public/app/features/alerting/unified/components/PanelPluginsButtonGroup.tsx","webpack://grafana/./public/app/features/alerting/unified/hooks/useAlertQueriesStatus.ts","webpack://grafana/./public/app/features/alerting/unified/hooks/useFolder.ts","webpack://grafana/./public/app/features/alerting/unified/hooks/useIsRuleEditable.ts","webpack://grafana/./public/app/features/alerting/unified/utils/timeRange.ts","webpack://grafana/./public/app/features/alerting/unified/state/AlertingQueryRunner.ts","webpack://grafana/./public/app/features/alerting/unified/utils/accessControlHooks.ts","webpack://grafana/./public/app/features/expressions/guards.ts"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Alert, LinkButton, useStyles2 } from '@grafana/ui';\n\ninterface AlertWarningProps {\n  title: string;\n  children: React.ReactNode;\n}\nexport function AlertWarning({ title, children }: AlertWarningProps) {\n  return (\n    <Alert className={useStyles2(warningStyles).warning} severity=\"warning\" title={title}>\n      <p>{children}</p>\n      <LinkButton href=\"alerting/list\">To rule list</LinkButton>\n    </Alert>\n  );\n}\n\nconst warningStyles = (theme: GrafanaTheme2) => ({\n  warning: css`\n    margin: ${theme.spacing(4)};\n  `,\n});\n","import { Observable, of } from 'rxjs';\nimport { catchError, map, share } from 'rxjs/operators';\n\nimport {\n  dataFrameFromJSON,\n  DataFrameJSON,\n  getDefaultTimeRange,\n  LoadingState,\n  PanelData,\n  withLoadingIndicator,\n} from '@grafana/data';\nimport { getBackendSrv, toDataQueryError } from '@grafana/runtime';\n\nimport {\n  isCloudPreviewRequest,\n  isGrafanaPreviewRequest,\n  PreviewRuleRequest,\n  PreviewRuleResponse,\n} from '../types/preview';\nimport { RuleFormType } from '../types/rule-form';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../utils/datasource';\n\nexport function previewAlertRule(request: PreviewRuleRequest): Observable<PreviewRuleResponse> {\n  if (isCloudPreviewRequest(request)) {\n    return fetchAlertRulePreview(request, request.dataSourceUid, RuleFormType.cloudAlerting);\n  }\n\n  if (isGrafanaPreviewRequest(request)) {\n    return fetchAlertRulePreview(request, GRAFANA_RULES_SOURCE_NAME, RuleFormType.grafana);\n  }\n\n  throw new Error('unsupported preview rule request');\n}\n\ntype AlertRulePreviewResponse = {\n  instances: DataFrameJSON[];\n};\n\nfunction fetchAlertRulePreview(\n  request: PreviewRuleRequest,\n  dataSourceUid: string,\n  ruleType: RuleFormType\n): Observable<PreviewRuleResponse> {\n  return withLoadingIndicator({\n    whileLoading: createResponse(ruleType),\n    source: getBackendSrv()\n      .fetch<AlertRulePreviewResponse>({\n        method: 'POST',\n        url: `/api/v1/rule/test/${dataSourceUid}`,\n        data: request,\n      })\n      .pipe(\n        map(({ data }) => {\n          return createResponse(ruleType, {\n            state: LoadingState.Done,\n            series: data.instances.map(dataFrameFromJSON),\n          });\n        }),\n        catchError((error: Error) => {\n          return of(\n            createResponse(ruleType, {\n              state: LoadingState.Error,\n              error: toDataQueryError(error),\n            })\n          );\n        }),\n        share()\n      ),\n  });\n}\n\nfunction createResponse(ruleType: RuleFormType, data: Partial<PanelData> = {}): PreviewRuleResponse {\n  return {\n    ruleType,\n    data: {\n      state: LoadingState.Loading,\n      series: [],\n      timeRange: getDefaultTimeRange(),\n      ...data,\n    },\n  };\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { FieldConfigSource, FieldMatcherID, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { TableCellDisplayMode, useStyles2 } from '@grafana/ui';\n\nimport { PreviewRuleResponse } from '../../types/preview';\nimport { RuleFormType } from '../../types/rule-form';\nimport { messageFromError } from '../../utils/redux';\n\ntype Props = {\n  preview: PreviewRuleResponse | undefined;\n};\n\nexport function PreviewRuleResult(props: Props): React.ReactElement | null {\n  const { preview } = props;\n  const styles = useStyles2(getStyles);\n  const fieldConfig: FieldConfigSource = {\n    defaults: {},\n    overrides: [\n      {\n        matcher: { id: FieldMatcherID.byName, options: 'Info' },\n        properties: [{ id: 'custom.displayMode', value: TableCellDisplayMode.JSONView }],\n      },\n    ],\n  };\n\n  if (!preview) {\n    return null;\n  }\n\n  const { data, ruleType } = preview;\n\n  if (data.state === LoadingState.Loading) {\n    return (\n      <div className={styles.container}>\n        <span>Loading preview...</span>\n      </div>\n    );\n  }\n\n  if (data.state === LoadingState.Error) {\n    return (\n      <div className={styles.container}>\n        {data.error ? messageFromError(data.error) : 'Failed to preview alert rule'}\n      </div>\n    );\n  }\n  return (\n    <div className={styles.container}>\n      <span>\n        Preview based on the result of running the query, for this moment.{' '}\n        {ruleType === RuleFormType.grafana ? 'Configuration for `no data` and `error handling` is not applied.' : null}\n      </span>\n      <div className={styles.table}>\n        <AutoSizer>\n          {({ width, height }) => (\n            <div style={{ width: `${width}px`, height: `${height}px` }}>\n              <PanelRenderer\n                title=\"\"\n                width={width}\n                height={height}\n                pluginId=\"table\"\n                data={data}\n                fieldConfig={fieldConfig}\n              />\n            </div>\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  );\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      margin: ${theme.spacing(2)} 0;\n    `,\n    table: css`\n      flex: 1 1 auto;\n      height: 135px;\n      margin-top: ${theme.spacing(2)};\n      border: 1px solid ${theme.colors.border.medium};\n      border-radius: ${theme.shape.borderRadius(1)};\n    `,\n  };\n}\n","import { css } from '@emotion/css';\nimport React, { useCallback, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useMountedState } from 'react-use';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { dateTimeFormatISO, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { Alert, Button, HorizontalGroup, useStyles2 } from '@grafana/ui';\n\nimport { previewAlertRule } from '../../api/preview';\nimport { useAlertQueriesStatus } from '../../hooks/useAlertQueriesStatus';\nimport { PreviewRuleRequest, PreviewRuleResponse } from '../../types/preview';\nimport { RuleFormType, RuleFormValues } from '../../types/rule-form';\n\nimport { PreviewRuleResult } from './PreviewRuleResult';\n\nconst fields: Array<keyof RuleFormValues> = ['type', 'dataSourceName', 'condition', 'queries', 'expression'];\n\nexport function PreviewRule(): React.ReactElement | null {\n  const styles = useStyles2(getStyles);\n  const [preview, onPreview] = usePreview();\n  const { watch } = useFormContext<RuleFormValues>();\n  const [type, condition, queries] = watch(['type', 'condition', 'queries']);\n  const { allDataSourcesAvailable } = useAlertQueriesStatus(queries);\n\n  if (type === RuleFormType.cloudRecording || type === RuleFormType.cloudAlerting) {\n    return null;\n  }\n\n  const isPreviewAvailable = Boolean(condition) && allDataSourcesAvailable;\n\n  return (\n    <div className={styles.container}>\n      <HorizontalGroup>\n        {allDataSourcesAvailable && (\n          <Button disabled={!isPreviewAvailable} type=\"button\" variant=\"primary\" onClick={onPreview}>\n            Preview alerts\n          </Button>\n        )}\n        {!allDataSourcesAvailable && (\n          <Alert title=\"Preview is not available\" severity=\"warning\">\n            Cannot display the query preview. Some of the data sources used in the queries are not available.\n          </Alert>\n        )}\n      </HorizontalGroup>\n      <PreviewRuleResult preview={preview} />\n    </div>\n  );\n}\n\nexport function usePreview(): [PreviewRuleResponse | undefined, () => void] {\n  const [preview, setPreview] = useState<PreviewRuleResponse | undefined>();\n  const { getValues } = useFormContext<RuleFormValues>();\n  const isMounted = useMountedState();\n\n  const onPreview = useCallback(() => {\n    const values = getValues(fields);\n    const request = createPreviewRequest(values);\n\n    previewAlertRule(request)\n      .pipe(takeWhile((response) => !isCompleted(response), true))\n      .subscribe((response) => {\n        if (!isMounted()) {\n          return;\n        }\n        setPreview(response);\n      });\n  }, [getValues, isMounted]);\n\n  return [preview, onPreview];\n}\n\nfunction createPreviewRequest(values: any[]): PreviewRuleRequest {\n  const [type, dataSourceName, condition, queries, expression] = values;\n  const dsSettings = getDataSourceSrv().getInstanceSettings(dataSourceName);\n  if (!dsSettings) {\n    throw new Error(`Cannot find data source settings for ${dataSourceName}`);\n  }\n\n  switch (type) {\n    case RuleFormType.cloudAlerting:\n      return {\n        dataSourceUid: dsSettings.uid,\n        dataSourceName,\n        expr: expression,\n      };\n\n    case RuleFormType.grafana:\n      return {\n        grafana_condition: {\n          condition,\n          data: queries,\n          now: dateTimeFormatISO(Date.now()),\n        },\n      };\n\n    default:\n      throw new Error(`Alert type ${type} not supported by preview.`);\n  }\n}\n\nfunction isCompleted(response: PreviewRuleResponse): boolean {\n  switch (response.data.state) {\n    case LoadingState.Done:\n    case LoadingState.Error:\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction getStyles(theme: GrafanaTheme2) {\n  return {\n    container: css`\n      margin-top: ${theme.spacing(2)};\n      max-width: ${theme.breakpoints.values.xxl}px;\n    `,\n  };\n}\n","import { PanelData } from '@grafana/data';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { RuleFormType } from './rule-form';\n\nexport type PreviewRuleRequest = GrafanaPreviewRuleRequest | CloudPreviewRuleRequest;\n\nexport type GrafanaPreviewRuleRequest = {\n  grafana_condition: {\n    condition: string;\n    data: AlertQuery[];\n    now: string;\n  };\n};\n\nexport type CloudPreviewRuleRequest = {\n  dataSourceUid: string;\n  dataSourceName: string;\n  expr: string;\n};\n\nexport type PreviewRuleResponse = {\n  ruleType: RuleFormType;\n  data: PanelData;\n};\n\nexport function isCloudPreviewRequest(request: PreviewRuleRequest): request is CloudPreviewRuleRequest {\n  return 'expr' in request;\n}\n\nexport function isGrafanaPreviewRequest(request: PreviewRuleRequest): request is GrafanaPreviewRuleRequest {\n  return 'grafana_condition' in request;\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Field, Input, InputControl, Select, useStyles2 } from '@grafana/ui';\n\nimport { RuleFormType, RuleFormValues } from '../../types/rule-form';\nimport { timeOptions } from '../../utils/time';\n\nimport { PreviewRule } from './PreviewRule';\nimport { RuleEditorSection } from './RuleEditorSection';\n\nexport const CloudEvaluationBehavior = () => {\n  const styles = useStyles2(getStyles);\n  const {\n    register,\n    control,\n    watch,\n    formState: { errors },\n  } = useFormContext<RuleFormValues>();\n\n  const type = watch('type');\n\n  // cloud recording rules do not have alert conditions\n  if (type === RuleFormType.cloudRecording) {\n    return null;\n  }\n\n  return (\n    <RuleEditorSection stepNo={2} title=\"Alert evaluation behavior\">\n      <Field label=\"For\" description=\"Expression has to be true for this long for the alert to be fired.\">\n        <div className={styles.flexRow}>\n          <Field invalid={!!errors.forTime?.message} error={errors.forTime?.message} className={styles.inlineField}>\n            <Input\n              {...register('forTime', { pattern: { value: /^\\d+$/, message: 'Must be a positive integer.' } })}\n              width={8}\n            />\n          </Field>\n          <InputControl\n            name=\"forTimeUnit\"\n            render={({ field: { onChange, ref, ...field } }) => (\n              <Select\n                {...field}\n                options={timeOptions}\n                onChange={(value) => onChange(value?.value)}\n                width={15}\n                className={styles.timeUnit}\n              />\n            )}\n            control={control}\n          />\n        </div>\n      </Field>\n      <PreviewRule />\n    </RuleEditorSection>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  inlineField: css`\n    margin-bottom: 0;\n  `,\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n  `,\n  timeUnit: css`\n    margin-left: ${theme.spacing(0.5)};\n  `,\n});\n","import { compact, memoize, uniq } from 'lodash';\nimport memoizeOne from 'memoize-one';\n\nimport { Edge, Graph, Node } from 'app/core/utils/dag';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\n// memoized version of _createDagFromQueries to prevent recreating the DAG if no sources or targets are modified\nexport const createDagFromQueries = memoizeOne(\n  _createDagFromQueries,\n  (previous: Parameters<typeof _createDagFromQueries>, next: Parameters<typeof _createDagFromQueries>) => {\n    return fingerPrintQueries(previous[0]) === fingerPrintQueries(next[0]);\n  }\n);\n\n/**\n * Turn the array of alert queries (this means data queries and expressions)\n * in to a DAG, a directed acyclical graph\n */\nexport function _createDagFromQueries(queries: AlertQuery[]): Graph {\n  const graph = new Graph();\n\n  const nodes = queries.map((query) => query.refId);\n  graph.createNodes(nodes);\n\n  queries.forEach((query) => {\n    const source = query.refId;\n    const isMathExpression = isExpressionQuery(query.model) && query.model.type === 'math';\n\n    // some expressions have multiple targets (like the math expression)\n    const targets = isMathExpression\n      ? parseRefsFromMathExpression(query.model.expression ?? '')\n      : [query.model.expression];\n\n    targets.forEach((target) => {\n      const isSelf = source === target;\n\n      if (source && target && !isSelf) {\n        graph.link(target, source);\n      }\n    });\n  });\n\n  return graph;\n}\n\n/**\n * parse an expression like \"$A > $B\" or \"${FOO BAR} > 0\" to an array of refIds\n */\nexport function parseRefsFromMathExpression(input: string): string[] {\n  // we'll use two regular expressions, one for \"${var}\" and one for \"$var\"\n  const r1 = new RegExp(/\\$\\{(?<var>[a-zA-Z0-9_ ]+?)\\}/gm);\n  const r2 = new RegExp(/\\$(?<var>[a-zA-Z0-9_]+)/gm);\n\n  const m1 = Array.from(input.matchAll(r1)).map((m) => m.groups?.var);\n  const m2 = Array.from(input.matchAll(r2)).map((m) => m.groups?.var);\n\n  return compact(uniq([...m1, ...m2]));\n}\n\nexport const getOriginOfRefId = memoize(_getOriginsOfRefId, (refId, graph) => refId + fingerprintGraph(graph));\n\nexport function _getOriginsOfRefId(refId: string, graph: Graph): string[] {\n  const node = graph.getNode(refId);\n\n  let origins: Node[] = [];\n\n  // recurse through \"node > inputEdges > inputNode\"\n  function findChildNode(node: Node) {\n    const inputEdges = node.inputEdges;\n\n    if (inputEdges.length > 0) {\n      inputEdges.forEach((edge) => {\n        if (edge.inputNode) {\n          findChildNode(edge.inputNode);\n        }\n      });\n    } else {\n      origins?.push(node);\n    }\n  }\n\n  findChildNode(node);\n\n  return origins.map((origin) => origin.name);\n}\n\n// create a unique fingerprint of the DAG\nexport function fingerprintGraph(graph: Graph) {\n  return Object.keys(graph.nodes)\n    .map((name) => {\n      const n = graph.nodes[name];\n      let outputEdges = n.outputEdges.map((e: Edge) => e.outputNode?.name).join(', ');\n      let inputEdges = n.inputEdges.map((e: Edge) => e.inputNode?.name).join(', ');\n      return `${n.name}:${outputEdges}:${inputEdges}`;\n    })\n    .join(' ');\n}\n\n// create a unique fingerprint of the array of queries\nexport function fingerPrintQueries(queries: AlertQuery[]) {\n  return queries\n    .map((query) => {\n      const type = isExpressionQuery(query.model) ? query.model.type : query.queryType;\n      return query.refId + (query.model.expression ?? '') + type;\n    })\n    .join();\n}\n","import { ValidateResult } from 'react-hook-form';\n\nimport { DataFrame, ThresholdsConfig, ThresholdsMode } from '@grafana/data';\nimport { isTimeSeries } from '@grafana/data/src/dataframe/utils';\nimport { GraphTresholdsStyleMode } from '@grafana/schema';\nimport { config } from 'app/core/config';\nimport { EvalFunction } from 'app/features/alerting/state/alertDef';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { ClassicCondition, ExpressionQueryType } from 'app/features/expressions/types';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { createDagFromQueries, getOriginOfRefId } from './dag';\n\nexport function queriesWithUpdatedReferences(\n  queries: AlertQuery[],\n  previousRefId: string,\n  newRefId: string\n): AlertQuery[] {\n  return queries.map((query) => {\n    if (previousRefId === newRefId) {\n      return query;\n    }\n\n    if (!isExpressionQuery(query.model)) {\n      return query;\n    }\n\n    const isMathExpression = query.model.type === 'math';\n    const isReduceExpression = query.model.type === 'reduce';\n    const isResampleExpression = query.model.type === 'resample';\n    const isClassicExpression = query.model.type === 'classic_conditions';\n    const isThresholdExpression = query.model.type === 'threshold';\n\n    if (isMathExpression) {\n      return {\n        ...query,\n        model: {\n          ...query.model,\n          expression: updateMathExpressionRefs(query.model.expression ?? '', previousRefId, newRefId),\n        },\n      };\n    }\n\n    if (isResampleExpression || isReduceExpression || isThresholdExpression) {\n      const isReferencing = query.model.expression === previousRefId;\n\n      return {\n        ...query,\n        model: {\n          ...query.model,\n          expression: isReferencing ? newRefId : query.model.expression,\n        },\n      };\n    }\n\n    if (isClassicExpression) {\n      const conditions = query.model.conditions?.map((condition) => ({\n        ...condition,\n        query: {\n          ...condition.query,\n          params: condition.query.params.map((param: string) => (param === previousRefId ? newRefId : param)),\n        },\n      }));\n\n      return { ...query, model: { ...query.model, conditions } };\n    }\n\n    return query;\n  });\n}\n\nexport function updateMathExpressionRefs(expression: string, previousRefId: string, newRefId: string): string {\n  const oldExpression = new RegExp('(\\\\$' + previousRefId + '\\\\b)|(\\\\${' + previousRefId + '})', 'gm');\n  const newExpression = '${' + newRefId + '}';\n\n  return expression.replace(oldExpression, newExpression);\n}\n\nexport function refIdExists(queries: AlertQuery[], refId: string | null): boolean {\n  return queries.find((query) => query.refId === refId) !== undefined;\n}\n\n// some gateways (like Istio) will decode \"/\" and \"\\\" characters – this will cause 404 errors for any API call\n// that includes these values in the URL (ie. /my/path%2fto/resource -> /my/path/to/resource)\n//\n// see https://istio.io/latest/docs/ops/best-practices/security/#customize-your-system-on-path-normalization\nexport function checkForPathSeparator(value: string): ValidateResult {\n  const containsPathSeparator = value.includes('/') || value.includes('\\\\');\n  if (containsPathSeparator) {\n    return 'Cannot contain \"/\" or \"\\\\\" characters';\n  }\n\n  return true;\n}\n\nexport function errorFromSeries(series: DataFrame[]): Error | undefined {\n  if (series.length === 0) {\n    return;\n  }\n\n  const isTimeSeriesResults = isTimeSeries(series);\n\n  let error;\n  if (isTimeSeriesResults) {\n    error = new Error('You cannot use time series data as an alert condition, consider adding a reduce expression.');\n  }\n\n  return error;\n}\n\nexport function warningFromSeries(series: DataFrame[]): Error | undefined {\n  const notices = series[0]?.meta?.notices ?? [];\n  const warning = notices.find((notice) => notice.severity === 'warning')?.text;\n\n  return warning ? new Error(warning) : undefined;\n}\n\nexport type ThresholdDefinitions = Record<\n  string,\n  {\n    config: ThresholdsConfig;\n    mode: GraphTresholdsStyleMode;\n  }\n>;\n\n/**\n * This function will retrieve threshold definitions for the given array of data and expression queries.\n */\nexport function getThresholdsForQueries(queries: AlertQuery[]) {\n  const thresholds: ThresholdDefinitions = {};\n  const SUPPORTED_EXPRESSION_TYPES = [ExpressionQueryType.threshold, ExpressionQueryType.classic];\n\n  for (const query of queries) {\n    if (!isExpressionQuery(query.model)) {\n      continue;\n    }\n\n    // currently only supporting \"threshold\" & \"classic_condition\" expressions\n    if (!SUPPORTED_EXPRESSION_TYPES.includes(query.model.type)) {\n      continue;\n    }\n\n    if (!Array.isArray(query.model.conditions)) {\n      continue;\n    }\n\n    // if any of the conditions are a \"range\" we switch to an \"area\" threshold view and ignore single threshold values\n    // the time series panel does not support both.\n    const hasRangeThreshold = query.model.conditions.some(isRangeCondition);\n\n    query.model.conditions.forEach((condition, index) => {\n      const threshold = condition.evaluator.params;\n\n      // \"classic_conditions\" use `condition.query.params[]` and \"threshold\" uses `query.model.expression`\n      const refId = condition.query.params[0] ?? query.model.expression;\n      const isRangeThreshold = isRangeCondition(condition);\n\n      try {\n        // create a DAG so we can find the origin of the current expression\n        const graph = createDagFromQueries(queries);\n\n        const originRefIDs = getOriginOfRefId(refId, graph);\n        const originQueries = queries.filter((query) => originRefIDs.includes(query.refId));\n\n        originQueries.forEach((originQuery) => {\n          const originRefID = originQuery.refId;\n\n          // check if the origin is a data query\n          const originIsDataQuery = !isExpressionQuery(originQuery?.model);\n\n          // if yes, add threshold config to the refId of the data Query\n          const hasValidOrigin = Boolean(originIsDataQuery && originRefID);\n\n          // create the initial data structure for this origin refId\n          if (originRefID && !thresholds[originRefID]) {\n            thresholds[originRefID] = {\n              config: {\n                mode: ThresholdsMode.Absolute,\n                steps: [],\n              },\n              mode: GraphTresholdsStyleMode.Line,\n            };\n          }\n\n          if (originRefID && hasValidOrigin && !isRangeThreshold && !hasRangeThreshold) {\n            appendSingleThreshold(originRefID, threshold[0]);\n          } else if (originRefID && hasValidOrigin && isRangeThreshold) {\n            appendRangeThreshold(originRefID, threshold, condition.evaluator.type);\n            thresholds[originRefID].mode = GraphTresholdsStyleMode.LineAndArea;\n          }\n        });\n      } catch (err) {\n        console.error('Failed to parse thresholds', err);\n        return;\n      }\n    });\n  }\n\n  function appendSingleThreshold(refId: string, value: number): void {\n    thresholds[refId].config.steps.push(\n      ...[\n        {\n          value: -Infinity,\n          color: 'transparent',\n        },\n        {\n          value: value,\n          color: config.theme2.colors.error.main,\n        },\n      ]\n    );\n  }\n\n  function appendRangeThreshold(refId: string, values: number[], type: EvalFunction): void {\n    if (type === EvalFunction.IsWithinRange) {\n      thresholds[refId].config.steps.push(\n        ...[\n          {\n            value: -Infinity,\n            color: 'transparent',\n          },\n          {\n            value: values[0],\n            color: config.theme2.colors.error.main,\n          },\n          {\n            value: values[1],\n            color: config.theme2.colors.error.main,\n          },\n          {\n            value: values[1],\n            color: 'transparent',\n          },\n        ]\n      );\n    }\n\n    if (type === EvalFunction.IsOutsideRange) {\n      thresholds[refId].config.steps.push(\n        ...[\n          {\n            value: -Infinity,\n            color: config.theme2.colors.error.main,\n          },\n          // we have to duplicate this value, or the graph will not display the handle in the right color\n          {\n            value: values[0],\n            color: config.theme2.colors.error.main,\n          },\n          {\n            value: values[0],\n            color: 'transparent',\n          },\n          {\n            value: values[1],\n            color: config.theme2.colors.error.main,\n          },\n        ]\n      );\n    }\n\n    // now also sort the threshold values, if we don't then they will look weird in the time series panel\n    // TODO this doesn't work for negative values for now, those need to be sorted inverse\n    thresholds[refId].config.steps.sort((a, b) => a.value - b.value);\n  }\n\n  return thresholds;\n}\n\nfunction isRangeCondition(condition: ClassicCondition) {\n  return (\n    condition.evaluator.type === EvalFunction.IsWithinRange || condition.evaluator.type === EvalFunction.IsOutsideRange\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { FC, useEffect, useMemo } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Field, InputControl, useStyles2, VirtualizedSelect } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { useUnifiedAlertingSelector } from '../../hooks/useUnifiedAlertingSelector';\nimport { fetchRulerRulesAction } from '../../state/actions';\nimport { RuleFormValues } from '../../types/rule-form';\n\nimport { checkForPathSeparator } from './util';\n\ninterface Props {\n  rulesSourceName: string;\n}\n\nexport const GroupAndNamespaceFields: FC<Props> = ({ rulesSourceName }) => {\n  const {\n    control,\n    watch,\n    formState: { errors },\n    setValue,\n  } = useFormContext<RuleFormValues>();\n\n  const style = useStyles2(getStyle);\n\n  const rulerRequests = useUnifiedAlertingSelector((state) => state.rulerRules);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchRulerRulesAction({ rulesSourceName }));\n  }, [rulesSourceName, dispatch]);\n\n  const rulesConfig = rulerRequests[rulesSourceName]?.result;\n\n  const namespace = watch('namespace');\n\n  const namespaceOptions = useMemo(\n    (): Array<SelectableValue<string>> =>\n      rulesConfig ? Object.keys(rulesConfig).map((namespace) => ({ label: namespace, value: namespace })) : [],\n    [rulesConfig]\n  );\n\n  const groupOptions = useMemo(\n    (): Array<SelectableValue<string>> =>\n      (namespace && rulesConfig?.[namespace]?.map((group) => ({ label: group.name, value: group.name }))) || [],\n    [namespace, rulesConfig]\n  );\n\n  return (\n    <div className={style.flexRow}>\n      <Field\n        data-testid=\"namespace-picker\"\n        label=\"Namespace\"\n        error={errors.namespace?.message}\n        invalid={!!errors.namespace?.message}\n      >\n        <InputControl\n          render={({ field: { onChange, ref, ...field } }) => (\n            <VirtualizedSelect\n              {...field}\n              allowCustomValue\n              className={style.input}\n              onChange={(value) => {\n                setValue('group', ''); //reset if namespace changes\n                onChange(value.value);\n              }}\n              options={namespaceOptions}\n              width={42}\n            />\n          )}\n          name=\"namespace\"\n          control={control}\n          rules={{\n            required: { value: true, message: 'Required.' },\n            validate: {\n              pathSeparator: checkForPathSeparator,\n            },\n          }}\n        />\n      </Field>\n      <Field data-testid=\"group-picker\" label=\"Group\" error={errors.group?.message} invalid={!!errors.group?.message}>\n        <InputControl\n          render={({ field: { ref, ...field } }) => (\n            <VirtualizedSelect\n              {...field}\n              allowCustomValue\n              options={groupOptions}\n              width={42}\n              onChange={(value) => {\n                setValue('group', value.value ?? '');\n              }}\n              className={style.input}\n            />\n          )}\n          name=\"group\"\n          control={control}\n          rules={{\n            required: { value: true, message: 'Required.' },\n            validate: {\n              pathSeparator: checkForPathSeparator,\n            },\n          }}\n        />\n      </Field>\n    </div>\n  );\n};\n\nconst getStyle = (theme: GrafanaTheme2) => ({\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    & > * + * {\n      margin-left: ${theme.spacing(3)};\n    }\n  `,\n  input: css`\n    width: 330px !important;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { Icon, Tooltip, useStyles2 } from '@grafana/ui';\nimport { FolderPicker, Props as FolderPickerProps } from 'app/core/components/Select/FolderPicker';\nimport { PermissionLevelString } from 'app/types';\n\nimport { FolderWarning, CustomAdd } from '../../../../../core/components/Select/FolderPicker';\n\nexport interface Folder {\n  title: string;\n  id: number;\n}\n\nexport interface RuleFolderPickerProps extends Omit<FolderPickerProps, 'initialTitle' | 'initialFolderId'> {\n  value?: Folder;\n  dissalowSlashes: boolean;\n}\n\nconst SlashesWarning = () => {\n  const styles = useStyles2(getStyles);\n  const onClick = () => window.open('https://github.com/grafana/grafana/issues/42947', '_blank');\n  return (\n    <Stack gap={0.5}>\n      <div className={styles.slashNotAllowed}>Folders with &apos;/&apos; character are not allowed.</div>\n      <Tooltip placement=\"top\" content={'Link to the Github issue'} theme=\"info\">\n        <Icon name=\"info-circle\" size=\"xs\" className={styles.infoIcon} onClick={onClick} />\n      </Tooltip>\n    </Stack>\n  );\n};\n\nexport const containsSlashes = (str: string): boolean => str.indexOf('/') !== -1;\n\nexport function RuleFolderPicker(props: RuleFolderPickerProps) {\n  const { value } = props;\n  const warningCondition = (folderName: string) => containsSlashes(folderName);\n\n  const folderWarning: FolderWarning = {\n    warningCondition: warningCondition,\n    warningComponent: SlashesWarning,\n  };\n\n  const customAdd: CustomAdd = {\n    disallowValues: true,\n    isAllowedValue: (value) => !containsSlashes(value),\n  };\n\n  return (\n    <FolderPicker\n      showRoot={false}\n      rootName=\"\"\n      allowEmpty={true}\n      initialTitle={value?.title}\n      initialFolderId={value?.id}\n      accessControlMetadata\n      {...props}\n      permissionLevel={PermissionLevelString.View}\n      customAdd={customAdd}\n      folderWarning={folderWarning}\n    />\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  slashNotAllowed: css`\n    color: ${theme.colors.warning.main};\n    font-size: 12px;\n    margin-bottom: 2px;\n  `,\n  infoIcon: css`\n    color: ${theme.colors.warning.main};\n    font-size: 12px;\n    margin-bottom: 2px;\n    cursor: pointer;\n  `,\n});\n","import { css } from '@emotion/css';\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { useStyles2, Field, Input, InputControl, Label, Tooltip, Icon } from '@grafana/ui';\nimport { FolderPickerFilter } from 'app/core/components/Select/FolderPicker';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { DashboardSearchHit } from 'app/features/search/types';\nimport { AccessControlAction } from 'app/types';\n\nimport { RuleForm, RuleFormType, RuleFormValues } from '../../types/rule-form';\n\nimport AnnotationsField from './AnnotationsField';\nimport { GroupAndNamespaceFields } from './GroupAndNamespaceFields';\nimport { RuleEditorSection } from './RuleEditorSection';\nimport { RuleFolderPicker, Folder, containsSlashes } from './RuleFolderPicker';\nimport { checkForPathSeparator } from './util';\n\nconst recordingRuleNameValidationPattern = {\n  message:\n    'Recording rule name must be valid metric name. It may only contain letters, numbers, and colons. It may not contain whitespace.',\n  value: /^[a-zA-Z_:][a-zA-Z0-9_:]*$/,\n};\n\ninterface DetailsStepProps {\n  initialFolder: RuleForm | null;\n}\n\nexport const DetailsStep = ({ initialFolder }: DetailsStepProps) => {\n  const {\n    register,\n    watch,\n    formState: { errors },\n  } = useFormContext<RuleFormValues & { location?: string }>();\n\n  const styles = useStyles2(getStyles);\n\n  const ruleFormType = watch('type');\n  const dataSourceName = watch('dataSourceName');\n  const type = watch('type');\n\n  const folderFilter = useRuleFolderFilter(initialFolder);\n\n  return (\n    <RuleEditorSection\n      stepNo={type === RuleFormType.cloudRecording ? 2 : 3}\n      title={\n        type === RuleFormType.cloudRecording ? 'Add details for your recording rule' : 'Add details for your alert'\n      }\n      description={\n        type === RuleFormType.cloudRecording\n          ? 'Add labels to help you better manage your rules'\n          : 'Write a summary and add labels to help you better manage your alerts'\n      }\n    >\n      <Field\n        className={styles.formInput}\n        label=\"Rule name\"\n        error={errors?.name?.message}\n        invalid={!!errors.name?.message}\n      >\n        <Input\n          id=\"name\"\n          {...register('name', {\n            required: { value: true, message: 'Must enter an alert name' },\n            pattern: ruleFormType === RuleFormType.cloudRecording ? recordingRuleNameValidationPattern : undefined,\n            validate: {\n              pathSeparator: (value: string) => {\n                // we use the alert rule name as the \"groupname\" for Grafana managed alerts, so we can't allow path separators\n                if (ruleFormType === RuleFormType.grafana) {\n                  return checkForPathSeparator(value);\n                }\n\n                return true;\n              },\n            },\n          })}\n        />\n      </Field>\n\n      {(ruleFormType === RuleFormType.cloudRecording || ruleFormType === RuleFormType.cloudAlerting) &&\n        dataSourceName && <GroupAndNamespaceFields rulesSourceName={dataSourceName} />}\n\n      {ruleFormType === RuleFormType.grafana && (\n        <div className={classNames([styles.flexRow, styles.alignBaseline])}>\n          <Field\n            label={\n              <Label htmlFor=\"folder\" description={'Select a folder to store your rule.'}>\n                <Stack gap={0.5}>\n                  Folder\n                  <Tooltip\n                    placement=\"top\"\n                    content={\n                      <div>\n                        Each folder has unique folder permission. When you store multiple rules in a folder, the folder\n                        access permissions get assigned to the rules.\n                      </div>\n                    }\n                  >\n                    <Icon name=\"info-circle\" size=\"xs\" />\n                  </Tooltip>\n                </Stack>\n              </Label>\n            }\n            className={styles.formInput}\n            error={errors.folder?.message}\n            invalid={!!errors.folder?.message}\n            data-testid=\"folder-picker\"\n          >\n            <InputControl\n              render={({ field: { ref, ...field } }) => (\n                <RuleFolderPicker\n                  inputId=\"folder\"\n                  {...field}\n                  enableCreateNew={contextSrv.hasPermission(AccessControlAction.FoldersCreate)}\n                  enableReset={true}\n                  filter={folderFilter}\n                  dissalowSlashes={true}\n                />\n              )}\n              name=\"folder\"\n              rules={{\n                required: { value: true, message: 'Please select a folder' },\n                validate: {\n                  pathSeparator: (folder: Folder) => checkForPathSeparator(folder.title),\n                },\n              }}\n            />\n          </Field>\n          <Field\n            label=\"Group\"\n            data-testid=\"group-picker\"\n            description=\"Rules within the same group are evaluated after the same time interval.\"\n            className={styles.formInput}\n            error={errors.group?.message}\n            invalid={!!errors.group?.message}\n          >\n            <Input\n              id=\"group\"\n              {...register('group', {\n                required: { value: true, message: 'Must enter a group name' },\n                validate: {\n                  pathSeparator: (group_: string) => checkForPathSeparator(group_),\n                },\n              })}\n            />\n          </Field>\n        </div>\n      )}\n      {type !== RuleFormType.cloudRecording && <AnnotationsField />}\n    </RuleEditorSection>\n  );\n};\n\nconst useRuleFolderFilter = (existingRuleForm: RuleForm | null) => {\n  const isSearchHitAvailable = useCallback(\n    (hit: DashboardSearchHit) => {\n      const rbacDisabledFallback = contextSrv.hasEditPermissionInFolders;\n\n      const canCreateRuleInFolder = contextSrv.hasAccessInMetadata(\n        AccessControlAction.AlertingRuleCreate,\n        hit,\n        rbacDisabledFallback\n      );\n\n      const canUpdateInCurrentFolder =\n        existingRuleForm &&\n        hit.folderId === existingRuleForm.id &&\n        contextSrv.hasAccessInMetadata(AccessControlAction.AlertingRuleUpdate, hit, rbacDisabledFallback);\n      return canCreateRuleInFolder || canUpdateInCurrentFolder;\n    },\n    [existingRuleForm]\n  );\n\n  return useCallback<FolderPickerFilter>(\n    (folderHits) =>\n      folderHits\n        .filter(isSearchHitAvailable)\n        .filter((value: DashboardSearchHit) => !containsSlashes(value.title ?? '')),\n    [isSearchHitAvailable]\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  alignBaseline: css`\n    align-items: baseline;\n    margin-bottom: ${theme.spacing(3)};\n  `,\n  formInput: css`\n    width: 275px;\n\n    & + & {\n      margin-left: ${theme.spacing(3)};\n    }\n  `,\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: end;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React, { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, Link, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { RuleFormValues } from '../../types/rule-form';\nimport { GRAFANA_RULES_SOURCE_NAME } from '../../utils/datasource';\n\nimport LabelsField from './LabelsField';\nimport { RuleEditorSection } from './RuleEditorSection';\n\nexport const NotificationsStep = () => {\n  const [hideFlowChart, setHideFlowChart] = useState(false);\n  const styles = useStyles2(getStyles);\n  const theme = useTheme2();\n\n  const { watch } = useFormContext<RuleFormValues>();\n\n  const dataSourceName = watch('dataSourceName') ?? GRAFANA_RULES_SOURCE_NAME;\n\n  return (\n    <RuleEditorSection\n      stepNo={4}\n      title=\"Notifications\"\n      description=\"Grafana handles the notifications for alerts by assigning labels to alerts. These labels connect alerts to contact points and silence alert instances that have matching labels.\"\n    >\n      <div>\n        <div className={styles.hideButton} onClick={() => setHideFlowChart(!hideFlowChart)}>\n          {`${!hideFlowChart ? 'Hide' : 'Show'} flow chart`}\n        </div>\n      </div>\n      <div className={styles.contentWrapper}>\n        {!hideFlowChart && (\n          <img\n            className={styles.flowChart}\n            src={`public/img/alerting/notification_policy_${theme.name.toLowerCase()}.svg`}\n            alt=\"notification policy flow chart\"\n          />\n        )}\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <LabelsField dataSourceName={dataSourceName} />\n          <Card className={styles.card}>\n            <Card.Heading>Root route – default for all alerts</Card.Heading>\n            <Card.Description>\n              Without custom labels, your alert will be routed through the root route. To view and edit the root route,\n              go to <Link href=\"/alerting/routes\">notification policies</Link> or contact your admin in case you are\n              using non-Grafana alert management.\n            </Card.Description>\n          </Card>\n        </div>\n      </div>\n    </RuleEditorSection>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  contentWrapper: css`\n    display: flex;\n    align-items: center;\n  `,\n  hideButton: css`\n    color: ${theme.colors.text.secondary};\n    cursor: pointer;\n    margin-bottom: ${theme.spacing(1)};\n  `,\n  card: css`\n    max-width: 500px;\n  `,\n  flowChart: css`\n    margin-right: ${theme.spacing(3)};\n  `,\n});\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","import { css } from '@emotion/css';\nimport { dump, load } from 'js-yaml';\nimport React, { FC, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, CodeEditor, Drawer, Icon, Tab, TabsBar, useStyles2, Tooltip } from '@grafana/ui';\n\nimport { RulerRuleDTO } from '../../../../../types/unified-alerting-dto';\nimport { RuleFormValues } from '../../types/rule-form';\nimport {\n  alertingRulerRuleToRuleForm,\n  formValuesToRulerRuleDTO,\n  recordingRulerRuleToRuleForm,\n} from '../../utils/rule-form';\nimport { isAlertingRulerRule, isRecordingRulerRule } from '../../utils/rules';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst tabs = [{ label: 'Yaml', value: 'yaml' }];\n\nexport const RuleInspector: FC<Props> = ({ onClose }) => {\n  const [activeTab, setActiveTab] = useState('yaml');\n  const { setValue } = useFormContext<RuleFormValues>();\n  const styles = useStyles2(drawerStyles);\n\n  const onApply = (formValues: RuleFormValues) => {\n    // Need to loop through all values and set them individually\n    // TODO this is not type-safe :(\n    for (const key in formValues) {\n      // @ts-ignore\n      setValue(key, formValues[key]);\n    }\n    onClose();\n  };\n\n  return (\n    <Drawer\n      title=\"Inspect Alert rule\"\n      subtitle={\n        <div className={styles.subtitle}>\n          <RuleInspectorSubtitle setActiveTab={setActiveTab} activeTab={activeTab} />\n        </div>\n      }\n      onClose={onClose}\n    >\n      {activeTab === 'yaml' && <InspectorYamlTab onSubmit={onApply} />}\n    </Drawer>\n  );\n};\n\ninterface SubtitleProps {\n  activeTab: string;\n  setActiveTab: (tab: string) => void;\n}\n\nconst RuleInspectorSubtitle: FC<SubtitleProps> = ({ activeTab, setActiveTab }) => {\n  return (\n    <TabsBar>\n      {tabs.map((tab, index) => {\n        return (\n          <Tab\n            key={`${tab.value}-${index}`}\n            label={tab.label}\n            value={tab.value}\n            onChangeTab={() => setActiveTab(tab.value)}\n            active={activeTab === tab.value}\n          />\n        );\n      })}\n    </TabsBar>\n  );\n};\n\ninterface YamlTabProps {\n  onSubmit: (newModel: RuleFormValues) => void;\n}\n\nconst InspectorYamlTab: FC<YamlTabProps> = ({ onSubmit }) => {\n  const styles = useStyles2(yamlTabStyle);\n  const { getValues } = useFormContext<RuleFormValues>();\n\n  const yamlValues = formValuesToRulerRuleDTO(getValues());\n  const [alertRuleAsYaml, setAlertRuleAsYaml] = useState(dump(yamlValues));\n\n  const onApply = () => {\n    const rulerRule = load(alertRuleAsYaml) as RulerRuleDTO;\n    const currentFormValues = getValues();\n\n    const yamlFormValues = rulerRuleToRuleFormValues(rulerRule);\n    onSubmit({ ...currentFormValues, ...yamlFormValues });\n  };\n\n  return (\n    <>\n      <div className={styles.applyButton}>\n        <Button type=\"button\" onClick={onApply}>\n          Apply\n        </Button>\n        <Tooltip content={<YamlContentInfo />} theme=\"info\" placement=\"left-start\" interactive={true}>\n          <Icon name=\"exclamation-triangle\" size=\"xl\" />\n        </Tooltip>\n      </div>\n\n      <div className={styles.content}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CodeEditor\n              width=\"100%\"\n              height={height}\n              language=\"yaml\"\n              value={alertRuleAsYaml}\n              onBlur={setAlertRuleAsYaml}\n              monacoOptions={{\n                minimap: {\n                  enabled: false,\n                },\n              }}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </>\n  );\n};\n\nfunction YamlContentInfo() {\n  return (\n    <div>\n      The YAML content in the editor only contains alert rule configuration <br />\n      To configure Prometheus, you need to provide the rest of the{' '}\n      <a\n        href=\"https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        configuration file content.\n      </a>\n    </div>\n  );\n}\n\nfunction rulerRuleToRuleFormValues(rulerRule: RulerRuleDTO): Partial<RuleFormValues> {\n  if (isAlertingRulerRule(rulerRule)) {\n    return alertingRulerRuleToRuleForm(rulerRule);\n  } else if (isRecordingRulerRule(rulerRule)) {\n    return recordingRulerRuleToRuleForm(rulerRule);\n  }\n\n  return {};\n}\n\nconst yamlTabStyle = (theme: GrafanaTheme2) => ({\n  content: css`\n    flex-grow: 1;\n    height: 100%;\n    padding-bottom: 16px;\n    margin-bottom: ${theme.spacing(2)};\n  `,\n  applyButton: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    flex-grow: 0;\n    margin-bottom: ${theme.spacing(2)};\n  `,\n});\n\nconst drawerStyles = () => ({\n  subtitle: css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataFrame, GrafanaTheme2 } from '@grafana/data/src';\nimport { Icon, TagList, Tooltip, useStyles2 } from '@grafana/ui/src';\n\nimport { labelsToTags } from '../../utils/labels';\nimport { AlertStateTag } from '../rules/AlertStateTag';\n\nimport { mapDataFrameToAlertPreview } from './preview';\n\ninterface CloudAlertPreviewProps {\n  preview: DataFrame;\n}\n\nexport function CloudAlertPreview({ preview }: CloudAlertPreviewProps) {\n  const styles = useStyles2(getStyles);\n  const alertPreview = mapDataFrameToAlertPreview(preview);\n\n  return (\n    <table className={styles.table}>\n      <caption>\n        <div>Alerts preview</div>\n        <span>Preview based on the result of running the query for this moment.</span>\n      </caption>\n      <thead>\n        <tr>\n          <th>State</th>\n          <th>Labels</th>\n          <th>Info</th>\n        </tr>\n      </thead>\n      <tbody>\n        {alertPreview.instances.map(({ state, info, labels }, index) => {\n          const instanceTags = labelsToTags(labels);\n\n          return (\n            <tr key={index}>\n              <td>{<AlertStateTag state={state} />}</td>\n              <td>\n                <TagList tags={instanceTags} className={styles.tagList} />\n              </td>\n              <td>\n                {info && (\n                  <Tooltip content={info}>\n                    <Icon name=\"info-circle\" />\n                  </Tooltip>\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  table: css`\n    width: 100%;\n    margin: ${theme.spacing(2, 0)};\n\n    caption {\n      caption-side: top;\n      color: ${theme.colors.text.primary};\n\n      & > span {\n        font-size: ${theme.typography.bodySmall.fontSize};\n        color: ${theme.colors.text.secondary};\n      }\n    }\n\n    td,\n    th {\n      padding: ${theme.spacing(1, 1)};\n    }\n\n    td + td,\n    th + th {\n      padding-left: ${theme.spacing(3)};\n    }\n\n    thead th {\n      &:nth-child(1) {\n        width: 80px;\n      }\n\n      &:nth-child(2) {\n        width: auto;\n      }\n\n      &:nth-child(3) {\n        width: 40px;\n      }\n    }\n\n    td:nth-child(3) {\n      text-align: center;\n    }\n\n    tbody tr:nth-child(2n + 1) {\n      background-color: ${theme.colors.background.secondary};\n    }\n  `,\n  tagList: css`\n    justify-content: flex-start;\n  `,\n});\n","import { DataFrame } from '@grafana/data';\n\nimport { GrafanaAlertState, isGrafanaAlertState, Labels } from '../../../../../types/unified-alerting-dto';\n\ninterface AlertPreviewInstance {\n  state: GrafanaAlertState;\n  info?: string;\n  labels: Labels;\n}\n\ninterface AlertPreview {\n  instances: AlertPreviewInstance[];\n}\n\n// Alerts previews come in a DataFrame format which is more suited for displaying time series data\n// In order to display a list of tags we need to transform DataFrame into set of labels\nexport function mapDataFrameToAlertPreview({ fields }: DataFrame): AlertPreview {\n  const labelFields = fields.filter((field) => !['State', 'Info'].includes(field.name));\n  const stateFieldIndex = fields.findIndex((field) => field.name === 'State');\n  const infoFieldIndex = fields.findIndex((field) => field.name === 'Info');\n\n  const labelIndexes = labelFields.map((labelField) => fields.indexOf(labelField));\n\n  const instanceStatusCount = fields[stateFieldIndex]?.values.length ?? 0;\n\n  const instances: AlertPreviewInstance[] = [];\n\n  for (let index = 0; index < instanceStatusCount; index++) {\n    const labelValues = labelIndexes.map((labelIndex) => [\n      fields[labelIndex].name,\n      fields[labelIndex].values.get(index),\n    ]);\n    const state = fields[stateFieldIndex]?.values?.get(index);\n    const info = fields[infoFieldIndex]?.values?.get(index);\n\n    if (isGrafanaAlertState(state)) {\n      instances.push({\n        state: state,\n        info: info,\n        labels: Object.fromEntries(labelValues),\n      });\n    }\n  }\n\n  return { instances };\n}\n","import { Labels } from '../../../../types/unified-alerting-dto';\n\nexport function labelsToTags(labels: Labels) {\n  return Object.entries(labels)\n    .map(([label, value]) => `${label}=${value}`)\n    .sort();\n}\n","import { css } from '@emotion/css';\nimport { noop } from 'lodash';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { CoreApp, DataQuery, DataSourcePluginContextProvider, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { Alert, Button, useStyles2 } from '@grafana/ui';\nimport { LokiQuery } from 'app/plugins/datasource/loki/types';\nimport { PromQuery } from 'app/plugins/datasource/prometheus/types';\n\nimport { CloudAlertPreview } from './CloudAlertPreview';\nimport { usePreview } from './PreviewRule';\n\nexport interface ExpressionEditorProps {\n  value?: string;\n  onChange: (value: string) => void;\n  dataSourceName: string; // will be a prometheus or loki datasource\n}\n\nexport const ExpressionEditor: FC<ExpressionEditorProps> = ({ value, onChange, dataSourceName }) => {\n  const styles = useStyles2(getStyles);\n\n  const { mapToValue, mapToQuery } = useQueryMappers(dataSourceName);\n  const dataQuery = mapToQuery({ refId: 'A', hide: false }, value);\n\n  const {\n    error,\n    loading,\n    value: dataSource,\n  } = useAsync(() => {\n    return getDataSourceSrv().get(dataSourceName);\n  }, [dataSourceName]);\n\n  const onChangeQuery = useCallback(\n    (query: DataQuery) => {\n      onChange(mapToValue(query));\n    },\n    [onChange, mapToValue]\n  );\n\n  const [alertPreview, onPreview] = usePreview();\n\n  const onRunQueriesClick = async () => {\n    onPreview();\n  };\n\n  if (loading || dataSource?.name !== dataSourceName) {\n    return null;\n  }\n\n  const dsi = getDataSourceSrv().getInstanceSettings(dataSourceName);\n\n  if (error || !dataSource || !dataSource?.components?.QueryEditor || !dsi) {\n    const errorMessage = error?.message || 'Data source plugin does not export any Query Editor component';\n    return <div>Could not load query editor due to: {errorMessage}</div>;\n  }\n\n  const previewLoaded = alertPreview?.data.state === LoadingState.Done;\n\n  const QueryEditor = dataSource?.components?.QueryEditor;\n\n  // The Preview endpoint returns the preview as a single-element array of data frames\n  const previewDataFrame = alertPreview?.data?.series?.find((s) => s.name === 'evaluation results');\n  // The preview API returns arrays with empty elements when there are no firing alerts\n  const previewHasAlerts = previewDataFrame && previewDataFrame.fields.some((field) => field.values.length > 0);\n\n  return (\n    <>\n      <DataSourcePluginContextProvider instanceSettings={dsi}>\n        <QueryEditor\n          query={dataQuery}\n          queries={[dataQuery]}\n          app={CoreApp.CloudAlerting}\n          onChange={onChangeQuery}\n          onRunQuery={noop}\n          datasource={dataSource}\n        />\n      </DataSourcePluginContextProvider>\n      <div className={styles.preview}>\n        <Button type=\"button\" onClick={onRunQueriesClick} disabled={alertPreview?.data.state === LoadingState.Loading}>\n          Preview alerts\n        </Button>\n        {previewLoaded && !previewHasAlerts && (\n          <Alert title=\"Alerts preview\" severity=\"info\" className={styles.previewAlert}>\n            There are no firing alerts for your query.\n          </Alert>\n        )}\n        {previewHasAlerts && <CloudAlertPreview preview={previewDataFrame} />}\n      </div>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  preview: css`\n    padding: ${theme.spacing(2, 0)};\n    max-width: ${theme.breakpoints.values.xl}px;\n  `,\n  previewAlert: css`\n    margin: ${theme.spacing(1, 0)};\n  `,\n});\n\ntype QueryMappers<T extends DataQuery = DataQuery> = {\n  mapToValue: (query: T) => string;\n  mapToQuery: (existing: T, value: string | undefined) => T;\n};\n\nfunction useQueryMappers(dataSourceName: string): QueryMappers {\n  return useMemo(() => {\n    const settings = getDataSourceSrv().getInstanceSettings(dataSourceName);\n\n    switch (settings?.type) {\n      case 'loki':\n      case 'prometheus':\n        return {\n          mapToValue: (query: DataQuery) => (query as PromQuery | LokiQuery).expr,\n          mapToQuery: (existing: DataQuery, value: string | undefined) => ({ ...existing, expr: value }),\n        };\n      default:\n        throw new Error(`${dataSourceName} is not supported as an expression editor`);\n    }\n  }, [dataSourceName]);\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\n/**\n * A simple \"flex: 1;\" component you can use in combination with the Stack component(s), like so\n *\n *  <Stack direction=\"row\">\n *    <span>hello</span>\n *    <Spacer />\n *    <span>world</span>\n *  </Stack>\n */\n\nexport const Spacer = () => (\n  <span\n    className={css`\n      flex: 1;\n    `}\n  />\n);\n","import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Badge, useStyles2 } from '@grafana/ui';\n\ninterface AlertConditionProps {\n  enabled?: boolean;\n  error?: Error;\n  warning?: Error;\n  onSetCondition: () => void;\n}\n\nexport const AlertConditionIndicator: FC<AlertConditionProps> = ({\n  enabled = false,\n  error,\n  warning,\n  onSetCondition,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  if (enabled && error) {\n    return <Badge color=\"red\" icon=\"exclamation-circle\" text=\"Alert condition\" tooltip={error.message} />;\n  }\n\n  if (enabled && warning) {\n    return <Badge color=\"orange\" icon=\"exclamation-triangle\" text=\"Alert condition\" tooltip={warning.message} />;\n  }\n\n  if (enabled && !error && !warning) {\n    return <Badge color=\"green\" icon=\"check\" text=\"Alert condition\" />;\n  }\n\n  if (!enabled) {\n    return (\n      <div className={styles.actionLink} onClick={() => onSetCondition()}>\n        Make this the alert condition\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  actionLink: css`\n    color: ${theme.colors.text.link};\n    cursor: pointer;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  `,\n});\n","import { DataFrame, Labels, roundDecimals } from '@grafana/data';\n\n/**\n * ⚠️ `frame.fields` could be an empty array ⚠️\n *\n * TypeScript will NOT complain about it when accessing items via index signatures.\n * Make sure to check for empty array or use optional chaining!\n *\n * see https://github.com/Microsoft/TypeScript/issues/13778\n */\n\nconst getSeriesName = (frame: DataFrame): string => {\n  return frame.name ?? formatLabels(frame.fields[0]?.labels ?? {});\n};\n\nconst getSeriesValue = (frame: DataFrame) => {\n  const value = frame.fields[0]?.values.get(0);\n\n  if (Number.isFinite(value)) {\n    return roundDecimals(value, 5);\n  }\n\n  return value;\n};\n\nconst formatLabels = (labels: Labels): string => {\n  return Object.entries(labels)\n    .map(([key, value]) => key + '=' + value)\n    .join(', ');\n};\n\nconst isEmptySeries = (series: DataFrame[]): boolean => {\n  const isEmpty = series.every((serie) =>\n    serie.fields.every((field) => field.values.toArray().every((value) => value == null))\n  );\n\n  return isEmpty;\n};\n\nexport { getSeriesName, getSeriesValue, formatLabels, isEmptySeries };\n","import { css, cx } from '@emotion/css';\nimport { capitalize, uniqueId } from 'lodash';\nimport React, { FC, useCallback, useState } from 'react';\n\nimport { DataFrame, dateTimeFormat, GrafanaTheme2, LoadingState, PanelData } from '@grafana/data';\nimport { isTimeSeries } from '@grafana/data/src/dataframe/utils';\nimport { Stack } from '@grafana/experimental';\nimport { AutoSizeInput, Icon, IconButton, Select, useStyles2 } from '@grafana/ui';\nimport { ClassicConditions } from 'app/features/expressions/components/ClassicConditions';\nimport { Math } from 'app/features/expressions/components/Math';\nimport { Reduce } from 'app/features/expressions/components/Reduce';\nimport { Resample } from 'app/features/expressions/components/Resample';\nimport { Threshold } from 'app/features/expressions/components/Threshold';\nimport { ExpressionQuery, ExpressionQueryType, gelTypes } from 'app/features/expressions/types';\nimport { AlertQuery, PromAlertingRuleState } from 'app/types/unified-alerting-dto';\n\nimport { HoverCard } from '../HoverCard';\nimport { Spacer } from '../Spacer';\nimport { AlertStateTag } from '../rules/AlertStateTag';\n\nimport { AlertConditionIndicator } from './AlertConditionIndicator';\nimport { formatLabels, getSeriesName, getSeriesValue, isEmptySeries } from './util';\n\ninterface ExpressionProps {\n  isAlertCondition?: boolean;\n  data?: PanelData;\n  error?: Error;\n  warning?: Error;\n  queries: AlertQuery[];\n  query: ExpressionQuery;\n  onSetCondition: (refId: string) => void;\n  onUpdateRefId: (oldRefId: string, newRefId: string) => void;\n  onRemoveExpression: (refId: string) => void;\n  onUpdateExpressionType: (refId: string, type: ExpressionQueryType) => void;\n  onChangeQuery: (query: ExpressionQuery) => void;\n}\n\nexport const Expression: FC<ExpressionProps> = ({\n  queries = [],\n  query,\n  data,\n  error,\n  warning,\n  isAlertCondition,\n  onSetCondition,\n  onUpdateRefId,\n  onRemoveExpression,\n  onUpdateExpressionType,\n  onChangeQuery,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  const queryType = query?.type;\n\n  const isLoading = data && Object.values(data).some((d) => Boolean(d) && d.state === LoadingState.Loading);\n  const hasResults = Array.isArray(data?.series) && !isLoading;\n  const series = data?.series ?? [];\n\n  // sometime we receive results where every value is just \"null\" when noData occurs\n  const emptyResults = hasResults && isEmptySeries(series);\n  const isTimeSeriesResults = !emptyResults && isTimeSeries(series);\n\n  const alertCondition = isAlertCondition ?? false;\n  const showSummary = isAlertCondition && hasResults;\n\n  const groupedByState = {\n    [PromAlertingRuleState.Firing]: series.filter((serie) => getSeriesValue(serie) >= 1),\n    [PromAlertingRuleState.Inactive]: series.filter((serie) => getSeriesValue(serie) < 1),\n  };\n\n  const renderExpressionType = useCallback(\n    (query: ExpressionQuery) => {\n      // these are the refs we can choose from that don't include the current one\n      const availableRefIds = queries\n        .filter((q) => query.refId !== q.refId)\n        .map((q) => ({ value: q.refId, label: q.refId }));\n\n      switch (query.type) {\n        case ExpressionQueryType.math:\n          return <Math onChange={onChangeQuery} query={query} labelWidth={'auto'} onRunQuery={() => {}} />;\n\n        case ExpressionQueryType.reduce:\n          return <Reduce onChange={onChangeQuery} refIds={availableRefIds} labelWidth={'auto'} query={query} />;\n\n        case ExpressionQueryType.resample:\n          return <Resample onChange={onChangeQuery} query={query} labelWidth={'auto'} refIds={availableRefIds} />;\n\n        case ExpressionQueryType.classic:\n          return <ClassicConditions onChange={onChangeQuery} query={query} refIds={availableRefIds} />;\n\n        case ExpressionQueryType.threshold:\n          return <Threshold onChange={onChangeQuery} query={query} labelWidth={'auto'} refIds={availableRefIds} />;\n\n        default:\n          return <>Expression not supported: {query.type}</>;\n      }\n    },\n    [onChangeQuery, queries]\n  );\n\n  return (\n    <div className={cx(styles.expression.wrapper, alertCondition && styles.expression.alertCondition)}>\n      <div className={styles.expression.stack}>\n        <Header\n          refId={query.refId}\n          queryType={queryType}\n          onRemoveExpression={() => onRemoveExpression(query.refId)}\n          onUpdateRefId={(newRefId) => onUpdateRefId(query.refId, newRefId)}\n          onUpdateExpressionType={(type) => onUpdateExpressionType(query.refId, type)}\n        />\n        <div className={styles.expression.body}>{renderExpressionType(query)}</div>\n        {hasResults && (\n          <div className={styles.expression.results}>\n            {!emptyResults && isTimeSeriesResults && (\n              <div>\n                {series.map((frame, index) => (\n                  <TimeseriesRow key={uniqueId()} frame={frame} index={index} isAlertCondition={isAlertCondition} />\n                ))}\n              </div>\n            )}\n            {!emptyResults &&\n              !isTimeSeriesResults &&\n              series.map((frame, index) => (\n                // There's no way to uniquely identify a frame that doesn't cause render bugs :/ (Gilles)\n                <FrameRow key={uniqueId()} frame={frame} index={index} isAlertCondition={alertCondition} />\n              ))}\n            {emptyResults && <div className={cx(styles.expression.noData, styles.mutedText)}>No data</div>}\n          </div>\n        )}\n        <div className={styles.footer}>\n          <Stack direction=\"row\" alignItems=\"center\">\n            <AlertConditionIndicator\n              onSetCondition={() => onSetCondition(query.refId)}\n              enabled={alertCondition}\n              error={error}\n              warning={warning}\n            />\n            <Spacer />\n            {showSummary && (\n              <PreviewSummary\n                firing={groupedByState[PromAlertingRuleState.Firing].length}\n                normal={groupedByState[PromAlertingRuleState.Inactive].length}\n              />\n            )}\n          </Stack>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PreviewSummary: FC<{ firing: number; normal: number }> = ({ firing, normal }) => {\n  const { mutedText } = useStyles2(getStyles);\n  return <span className={mutedText}>{`${firing} firing, ${normal} normal`}</span>;\n};\n\ninterface HeaderProps {\n  refId: string;\n  queryType: ExpressionQueryType;\n  onUpdateRefId: (refId: string) => void;\n  onRemoveExpression: () => void;\n  onUpdateExpressionType: (type: ExpressionQueryType) => void;\n}\n\nconst Header: FC<HeaderProps> = ({ refId, queryType, onUpdateRefId, onUpdateExpressionType, onRemoveExpression }) => {\n  const styles = useStyles2(getStyles);\n  /**\n   * There are 3 edit modes:\n   *\n   * 1. \"refId\": Editing the refId (ie. A -> B)\n   * 2. \"epressionType\": Editing the type of the expression (ie. Reduce -> Math)\n   * 3. \"false\": This means we're not editing either of those\n   */\n  const [editMode, setEditMode] = useState<'refId' | 'expressionType' | false>(false);\n\n  const editing = editMode !== false;\n  const editingRefId = editing && editMode === 'refId';\n  const editingType = editing && editMode === 'expressionType';\n\n  const selectedExpressionType = gelTypes.find((o) => o.value === queryType);\n\n  return (\n    <header className={styles.header.wrapper}>\n      <Stack direction=\"row\" gap={0.5} alignItems=\"center\">\n        <Stack direction=\"row\" gap={1} alignItems=\"center\" wrap={false}>\n          {!editingRefId && (\n            <div className={styles.editable} onClick={() => setEditMode('refId')}>\n              <div className={styles.expression.refId}>{refId}</div>\n            </div>\n          )}\n          {editingRefId && (\n            <AutoSizeInput\n              autoFocus\n              defaultValue={refId}\n              minWidth={5}\n              onChange={(event) => {\n                onUpdateRefId(event.currentTarget.value);\n                setEditMode(false);\n              }}\n              onFocus={(event) => event.target.select()}\n              onBlur={(event) => {\n                onUpdateRefId(event.currentTarget.value);\n                setEditMode(false);\n              }}\n            />\n          )}\n          {!editingType && (\n            <div className={styles.editable} onClick={() => setEditMode('expressionType')}>\n              <div className={styles.mutedText}>{capitalize(queryType)}</div>\n              <Icon size=\"xs\" name=\"pen\" className={styles.mutedIcon} onClick={() => setEditMode('expressionType')} />\n            </div>\n          )}\n          {editingType && (\n            <Select\n              isOpen\n              autoFocus\n              onChange={(selection) => {\n                onUpdateExpressionType(selection.value ?? ExpressionQueryType.classic);\n                setEditMode(false);\n              }}\n              onBlur={() => {\n                setEditMode(false);\n              }}\n              options={gelTypes}\n              value={selectedExpressionType}\n              width={25}\n            />\n          )}\n        </Stack>\n        <Spacer />\n        <IconButton\n          type=\"button\"\n          name=\"trash-alt\"\n          variant=\"secondary\"\n          className={styles.mutedIcon}\n          onClick={onRemoveExpression}\n        />\n      </Stack>\n    </header>\n  );\n};\n\ninterface FrameProps extends Pick<ExpressionProps, 'isAlertCondition'> {\n  frame: DataFrame;\n  index: number;\n}\n\nconst FrameRow: FC<FrameProps> = ({ frame, index, isAlertCondition }) => {\n  const styles = useStyles2(getStyles);\n\n  const name = getSeriesName(frame) || 'Series ' + index;\n  const value = getSeriesValue(frame);\n\n  const showFiring = isAlertCondition && value !== 0;\n  const showNormal = isAlertCondition && value === 0;\n\n  return (\n    <div className={styles.expression.resultsRow}>\n      <Stack direction=\"row\" gap={1} alignItems=\"center\">\n        <span className={cx(styles.mutedText, styles.expression.resultLabel)} title={name}>\n          {name}\n        </span>\n        <div className={styles.expression.resultValue}>{value}</div>\n        {showFiring && <AlertStateTag state={PromAlertingRuleState.Firing} size=\"sm\" />}\n        {showNormal && <AlertStateTag state={PromAlertingRuleState.Inactive} size=\"sm\" />}\n      </Stack>\n    </div>\n  );\n};\n\nconst TimeseriesRow: FC<FrameProps & { index: number }> = ({ frame, index }) => {\n  const styles = useStyles2(getStyles);\n\n  const hasLabels = frame.fields[1].labels;\n  const name = hasLabels ? formatLabels(frame.fields[1].labels ?? {}) : 'Series ' + index;\n\n  const timestamps = frame.fields[0].values.toArray();\n\n  const getTimestampFromIndex = (index: number) => frame.fields[0].values.get(index);\n  const getValueFromIndex = (index: number) => frame.fields[1].values.get(index);\n\n  return (\n    <div className={styles.expression.resultsRow}>\n      <Stack direction=\"row\" gap={1} alignItems=\"center\">\n        <span className={cx(styles.mutedText, styles.expression.resultLabel)} title={name}>\n          {name}\n        </span>\n        <div className={styles.expression.resultValue}>\n          <HoverCard\n            placement=\"right\"\n            wrapperClassName={styles.timeseriesTableWrapper}\n            content={\n              <table className={styles.timeseriesTable}>\n                <thead>\n                  <tr>\n                    <th>Timestamp</th>\n                    <th>Value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {timestamps.map((_, index) => (\n                    <tr key={index}>\n                      <td className={styles.mutedText}>{dateTimeFormat(getTimestampFromIndex(index))}</td>\n                      <td className={styles.expression.resultValue}>{getValueFromIndex(index)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            }\n          >\n            <span>Time series data</span>\n          </HoverCard>\n        </div>\n      </Stack>\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  expression: {\n    wrapper: css`\n      display: flex;\n      border: solid 1px ${theme.colors.border.medium};\n\n      border-radius: ${theme.shape.borderRadius()};\n      max-width: 640px;\n    `,\n    stack: css`\n      display: flex;\n      flex-direction: column;\n      flex-wrap: nowrap;\n      gap: 0;\n      min-width: 0; // this one is important to prevent text overflow\n    `,\n    alertCondition: css``,\n    body: css`\n      padding: ${theme.spacing(1)};\n      flex: 1;\n    `,\n    refId: css`\n      font-weight: ${theme.typography.fontWeightBold};\n      color: ${theme.colors.primary.text};\n    `,\n    results: css`\n      border-top: solid 1px ${theme.colors.border.medium};\n    `,\n    noResults: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n    resultsRow: css`\n      padding: ${theme.spacing(0.75)} ${theme.spacing(1)};\n\n      &:nth-child(odd) {\n        background-color: ${theme.colors.background.secondary};\n      }\n\n      &:hover {\n        background-color: ${theme.colors.background.canvas};\n      }\n    `,\n    resultValue: css`\n      color: ${theme.colors.text.maxContrast};\n      text-align: right;\n    `,\n    resultLabel: css`\n      flex: 1;\n    `,\n    noData: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding: ${theme.spacing()};\n    `,\n  },\n  mutedText: css`\n    color: ${theme.colors.text.secondary};\n    font-size: 0.9em;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  `,\n  header: {\n    wrapper: css`\n      background: ${theme.colors.background.secondary};\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n      border-bottom: solid 1px ${theme.colors.border.medium};\n    `,\n  },\n  footer: css`\n    background: ${theme.colors.background.secondary};\n    padding: ${theme.spacing(1)};\n    border-top: solid 1px ${theme.colors.border.medium};\n  `,\n  draggableIcon: css`\n    cursor: grab;\n  `,\n  mutedIcon: css`\n    color: ${theme.colors.text.secondary};\n  `,\n  editable: css`\n    padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n    border: solid 1px ${theme.colors.border.weak};\n    border-radius: ${theme.shape.borderRadius()};\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: ${theme.spacing(1)};\n\n    cursor: pointer;\n  `,\n  timeseriesTableWrapper: css`\n    max-height: 500px;\n    max-width: 300px;\n\n    overflow-y: scroll;\n\n    padding: 0 !important; // not sure why but style override doesn't work otherwise :( (Gilles)\n  `,\n  timeseriesTable: css`\n    table-layout: auto;\n\n    width: 100%;\n    height: 100%;\n\n    td,\n    th {\n      padding: ${theme.spacing(1)};\n    }\n\n    td {\n      background: ${theme.colors.background.primary};\n    }\n\n    th {\n      background: ${theme.colors.background.secondary};\n    }\n\n    tr {\n      border-bottom: 1px solid ${theme.colors.border.medium};\n\n      &:last-of-type {\n        border-bottom: none;\n      }\n    }\n  `,\n});\n","import React, { FC, useMemo } from 'react';\n\nimport { PanelData } from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { ExpressionQuery, ExpressionQueryType } from 'app/features/expressions/types';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { Expression } from '../expressions/Expression';\n\nimport { errorFromSeries, warningFromSeries } from './util';\n\ninterface Props {\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n  panelData: Record<string, PanelData | undefined>;\n  queries: AlertQuery[];\n  onRemoveExpression: (refId: string) => void;\n  onUpdateRefId: (oldRefId: string, newRefId: string) => void;\n  onUpdateExpressionType: (refId: string, type: ExpressionQueryType) => void;\n  onUpdateQueryExpression: (query: ExpressionQuery) => void;\n}\n\nexport const ExpressionsEditor: FC<Props> = ({\n  condition,\n  onSetCondition,\n  queries,\n  panelData,\n  onUpdateRefId,\n  onRemoveExpression,\n  onUpdateExpressionType,\n  onUpdateQueryExpression,\n}) => {\n  const expressionQueries = useMemo(() => {\n    return queries.reduce((acc: ExpressionQuery[], query) => {\n      return isExpressionQuery(query.model) ? acc.concat(query.model) : acc;\n    }, []);\n  }, [queries]);\n\n  return (\n    <Stack direction=\"row\" alignItems=\"stretch\">\n      {expressionQueries.map((query) => {\n        const data = panelData[query.refId];\n\n        const isAlertCondition = condition === query.refId;\n        const error = isAlertCondition && data ? errorFromSeries(data.series) : undefined;\n        const warning = isAlertCondition && data ? warningFromSeries(data.series) : undefined;\n\n        return (\n          <Expression\n            key={query.refId}\n            isAlertCondition={isAlertCondition}\n            data={data}\n            error={error}\n            warning={warning}\n            queries={queries}\n            query={query}\n            onSetCondition={onSetCondition}\n            onRemoveExpression={onRemoveExpression}\n            onUpdateRefId={onUpdateRefId}\n            onUpdateExpressionType={onUpdateExpressionType}\n            onChangeQuery={onUpdateQueryExpression}\n          />\n        );\n      })}\n    </Stack>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { FC, useEffect, useMemo, useState } from 'react';\nimport AutoSizer from 'react-virtualized-auto-sizer';\n\nimport { FieldConfigSource, GrafanaTheme2, PanelData, ThresholdsConfig } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphFieldConfig, GraphTresholdsStyleMode } from '@grafana/schema';\nimport { PanelContext, PanelContextProvider, useStyles2 } from '@grafana/ui';\nimport appEvents from 'app/core/app_events';\nimport { PanelOptions } from 'app/plugins/panel/table/models.gen';\n\nimport { useVizHeight } from '../../hooks/useVizHeight';\nimport { SupportedPanelPlugins, PanelPluginsButtonGroup } from '../PanelPluginsButtonGroup';\n\ninterface Props {\n  data: PanelData;\n  currentPanel: SupportedPanelPlugins;\n  changePanel: (panel: SupportedPanelPlugins) => void;\n  thresholds: ThresholdsConfig;\n  thresholdsType?: GraphTresholdsStyleMode;\n  onThresholdsChange?: (thresholds: ThresholdsConfig) => void;\n}\n\ntype PanelFieldConfig = FieldConfigSource<GraphFieldConfig>;\n\nexport const VizWrapper: FC<Props> = ({\n  data,\n  currentPanel,\n  changePanel,\n  thresholds,\n  thresholdsType = GraphTresholdsStyleMode.Line,\n}) => {\n  const [options, setOptions] = useState<PanelOptions>({\n    frameIndex: 0,\n    showHeader: true,\n  });\n  const vizHeight = useVizHeight(data, currentPanel, options.frameIndex);\n  const styles = useStyles2(getStyles(vizHeight));\n\n  const [fieldConfig, setFieldConfig] = useState<PanelFieldConfig>(defaultFieldConfig(thresholds, data));\n\n  useEffect(() => {\n    setFieldConfig((fieldConfig) => ({\n      ...fieldConfig,\n      defaults: {\n        ...fieldConfig.defaults,\n        thresholds: thresholds,\n        unit: defaultUnit(data),\n        custom: {\n          ...fieldConfig.defaults.custom,\n          thresholdsStyle: {\n            mode: thresholdsType,\n          },\n        },\n      },\n    }));\n  }, [thresholds, setFieldConfig, data, thresholdsType]);\n\n  const context: PanelContext = useMemo(\n    () => ({\n      eventBus: appEvents,\n      canEditThresholds: false,\n      showThresholds: true,\n    }),\n    []\n  );\n\n  if (!options || !data) {\n    return null;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.buttonGroup}>\n        <PanelPluginsButtonGroup onChange={changePanel} value={currentPanel} />\n      </div>\n      <AutoSizer>\n        {({ width }) => {\n          if (width === 0) {\n            return null;\n          }\n          return (\n            <div style={{ height: `${vizHeight}px`, width: `${width}px` }}>\n              <PanelContextProvider value={context}>\n                <PanelRenderer\n                  height={vizHeight}\n                  width={width}\n                  data={data}\n                  pluginId={currentPanel}\n                  title=\"title\"\n                  onOptionsChange={setOptions}\n                  options={options}\n                  fieldConfig={fieldConfig}\n                />\n              </PanelContextProvider>\n            </div>\n          );\n        }}\n      </AutoSizer>\n    </div>\n  );\n};\n\nconst getStyles = (visHeight: number) => (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    padding: 0 ${theme.spacing(2)};\n    height: ${visHeight + theme.spacing.gridSize * 4}px;\n  `,\n  buttonGroup: css`\n    display: flex;\n    justify-content: flex-end;\n  `,\n});\n\nfunction defaultUnit(data: PanelData): string | undefined {\n  return data.series[0]?.fields.find((field) => field.type === 'number')?.config.unit;\n}\n\nfunction defaultFieldConfig(thresholds: ThresholdsConfig, data: PanelData): PanelFieldConfig {\n  if (!thresholds) {\n    return { defaults: {}, overrides: [] };\n  }\n\n  return {\n    defaults: {\n      thresholds: thresholds,\n      unit: defaultUnit(data),\n      custom: {\n        thresholdsStyle: {\n          mode: GraphTresholdsStyleMode.Line,\n        },\n      },\n    },\n    overrides: [],\n  };\n}\n","import { PanelData } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\n\nimport { STAT, TIMESERIES } from '../utils/constants';\n\nexport function useVizHeight(data: PanelData, pluginId: string, frameIndex: number) {\n  const theme = useTheme2();\n  if (pluginId === TIMESERIES || pluginId === STAT || dataIsEmpty(data)) {\n    return 200;\n  }\n\n  const values = data.series[frameIndex].fields[0].values.length;\n  const rowHeight = theme.spacing.gridSize * 5;\n\n  /*\n   Calculate how if we can make  the table smaller than 200px\n   for when we only have 1-2 values\n   The extra rowHeight is to accommodate the header.\n  */\n  const tableHeight = values * rowHeight + rowHeight;\n\n  return tableHeight >= 200 ? 200 : tableHeight;\n}\n\nfunction dataIsEmpty(data: PanelData) {\n  return !data || !data.series[0] || !data.series[0].fields[0] || !data.series[0].fields[0].values;\n}\n","import { css } from '@emotion/css';\nimport { cloneDeep } from 'lodash';\nimport React, { FC, useState } from 'react';\n\nimport {\n  CoreApp,\n  DataQuery,\n  DataSourceInstanceSettings,\n  getDefaultRelativeTimeRange,\n  GrafanaTheme2,\n  LoadingState,\n  PanelData,\n  RelativeTimeRange,\n  ThresholdsConfig,\n} from '@grafana/data';\nimport { Stack } from '@grafana/experimental';\nimport { RelativeTimeRangePicker, useStyles2, Tooltip, Icon, GraphTresholdsStyleMode } from '@grafana/ui';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { QueryEditorRow } from 'app/features/query/components/QueryEditorRow';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { TABLE, TIMESERIES } from '../../utils/constants';\nimport { SupportedPanelPlugins } from '../PanelPluginsButtonGroup';\nimport { AlertConditionIndicator } from '../expressions/AlertConditionIndicator';\n\nimport { VizWrapper } from './VizWrapper';\n\ninterface Props {\n  data: PanelData;\n  error?: Error;\n  query: AlertQuery;\n  queries: AlertQuery[];\n  dsSettings: DataSourceInstanceSettings;\n  onChangeDataSource: (settings: DataSourceInstanceSettings, index: number) => void;\n  onChangeQuery: (query: DataQuery, index: number) => void;\n  onChangeTimeRange?: (timeRange: RelativeTimeRange, index: number) => void;\n  onRemoveQuery: (query: DataQuery) => void;\n  onDuplicateQuery: (query: AlertQuery) => void;\n  onRunQueries: () => void;\n  index: number;\n  thresholds: ThresholdsConfig;\n  thresholdsType?: GraphTresholdsStyleMode;\n  onChangeThreshold?: (thresholds: ThresholdsConfig, index: number) => void;\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n}\n\nexport const QueryWrapper: FC<Props> = ({\n  data,\n  error,\n  dsSettings,\n  index,\n  onChangeDataSource,\n  onChangeQuery,\n  onChangeTimeRange,\n  onRunQueries,\n  onRemoveQuery,\n  onDuplicateQuery,\n  query,\n  queries,\n  thresholds,\n  thresholdsType,\n  onChangeThreshold,\n  condition,\n  onSetCondition,\n}) => {\n  const styles = useStyles2(getStyles);\n  const isExpression = isExpressionQuery(query.model);\n  const [pluginId, changePluginId] = useState<SupportedPanelPlugins>(isExpression ? TABLE : TIMESERIES);\n\n  function SelectingDataSourceTooltip() {\n    const styles = useStyles2(getStyles);\n    return (\n      <div className={styles.dsTooltip}>\n        <Tooltip\n          content={\n            <>\n              Not finding the data source you want? Some data sources are not supported for alerting. Click on the icon\n              for more information.\n            </>\n          }\n        >\n          <Icon\n            name=\"info-circle\"\n            onClick={() =>\n              window.open(\n                ' https://grafana.com/docs/grafana/latest/alerting/fundamentals/data-source-alerting/',\n                '_blank'\n              )\n            }\n          />\n        </Tooltip>\n      </div>\n    );\n  }\n\n  // TODO add a warning label here too when the data looks like time series data and is used as an alert condition\n  function HeaderExtras({ query, error, index }: { query: AlertQuery; error?: Error; index: number }) {\n    if (isExpressionQuery(query.model)) {\n      return null;\n    } else {\n      return (\n        <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n          <SelectingDataSourceTooltip />\n          {onChangeTimeRange && (\n            <RelativeTimeRangePicker\n              timeRange={query.relativeTimeRange ?? getDefaultRelativeTimeRange()}\n              onChange={(range) => onChangeTimeRange(range, index)}\n            />\n          )}\n          <AlertConditionIndicator\n            onSetCondition={() => onSetCondition(query.refId)}\n            enabled={condition === query.refId}\n            error={error}\n          />\n        </Stack>\n      );\n    }\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <QueryEditorRow<DataQuery>\n        alerting\n        dataSource={dsSettings}\n        onChangeDataSource={!isExpression ? (settings) => onChangeDataSource(settings, index) : undefined}\n        id={query.refId}\n        index={index}\n        key={query.refId}\n        data={data}\n        query={cloneDeep(query.model)}\n        onChange={(query) => onChangeQuery(query, index)}\n        onRemoveQuery={onRemoveQuery}\n        onAddQuery={() => onDuplicateQuery(cloneDeep(query))}\n        onRunQuery={onRunQueries}\n        queries={queries}\n        renderHeaderExtras={() => <HeaderExtras query={query} index={index} error={error} />}\n        app={CoreApp.UnifiedAlerting}\n        visualization={\n          data.state !== LoadingState.NotStarted ? (\n            <VizWrapper\n              data={data}\n              changePanel={changePluginId}\n              currentPanel={pluginId}\n              thresholds={thresholds}\n              thresholdsType={thresholdsType}\n              onThresholdsChange={onChangeThreshold ? (thresholds) => onChangeThreshold(thresholds, index) : undefined}\n            />\n          ) : null\n        }\n        hideDisableQuery={true}\n      />\n    </div>\n  );\n};\n\nexport const EmptyQueryWrapper = ({ children }: React.PropsWithChildren<{}>) => {\n  const styles = useStyles2(getStyles);\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    label: AlertingQueryWrapper;\n    margin-bottom: ${theme.spacing(1)};\n    border: 1px solid ${theme.colors.border.medium};\n    border-radius: ${theme.shape.borderRadius(1)};\n  `,\n  dsTooltip: css`\n    display: flex;\n    align-items: center;\n    &:hover {\n      opacity: 0.85;\n      cursor: pointer;\n    }\n  `,\n});\n","import { omit } from 'lodash';\nimport React, { PureComponent, useState } from 'react';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\n\nimport { DataQuery, DataSourceInstanceSettings, LoadingState, PanelData, RelativeTimeRange } from '@grafana/data';\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { Button, Card, Icon } from '@grafana/ui';\nimport { QueryOperationRow } from 'app/core/components/QueryOperationRow/QueryOperationRow';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { AlertDataQuery, AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { EmptyQueryWrapper, QueryWrapper } from './QueryWrapper';\nimport { errorFromSeries, getThresholdsForQueries } from './util';\n\ninterface Props {\n  // The query configuration\n  queries: AlertQuery[];\n  expressions: AlertQuery[];\n  data: Record<string, PanelData>;\n  onRunQueries: () => void;\n\n  // Query editing\n  onQueriesChange: (queries: AlertQuery[]) => void;\n  onDuplicateQuery: (query: AlertQuery) => void;\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n}\n\nexport class QueryRows extends PureComponent<Props> {\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onRemoveQuery = (query: DataQuery) => {\n    const { queries, onQueriesChange } = this.props;\n    onQueriesChange(queries.filter((q) => q.refId !== query.refId));\n  };\n\n  onChangeTimeRange = (timeRange: RelativeTimeRange, index: number) => {\n    const { queries, onQueriesChange } = this.props;\n    onQueriesChange(\n      queries.map((item, itemIndex) => {\n        if (itemIndex !== index) {\n          return item;\n        }\n        return {\n          ...item,\n          relativeTimeRange: timeRange,\n        };\n      })\n    );\n  };\n\n  onChangeDataSource = (settings: DataSourceInstanceSettings, index: number) => {\n    const { queries, onQueriesChange } = this.props;\n\n    const updatedQueries = queries.map((item, itemIndex) => {\n      if (itemIndex !== index) {\n        return item;\n      }\n\n      const previousSettings = this.getDataSourceSettings(item);\n\n      // Copy model if changing to a datasource of same type.\n      if (settings.type === previousSettings?.type) {\n        return copyModel(item, settings);\n      }\n      return newModel(item, settings);\n    });\n\n    onQueriesChange(updatedQueries);\n  };\n\n  onChangeQuery = (query: DataQuery, index: number) => {\n    const { queries, onQueriesChange } = this.props;\n\n    onQueriesChange(\n      queries.map((item, itemIndex) => {\n        if (itemIndex !== index) {\n          return item;\n        }\n\n        return {\n          ...item,\n          refId: query.refId,\n          queryType: item.model.queryType ?? '',\n          model: {\n            ...item.model,\n            ...query,\n            datasource: query.datasource!,\n          },\n        };\n      })\n    );\n  };\n\n  onDragEnd = (result: DropResult) => {\n    const { queries, onQueriesChange } = this.props;\n\n    if (!result || !result.destination) {\n      return;\n    }\n\n    const startIndex = result.source.index;\n    const endIndex = result.destination.index;\n    if (startIndex === endIndex) {\n      return;\n    }\n\n    const update = Array.from(queries);\n    const [removed] = update.splice(startIndex, 1);\n    update.splice(endIndex, 0, removed);\n    onQueriesChange(update);\n  };\n\n  getDataSourceSettings = (query: AlertQuery): DataSourceInstanceSettings | undefined => {\n    return getDataSourceSrv().getInstanceSettings(query.datasourceUid);\n  };\n\n  render() {\n    const { queries, expressions } = this.props;\n    const thresholdByRefId = getThresholdsForQueries([...queries, ...expressions]);\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"alerting-queries\" direction=\"vertical\">\n          {(provided) => {\n            return (\n              <div ref={provided.innerRef} {...provided.droppableProps}>\n                {queries.map((query, index) => {\n                  const data: PanelData = this.props.data?.[query.refId] ?? {\n                    series: [],\n                    state: LoadingState.NotStarted,\n                  };\n                  const dsSettings = this.getDataSourceSettings(query);\n\n                  const isAlertCondition = this.props.condition === query.refId;\n                  const error = isAlertCondition ? errorFromSeries(data.series) : undefined;\n\n                  if (!dsSettings) {\n                    return (\n                      <DatasourceNotFound\n                        key={`${query.refId}-${index}`}\n                        index={index}\n                        model={query.model}\n                        onUpdateDatasource={() => {\n                          const defaultDataSource = getDatasourceSrv().getInstanceSettings(null);\n                          if (defaultDataSource) {\n                            this.onChangeDataSource(defaultDataSource, index);\n                          }\n                        }}\n                        onRemoveQuery={() => {\n                          this.onRemoveQuery(query);\n                        }}\n                      />\n                    );\n                  }\n\n                  return (\n                    <QueryWrapper\n                      index={index}\n                      key={query.refId}\n                      dsSettings={dsSettings}\n                      data={data}\n                      error={error}\n                      query={query}\n                      onChangeQuery={this.onChangeQuery}\n                      onRemoveQuery={this.onRemoveQuery}\n                      queries={queries}\n                      onChangeDataSource={this.onChangeDataSource}\n                      onDuplicateQuery={this.props.onDuplicateQuery}\n                      onChangeTimeRange={this.onChangeTimeRange}\n                      thresholds={thresholdByRefId[query.refId]?.config}\n                      thresholdsType={thresholdByRefId[query.refId]?.mode}\n                      onRunQueries={this.props.onRunQueries}\n                      condition={this.props.condition}\n                      onSetCondition={this.props.onSetCondition}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            );\n          }}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nfunction copyModel(item: AlertQuery, settings: DataSourceInstanceSettings): Omit<AlertQuery, 'datasource'> {\n  return {\n    ...item,\n    model: {\n      ...omit(item.model, 'datasource'),\n      datasource: {\n        type: settings.type,\n        uid: settings.uid,\n      },\n    },\n    datasourceUid: settings.uid,\n  };\n}\n\nfunction newModel(item: AlertQuery, settings: DataSourceInstanceSettings): Omit<AlertQuery, 'datasource'> {\n  return {\n    refId: item.refId,\n    relativeTimeRange: item.relativeTimeRange,\n    queryType: '',\n    datasourceUid: settings.uid,\n    model: {\n      refId: item.refId,\n      hide: false,\n      datasource: {\n        type: settings.type,\n        uid: settings.uid,\n      },\n    },\n  };\n}\n\ninterface DatasourceNotFoundProps {\n  index: number;\n  model: AlertDataQuery;\n  onUpdateDatasource: () => void;\n  onRemoveQuery: () => void;\n}\n\nconst DatasourceNotFound = ({ index, onUpdateDatasource, onRemoveQuery, model }: DatasourceNotFoundProps) => {\n  const refId = model.refId;\n\n  const [showDetails, setShowDetails] = useState<boolean>(false);\n\n  const toggleDetails = () => {\n    setShowDetails((show) => !show);\n  };\n\n  const handleUpdateDatasource = () => {\n    onUpdateDatasource();\n  };\n\n  return (\n    <EmptyQueryWrapper>\n      <QueryOperationRow title={refId} draggable index={index} id={refId} isOpen>\n        <Card>\n          <Card.Heading>This datasource has been removed</Card.Heading>\n          <Card.Description>\n            The datasource for this query was not found, it was either removed or is not installed correctly.\n          </Card.Description>\n          <Card.Figure>\n            <Icon name=\"question-circle\" />\n          </Card.Figure>\n          <Card.Actions>\n            <Button key=\"update\" variant=\"secondary\" onClick={handleUpdateDatasource}>\n              Update datasource\n            </Button>\n            <Button key=\"remove\" variant=\"destructive\" onClick={onRemoveQuery}>\n              Remove query\n            </Button>\n          </Card.Actions>\n          <Card.SecondaryActions>\n            <Button\n              key=\"details\"\n              onClick={toggleDetails}\n              icon={showDetails ? 'angle-up' : 'angle-down'}\n              fill=\"text\"\n              size=\"sm\"\n            >\n              Show details\n            </Button>\n          </Card.SecondaryActions>\n        </Card>\n        {showDetails && (\n          <div>\n            <pre>\n              <code>{JSON.stringify(model, null, 2)}</code>\n            </pre>\n          </div>\n        )}\n      </QueryOperationRow>\n    </EmptyQueryWrapper>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { FC } from 'react';\n\nimport { GrafanaTheme2, PanelData } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { QueryRows } from './QueryRows';\n\ninterface Props {\n  panelData: Record<string, PanelData>;\n  queries: AlertQuery[];\n  expressions: AlertQuery[];\n  onRunQueries: () => void;\n  onChangeQueries: (queries: AlertQuery[]) => void;\n  onDuplicateQuery: (query: AlertQuery) => void;\n  condition: string | null;\n  onSetCondition: (refId: string) => void;\n}\n\nexport const QueryEditor: FC<Props> = ({\n  queries,\n  expressions,\n  panelData,\n  onRunQueries,\n  onChangeQueries,\n  onDuplicateQuery,\n  condition,\n  onSetCondition,\n}) => {\n  const styles = useStyles2(getStyles);\n\n  return (\n    <div className={styles.container}>\n      <QueryRows\n        data={panelData}\n        queries={queries}\n        expressions={expressions}\n        onRunQueries={onRunQueries}\n        onQueriesChange={onChangeQueries}\n        onDuplicateQuery={onDuplicateQuery}\n        condition={condition}\n        onSetCondition={onSetCondition}\n      />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    background-color: ${theme.colors.background.primary};\n    height: 100%;\n    max-width: ${theme.breakpoints.values.xxl}px;\n  `,\n});\n","import { DataSourceInstanceSettings } from '@grafana/data';\nimport { PromBasedDataSource } from 'app/types/unified-alerting';\n\nimport { getDataSourceByName } from '../utils/datasource';\n\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\nexport function useRulesSourcesWithRuler(): DataSourceInstanceSettings[] {\n  const dataSources = useUnifiedAlertingSelector((state) => state.dataSources);\n\n  const dataSourcesWithRuler = Object.values(dataSources)\n    .map((ds) => ds.result)\n    .filter((ds): ds is PromBasedDataSource => Boolean(ds?.rulerConfig));\n  // try fetching rules for each prometheus to see if it has ruler\n\n  return dataSourcesWithRuler\n    .map((ds) => getDataSourceByName(ds.name))\n    .filter((dsConfig): dsConfig is DataSourceInstanceSettings => Boolean(dsConfig));\n}\n","import React, { useCallback } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { DataSourceInstanceSettings } from '@grafana/data';\nimport { DataSourcePicker } from '@grafana/runtime';\nimport { dispatch } from 'app/store/store';\n\nimport { useRulesSourcesWithRuler } from '../../hooks/useRuleSourcesWithRuler';\nimport { fetchAllPromBuildInfoAction } from '../../state/actions';\n\ninterface Props {\n  onChange: (ds: DataSourceInstanceSettings) => void;\n  value: string | null;\n  onBlur?: () => void;\n  name?: string;\n}\n\nexport function CloudRulesSourcePicker({ value, ...props }: Props): JSX.Element {\n  const rulesSourcesWithRuler = useRulesSourcesWithRuler();\n\n  const { loading = true } = useAsync(() => dispatch(fetchAllPromBuildInfoAction()), [dispatch]);\n\n  const dataSourceFilter = useCallback(\n    (ds: DataSourceInstanceSettings): boolean => {\n      return !!rulesSourcesWithRuler.find(({ id }) => id === ds.id);\n    },\n    [rulesSourcesWithRuler]\n  );\n\n  return (\n    <DataSourcePicker\n      disabled={loading}\n      isLoading={loading}\n      noDefault\n      alerting\n      filter={dataSourceFilter}\n      current={value}\n      {...props}\n    />\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport React, { FC, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Card, useStyles2 } from '@grafana/ui';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\ninterface Props extends SharedProps {\n  image: string;\n  name: string;\n  description: ReactNode;\n  value: RuleFormType;\n}\n\n// these properties are shared between all Rule Types\nexport interface SharedProps {\n  selected?: boolean;\n  disabled?: boolean;\n  onClick: (value: RuleFormType) => void;\n}\n\nconst RuleType: FC<Props> = (props) => {\n  const { name, description, image, selected = false, value, onClick, disabled = false } = props;\n  const styles = useStyles2(getStyles);\n\n  const cardStyles = cx({\n    [styles.wrapper]: true,\n    [styles.disabled]: disabled,\n  });\n\n  return (\n    <Card className={cardStyles} isSelected={selected} onClick={() => onClick(value)} disabled={disabled}>\n      <Card.Figure>\n        <img src={image} alt=\"\" />\n      </Card.Figure>\n      <Card.Heading>{name}</Card.Heading>\n      <Card.Description>{description}</Card.Description>\n    </Card>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    width: 380px;\n    cursor: pointer;\n    user-select: none;\n  `,\n  disabled: css`\n    opacity: 0.5;\n  `,\n});\n\nexport { RuleType };\n","import React, { FC } from 'react';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { RuleType, SharedProps } from './RuleType';\n\nconst GrafanaManagedRuleType: FC<SharedProps> = ({ selected = false, disabled, onClick }) => {\n  return (\n    <RuleType\n      name=\"Grafana managed alert\"\n      description={\n        <span>\n          Supports multiple data sources of any kind.\n          <br />\n          Transform data with expressions.\n        </span>\n      }\n      image=\"public/img/grafana_icon.svg\"\n      selected={selected}\n      disabled={disabled}\n      value={RuleFormType.grafana}\n      onClick={onClick}\n    />\n  );\n};\n\nexport { GrafanaManagedRuleType };\n","import React from 'react';\n\nimport { Tooltip } from '@grafana/ui';\n\ntype Props = {\n  visible: boolean;\n};\n\nconst DisabledTooltip = ({ children, visible = false }: React.PropsWithChildren<Props>) => {\n  if (!visible) {\n    return <>{children}</>;\n  }\n\n  return (\n    <Tooltip content=\"You do not appear to have any compatible datasources.\" placement=\"top\">\n      <div>{children}</div>\n    </Tooltip>\n  );\n};\n\nexport { DisabledTooltip };\n","import React, { FC } from 'react';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { DisabledTooltip } from './DisabledTooltip';\nimport { RuleType, SharedProps } from './RuleType';\n\ninterface Props extends SharedProps {\n  onClick: (value: RuleFormType) => void;\n}\n\nconst MimirFlavoredType: FC<Props> = ({ selected = false, disabled = false, onClick }) => {\n  return (\n    <DisabledTooltip visible={disabled}>\n      <RuleType\n        name=\"Mimir or Loki alert\"\n        description={\n          <span>\n            Use a Mimir, Loki or Cortex datasource.\n            <br />\n            Expressions are not supported.\n          </span>\n        }\n        image=\"public/img/alerting/mimir_logo.svg\"\n        selected={selected}\n        disabled={disabled}\n        value={RuleFormType.cloudAlerting}\n        onClick={onClick}\n      />\n    </DisabledTooltip>\n  );\n};\n\nexport { MimirFlavoredType };\n","import React, { FC } from 'react';\n\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { DisabledTooltip } from './DisabledTooltip';\nimport { RuleType, SharedProps } from './RuleType';\n\nconst RecordingRuleType: FC<SharedProps> = ({ selected = false, disabled = false, onClick }) => {\n  return (\n    <DisabledTooltip visible={disabled}>\n      <RuleType\n        name=\"Mimir or Loki recording rule\"\n        description={\n          <span>\n            Precompute expressions.\n            <br />\n            Should be combined with an alert rule.\n          </span>\n        }\n        image=\"public/img/alerting/mimir_logo_recording.svg\"\n        selected={selected}\n        disabled={disabled}\n        value={RuleFormType.cloudRecording}\n        onClick={onClick}\n      />\n    </DisabledTooltip>\n  );\n};\n\nexport { RecordingRuleType };\n","import { css } from '@emotion/css';\nimport { isEmpty } from 'lodash';\nimport React, { FC, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { Stack } from '@grafana/experimental';\nimport { useStyles2 } from '@grafana/ui';\nimport { dispatch } from 'app/store/store';\n\nimport { useRulesSourcesWithRuler } from '../../../hooks/useRuleSourcesWithRuler';\nimport { fetchAllPromBuildInfoAction } from '../../../state/actions';\nimport { RuleFormType } from '../../../types/rule-form';\n\nimport { GrafanaManagedRuleType } from './GrafanaManagedAlert';\nimport { MimirFlavoredType } from './MimirOrLokiAlert';\nimport { RecordingRuleType } from './MimirOrLokiRecordingRule';\n\ninterface RuleTypePickerProps {\n  onChange: (value: RuleFormType) => void;\n  selected: RuleFormType;\n  enabledTypes: RuleFormType[];\n}\n\nconst RuleTypePicker: FC<RuleTypePickerProps> = ({ selected, onChange, enabledTypes }) => {\n  const rulesSourcesWithRuler = useRulesSourcesWithRuler();\n  const hasLotexDatasources = !isEmpty(rulesSourcesWithRuler);\n\n  useEffect(() => {\n    dispatch(fetchAllPromBuildInfoAction());\n  }, []);\n\n  const styles = useStyles2(getStyles);\n\n  return (\n    <>\n      <Stack direction=\"row\" gap={2}>\n        {enabledTypes.includes(RuleFormType.grafana) && (\n          <GrafanaManagedRuleType selected={selected === RuleFormType.grafana} onClick={onChange} />\n        )}\n        {enabledTypes.includes(RuleFormType.cloudAlerting) && (\n          <MimirFlavoredType\n            selected={selected === RuleFormType.cloudAlerting}\n            onClick={onChange}\n            disabled={!hasLotexDatasources}\n          />\n        )}\n        {enabledTypes.includes(RuleFormType.cloudRecording) && (\n          <RecordingRuleType\n            selected={selected === RuleFormType.cloudRecording}\n            onClick={onChange}\n            disabled={!hasLotexDatasources}\n          />\n        )}\n      </Stack>\n      {enabledTypes.includes(RuleFormType.grafana) && (\n        <small className={styles.meta}>\n          Select &ldquo;Grafana managed&rdquo; unless you have a Mimir, Loki or Cortex data source with the Ruler API\n          enabled.\n        </small>\n      )}\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  meta: css`\n    color: ${theme.colors.text.disabled};\n  `,\n});\n\nexport { RuleTypePicker };\n","import { css } from '@emotion/css';\nimport React, { FC } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { DataSourceInstanceSettings, GrafanaTheme2 } from '@grafana/data';\nimport { Field, InputControl, useStyles2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { AccessControlAction } from 'app/types';\n\nimport { RuleFormType, RuleFormValues } from '../../../types/rule-form';\nimport { CloudRulesSourcePicker } from '../CloudRulesSourcePicker';\nimport { RuleTypePicker } from '../rule-types/RuleTypePicker';\n\ninterface Props {\n  editingExistingRule: boolean;\n}\n\nexport const AlertType: FC<Props> = ({ editingExistingRule }) => {\n  const { enabledRuleTypes, defaultRuleType } = getAvailableRuleTypes();\n\n  const {\n    control,\n    formState: { errors },\n    getValues,\n    setValue,\n    watch,\n  } = useFormContext<RuleFormValues & { location?: string }>();\n\n  const styles = useStyles2(getStyles);\n  const ruleFormType = watch('type');\n\n  return (\n    <>\n      {!editingExistingRule && (\n        <Field error={errors.type?.message} invalid={!!errors.type?.message} data-testid=\"alert-type-picker\">\n          <InputControl\n            render={({ field: { onChange } }) => (\n              <RuleTypePicker\n                aria-label=\"Rule type\"\n                selected={getValues('type') ?? defaultRuleType}\n                onChange={onChange}\n                enabledTypes={enabledRuleTypes}\n              />\n            )}\n            name=\"type\"\n            control={control}\n            rules={{\n              required: { value: true, message: 'Please select alert type' },\n            }}\n          />\n        </Field>\n      )}\n\n      <div className={styles.flexRow}>\n        {(ruleFormType === RuleFormType.cloudRecording || ruleFormType === RuleFormType.cloudAlerting) && (\n          <Field\n            className={styles.formInput}\n            label=\"Select data source\"\n            error={errors.dataSourceName?.message}\n            invalid={!!errors.dataSourceName?.message}\n            data-testid=\"datasource-picker\"\n          >\n            <InputControl\n              render={({ field: { onChange, ref, ...field } }) => (\n                <CloudRulesSourcePicker\n                  {...field}\n                  onChange={(ds: DataSourceInstanceSettings) => {\n                    // reset location if switching data sources, as different rules source will have different groups and namespaces\n                    setValue('location', undefined);\n                    onChange(ds?.name ?? null);\n                  }}\n                />\n              )}\n              name=\"dataSourceName\"\n              control={control}\n              rules={{\n                required: { value: true, message: 'Please select a data source' },\n              }}\n            />\n          </Field>\n        )}\n      </div>\n    </>\n  );\n};\n\nfunction getAvailableRuleTypes() {\n  const canCreateGrafanaRules = contextSrv.hasAccess(\n    AccessControlAction.AlertingRuleCreate,\n    contextSrv.hasEditPermissionInFolders\n  );\n  const canCreateCloudRules = contextSrv.hasAccess(AccessControlAction.AlertingRuleExternalWrite, contextSrv.isEditor);\n  const defaultRuleType = canCreateGrafanaRules ? RuleFormType.grafana : RuleFormType.cloudAlerting;\n\n  const enabledRuleTypes: RuleFormType[] = [];\n  if (canCreateGrafanaRules) {\n    enabledRuleTypes.push(RuleFormType.grafana);\n  }\n  if (canCreateCloudRules) {\n    enabledRuleTypes.push(RuleFormType.cloudAlerting, RuleFormType.cloudRecording);\n  }\n\n  return { enabledRuleTypes, defaultRuleType };\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  formInput: css`\n    width: 330px;\n    & + & {\n      margin-left: ${theme.spacing(3)};\n    }\n  `,\n  flexRow: css`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-end;\n  `,\n});\n","import { ExpressionDatasourceUID } from 'app/features/expressions/ExpressionDatasource';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nexport const hasCyclicalReferences = (queries: AlertQuery[]) => {\n  try {\n    JSON.stringify(queries);\n    return false;\n  } catch (e) {\n    return true;\n  }\n};\n\nexport const findDataSourceFromExpressionRecursive = (\n  queries: AlertQuery[],\n  alertQuery: AlertQuery\n): AlertQuery | null | undefined => {\n  //Check if this is not cyclical structre\n  if (hasCyclicalReferences(queries)) {\n    return null;\n  }\n  // We have the data source in this dataQuery\n  if (alertQuery.datasourceUid !== ExpressionDatasourceUID) {\n    return alertQuery;\n  }\n  // alertQuery it's an expression, we have to traverse all the tree up to the data source\n  else {\n    const alertQueryReferenced = queries.find((alertQuery_) => alertQuery_.refId === alertQuery.model.expression);\n    if (alertQueryReferenced) {\n      return findDataSourceFromExpressionRecursive(queries, alertQueryReferenced);\n    } else {\n      return null;\n    }\n  }\n};\n","import { createAction, createReducer } from '@reduxjs/toolkit';\n\nimport { DataQuery, RelativeTimeRange, getDefaultRelativeTimeRange } from '@grafana/data';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { findDataSourceFromExpressionRecursive } from 'app/features/alerting/utils/dataSourceFromExpression';\nimport {\n  dataSource as expressionDatasource,\n  ExpressionDatasourceUID,\n} from 'app/features/expressions/ExpressionDatasource';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { ExpressionQuery, ExpressionQueryType } from 'app/features/expressions/types';\nimport { defaultCondition } from 'app/features/expressions/utils/expressionTypes';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { getDefaultOrFirstCompatibleDataSource } from '../../../utils/datasource';\nimport { queriesWithUpdatedReferences, refIdExists } from '../util';\n\nexport interface QueriesAndExpressionsState {\n  queries: AlertQuery[];\n}\n\nconst findDataSourceFromExpression = (\n  queries: AlertQuery[],\n  expression: string | undefined\n): AlertQuery | null | undefined => {\n  const firstReference = queries.find((alertQuery) => alertQuery.refId === expression);\n  const dataSource = firstReference && findDataSourceFromExpressionRecursive(queries, firstReference);\n  return dataSource;\n};\n\nconst initialState: QueriesAndExpressionsState = {\n  queries: [],\n};\n\nexport const duplicateQuery = createAction<AlertQuery>('duplicateQuery');\nexport const addNewDataQuery = createAction('addNewDataQuery');\nexport const setDataQueries = createAction<AlertQuery[]>('setDataQueries');\n\nexport const addNewExpression = createAction('addNewExpression');\nexport const removeExpression = createAction<string>('removeExpression');\nexport const updateExpression = createAction<ExpressionQuery>('updateExpression');\nexport const updateExpressionRefId = createAction<{ oldRefId: string; newRefId: string }>('updateExpressionRefId');\nexport const rewireExpressions = createAction<{ oldRefId: string; newRefId: string }>('rewireExpressions');\nexport const updateExpressionType = createAction<{ refId: string; type: ExpressionQueryType }>('updateExpressionType');\nexport const updateExpressionTimeRange = createAction('updateExpressionTimeRange');\n\nexport const queriesAndExpressionsReducer = createReducer(initialState, (builder) => {\n  // data queries actions\n  builder\n    .addCase(duplicateQuery, (state, { payload }) => {\n      state.queries = addQuery(state.queries, payload);\n    })\n    .addCase(addNewDataQuery, (state) => {\n      const datasource = getDefaultOrFirstCompatibleDataSource();\n      if (!datasource) {\n        return;\n      }\n\n      state.queries = addQuery(state.queries, {\n        datasourceUid: datasource.uid,\n        model: {\n          refId: '',\n          datasource: {\n            type: datasource.type,\n            uid: datasource.uid,\n          },\n        },\n      });\n    })\n    .addCase(setDataQueries, (state, { payload }) => {\n      const expressionQueries = state.queries.filter((query) => isExpressionQuery(query.model));\n      state.queries = [...payload, ...expressionQueries];\n    });\n\n  // expressions actions\n  builder\n    .addCase(addNewExpression, (state) => {\n      state.queries = addQuery(state.queries, {\n        datasourceUid: ExpressionDatasourceUID,\n        model: expressionDatasource.newQuery({\n          type: ExpressionQueryType.math,\n          conditions: [{ ...defaultCondition, query: { params: [] } }],\n          expression: '',\n        }),\n      });\n    })\n    .addCase(removeExpression, (state, { payload }) => {\n      state.queries = state.queries.filter((query) => query.refId !== payload);\n    })\n    .addCase(updateExpression, (state, { payload }) => {\n      state.queries = state.queries.map((query) => {\n        const dataSourceAlertQuery = findDataSourceFromExpression(state.queries, payload.expression);\n\n        const relativeTimeRange = dataSourceAlertQuery\n          ? dataSourceAlertQuery.relativeTimeRange\n          : getDefaultRelativeTimeRange();\n\n        if (query.refId === payload.refId) {\n          query.model = payload;\n          if (payload.type === ExpressionQueryType.resample) {\n            query.relativeTimeRange = relativeTimeRange;\n          }\n        }\n        return query;\n      });\n    })\n    .addCase(updateExpressionTimeRange, (state) => {\n      const newState = state.queries.map((query) => {\n        // It's an expression , let's update the relativeTimeRange with its dataSource relativeTimeRange\n        if (query.datasourceUid === ExpressionDatasourceUID) {\n          const dataSource = findDataSourceFromExpression(state.queries, query.model.expression);\n          const relativeTimeRange = dataSource ? dataSource.relativeTimeRange : getDefaultRelativeTimeRange();\n          query.relativeTimeRange = relativeTimeRange;\n        }\n        return query;\n      });\n      state.queries = newState;\n    })\n    .addCase(updateExpressionRefId, (state, { payload }) => {\n      const { newRefId, oldRefId } = payload;\n\n      // if the new refId already exists we just refuse to update the state\n      const newRefIdExists = refIdExists(state.queries, newRefId);\n      if (newRefIdExists) {\n        return;\n      }\n\n      const updatedQueries = queriesWithUpdatedReferences(state.queries, oldRefId, newRefId);\n      state.queries = updatedQueries.map((query) => {\n        if (query.refId === oldRefId) {\n          return {\n            ...query,\n            refId: newRefId,\n            model: {\n              ...query.model,\n              refId: newRefId,\n            },\n          };\n        }\n\n        return query;\n      });\n    })\n    .addCase(rewireExpressions, (state, { payload }) => {\n      state.queries = queriesWithUpdatedReferences(state.queries, payload.oldRefId, payload.newRefId);\n    })\n    .addCase(updateExpressionType, (state, action) => {\n      state.queries = state.queries.map((query) => {\n        return query.refId === action.payload.refId\n          ? {\n              ...query,\n              model: {\n                ...expressionDatasource.newQuery({\n                  type: action.payload.type,\n                  conditions: [{ ...defaultCondition, query: { params: [] } }],\n                  expression: '',\n                }),\n                refId: action.payload.refId,\n              },\n            }\n          : query;\n      });\n    });\n});\n\nconst addQuery = (\n  queries: AlertQuery[],\n  queryToAdd: Pick<AlertQuery, 'model' | 'datasourceUid' | 'relativeTimeRange'>\n): AlertQuery[] => {\n  const refId = getNextRefIdChar(queries);\n  const query: AlertQuery = {\n    ...queryToAdd,\n    refId,\n    queryType: '',\n    model: {\n      ...queryToAdd.model,\n      hide: false,\n      refId,\n    },\n    relativeTimeRange: queryToAdd.relativeTimeRange ?? defaultTimeRange(queryToAdd.model),\n  };\n\n  return [...queries, query];\n};\n\nconst defaultTimeRange = (model: DataQuery): RelativeTimeRange | undefined => {\n  if (isExpressionQuery(model)) {\n    return;\n  }\n\n  return getDefaultRelativeTimeRange();\n};\n","import React, { FC, useCallback, useEffect, useMemo, useReducer, useRef, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nimport { LoadingState, PanelData } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Stack } from '@grafana/experimental';\nimport { config } from '@grafana/runtime';\nimport { Alert, Button, Field, InputControl, Tooltip } from '@grafana/ui';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { AlertingQueryRunner } from '../../../state/AlertingQueryRunner';\nimport { RuleFormType, RuleFormValues } from '../../../types/rule-form';\nimport { getDefaultOrFirstCompatibleDataSource } from '../../../utils/datasource';\nimport { ExpressionEditor } from '../ExpressionEditor';\nimport { ExpressionsEditor } from '../ExpressionsEditor';\nimport { QueryEditor } from '../QueryEditor';\nimport { RuleEditorSection } from '../RuleEditorSection';\nimport { refIdExists } from '../util';\n\nimport { AlertType } from './AlertType';\nimport {\n  duplicateQuery,\n  addNewDataQuery,\n  addNewExpression,\n  queriesAndExpressionsReducer,\n  removeExpression,\n  rewireExpressions,\n  setDataQueries,\n  updateExpression,\n  updateExpressionRefId,\n  updateExpressionType,\n  updateExpressionTimeRange,\n} from './reducer';\n\ninterface Props {\n  editingExistingRule: boolean;\n}\n\nexport const QueryAndExpressionsStep: FC<Props> = ({ editingExistingRule }) => {\n  const runner = useRef(new AlertingQueryRunner());\n  const {\n    setValue,\n    getValues,\n    watch,\n    formState: { errors },\n    control,\n  } = useFormContext<RuleFormValues>();\n  const [panelData, setPanelData] = useState<Record<string, PanelData>>({});\n\n  const initialState = {\n    queries: getValues('queries'),\n    panelData: {},\n  };\n  const [{ queries }, dispatch] = useReducer(queriesAndExpressionsReducer, initialState);\n\n  const [type, condition, dataSourceName] = watch(['type', 'condition', 'dataSourceName']);\n\n  const isGrafanaManagedType = type === RuleFormType.grafana;\n  const isCloudAlertRuleType = type === RuleFormType.cloudAlerting;\n  const isRecordingRuleType = type === RuleFormType.cloudRecording;\n\n  const showCloudExpressionEditor = (isRecordingRuleType || isCloudAlertRuleType) && dataSourceName;\n\n  const cancelQueries = useCallback(() => {\n    runner.current.cancel();\n  }, []);\n\n  const runQueries = useCallback(() => {\n    runner.current.run(getValues('queries'));\n  }, [getValues]);\n\n  // whenever we update the queries we have to update the form too\n  useEffect(() => {\n    setValue('queries', queries, { shouldValidate: false });\n  }, [queries, runQueries, setValue]);\n\n  // set up the AlertQueryRunner\n  useEffect(() => {\n    const currentRunner = runner.current;\n\n    runner.current.get().subscribe((data) => {\n      setPanelData(data);\n    });\n\n    return () => currentRunner.destroy();\n  }, []);\n\n  const noCompatibleDataSources = getDefaultOrFirstCompatibleDataSource() === undefined;\n\n  const isDataLoading = useMemo(() => {\n    return Object.values(panelData).some((d) => d.state === LoadingState.Loading);\n  }, [panelData]);\n\n  // data queries only\n  const dataQueries = useMemo(() => {\n    return queries.filter((query) => !isExpressionQuery(query.model));\n  }, [queries]);\n\n  // expression queries only\n  const expressionQueries = useMemo(() => {\n    return queries.filter((query) => isExpressionQuery(query.model));\n  }, [queries]);\n\n  const emptyQueries = queries.length === 0;\n\n  const onUpdateRefId = useCallback(\n    (oldRefId: string, newRefId: string) => {\n      const newRefIdExists = refIdExists(queries, newRefId);\n      // TODO we should set an error and explain what went wrong instead of just refusing to update\n      if (newRefIdExists) {\n        return;\n      }\n\n      dispatch(updateExpressionRefId({ oldRefId, newRefId }));\n\n      // update condition too if refId was updated\n      if (condition === oldRefId) {\n        setValue('condition', newRefId);\n      }\n    },\n    [condition, queries, setValue]\n  );\n\n  const onChangeQueries = useCallback(\n    (updatedQueries: AlertQuery[]) => {\n      dispatch(setDataQueries(updatedQueries));\n      dispatch(updateExpressionTimeRange());\n      // check if we need to rewire expressions\n      updatedQueries.forEach((query, index) => {\n        const oldRefId = queries[index].refId;\n        const newRefId = query.refId;\n\n        if (oldRefId !== newRefId) {\n          dispatch(rewireExpressions({ oldRefId, newRefId }));\n        }\n      });\n    },\n    [queries]\n  );\n\n  const onDuplicateQuery = useCallback((query: AlertQuery) => {\n    dispatch(duplicateQuery(query));\n  }, []);\n\n  // update the condition if it's been removed\n  useEffect(() => {\n    if (!refIdExists(queries, condition)) {\n      const lastRefId = queries.at(-1)?.refId ?? null;\n      setValue('condition', lastRefId);\n    }\n  }, [condition, queries, setValue]);\n\n  return (\n    <RuleEditorSection stepNo={1} title=\"Set a query and alert condition\">\n      <AlertType editingExistingRule={editingExistingRule} />\n\n      {/* This is the PromQL Editor for Cloud rules and recording rules */}\n      {showCloudExpressionEditor && (\n        <Field error={errors.expression?.message} invalid={!!errors.expression?.message}>\n          <InputControl\n            name=\"expression\"\n            render={({ field: { ref, ...field } }) => {\n              return <ExpressionEditor {...field} dataSourceName={dataSourceName} />;\n            }}\n            control={control}\n            rules={{\n              required: { value: true, message: 'A valid expression is required' },\n            }}\n          />\n        </Field>\n      )}\n\n      {/* This is the editor for Grafana managed rules */}\n      {isGrafanaManagedType && (\n        <Stack direction=\"column\">\n          {/* Data Queries */}\n          <QueryEditor\n            queries={dataQueries}\n            expressions={expressionQueries}\n            onRunQueries={runQueries}\n            onChangeQueries={onChangeQueries}\n            onDuplicateQuery={onDuplicateQuery}\n            panelData={panelData}\n            condition={condition}\n            onSetCondition={(refId) => {\n              setValue('condition', refId);\n            }}\n          />\n          {/* Expression Queries */}\n          <ExpressionsEditor\n            queries={queries}\n            panelData={panelData}\n            condition={condition}\n            onSetCondition={(refId) => {\n              setValue('condition', refId);\n            }}\n            onRemoveExpression={(refId) => {\n              dispatch(removeExpression(refId));\n            }}\n            onUpdateRefId={onUpdateRefId}\n            onUpdateExpressionType={(refId, type) => {\n              dispatch(updateExpressionType({ refId, type }));\n            }}\n            onUpdateQueryExpression={(model) => {\n              dispatch(updateExpression(model));\n            }}\n          />\n          {/* action buttons */}\n          <Stack direction=\"row\">\n            <Tooltip content={'You appear to have no compatible data sources'} show={noCompatibleDataSources}>\n              <Button\n                type=\"button\"\n                icon=\"plus\"\n                onClick={() => {\n                  dispatch(addNewDataQuery());\n                }}\n                variant=\"secondary\"\n                aria-label={selectors.components.QueryTab.addQuery}\n                disabled={noCompatibleDataSources}\n              >\n                Add query\n              </Button>\n            </Tooltip>\n\n            {config.expressionsEnabled && (\n              <Button\n                type=\"button\"\n                icon=\"plus\"\n                onClick={() => {\n                  dispatch(addNewExpression());\n                }}\n                variant=\"secondary\"\n              >\n                Add expression\n              </Button>\n            )}\n\n            {isDataLoading && (\n              <Button icon=\"fa fa-spinner\" type=\"button\" variant=\"destructive\" onClick={cancelQueries}>\n                Cancel\n              </Button>\n            )}\n            {!isDataLoading && (\n              <Button icon=\"sync\" type=\"button\" onClick={() => runQueries()} disabled={emptyQueries}>\n                Preview\n              </Button>\n            )}\n          </Stack>\n\n          {/* No Queries */}\n          {emptyQueries && (\n            <Alert title=\"No queries or expressions have been configured\" severity=\"warning\">\n              Create at least one query or expression to be alerted on\n            </Alert>\n          )}\n        </Stack>\n      )}\n    </RuleEditorSection>\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { FC, useMemo, useState } from 'react';\nimport { FormProvider, useForm, UseFormWatch } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { logInfo } from '@grafana/runtime';\nimport { Button, ConfirmModal, CustomScrollbar, Spinner, useStyles2, HorizontalGroup } from '@grafana/ui';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { useCleanup } from 'app/core/hooks/useCleanup';\nimport { useQueryParams } from 'app/core/hooks/useQueryParams';\nimport { useDispatch } from 'app/types';\nimport { RuleWithLocation } from 'app/types/unified-alerting';\n\nimport { LogMessages } from '../../Analytics';\nimport { useUnifiedAlertingSelector } from '../../hooks/useUnifiedAlertingSelector';\nimport { deleteRuleAction, saveRuleFormAction } from '../../state/actions';\nimport { RuleFormType, RuleFormValues } from '../../types/rule-form';\nimport { initialAsyncRequestState } from '../../utils/redux';\nimport { getDefaultFormValues, getDefaultQueries, rulerRuleToFormValues } from '../../utils/rule-form';\nimport * as ruleId from '../../utils/rule-id';\n\nimport { CloudEvaluationBehavior } from './CloudEvaluationBehavior';\nimport { DetailsStep } from './DetailsStep';\nimport { GrafanaEvaluationBehavior } from './GrafanaEvaluationBehavior';\nimport { NotificationsStep } from './NotificationsStep';\nimport { RuleInspector } from './RuleInspector';\nimport { QueryAndExpressionsStep } from './query-and-alert-condition/QueryAndExpressionsStep';\n\ntype Props = {\n  existing?: RuleWithLocation;\n};\n\nexport const AlertRuleForm: FC<Props> = ({ existing }) => {\n  const styles = useStyles2(getStyles);\n  const dispatch = useDispatch();\n  const notifyApp = useAppNotification();\n  const [queryParams] = useQueryParams();\n  const [showEditYaml, setShowEditYaml] = useState(false);\n\n  const returnTo: string = (queryParams['returnTo'] as string | undefined) ?? '/alerting/list';\n  const [showDeleteModal, setShowDeleteModal] = useState<boolean>(false);\n\n  const defaultValues: RuleFormValues = useMemo(() => {\n    if (existing) {\n      return rulerRuleToFormValues(existing);\n    }\n    return {\n      ...getDefaultFormValues(),\n      queries: getDefaultQueries(),\n      condition: 'C',\n      ...(queryParams['defaults'] ? JSON.parse(queryParams['defaults'] as string) : {}),\n      type: RuleFormType.grafana,\n    };\n  }, [existing, queryParams]);\n\n  const formAPI = useForm<RuleFormValues>({\n    mode: 'onSubmit',\n    defaultValues,\n    shouldFocusError: true,\n  });\n\n  const { handleSubmit, watch } = formAPI;\n\n  const type = watch('type');\n  const dataSourceName = watch('dataSourceName');\n\n  const showStep2 = Boolean(type && (type === RuleFormType.grafana || !!dataSourceName));\n\n  const submitState = useUnifiedAlertingSelector((state) => state.ruleForm.saveRule) || initialAsyncRequestState;\n  useCleanup((state) => (state.unifiedAlerting.ruleForm.saveRule = initialAsyncRequestState));\n\n  const submit = (values: RuleFormValues, exitOnSave: boolean) => {\n    dispatch(\n      saveRuleFormAction({\n        values: {\n          ...defaultValues,\n          ...values,\n          annotations:\n            values.annotations\n              ?.map(({ key, value }) => ({ key: key.trim(), value: value.trim() }))\n              .filter(({ key, value }) => !!key && !!value) ?? [],\n          labels:\n            values.labels\n              ?.map(({ key, value }) => ({ key: key.trim(), value: value.trim() }))\n              .filter(({ key }) => !!key) ?? [],\n        },\n        existing,\n        redirectOnSave: exitOnSave ? returnTo : undefined,\n      })\n    );\n  };\n\n  const deleteRule = () => {\n    if (existing) {\n      const identifier = ruleId.fromRulerRule(\n        existing.ruleSourceName,\n        existing.namespace,\n        existing.group.name,\n        existing.rule\n      );\n\n      dispatch(deleteRuleAction(identifier, { navigateTo: '/alerting/list' }));\n    }\n  };\n\n  const onInvalid = () => {\n    notifyApp.error('There are errors in the form. Please correct them and try again!');\n  };\n\n  return (\n    <FormProvider {...formAPI}>\n      <form onSubmit={(e) => e.preventDefault()} className={styles.form}>\n        <HorizontalGroup height=\"auto\" justify=\"flex-end\">\n          <Link to={returnTo}>\n            <Button\n              variant=\"secondary\"\n              disabled={submitState.loading}\n              type=\"button\"\n              fill=\"outline\"\n              onClick={() => logInfo(LogMessages.cancelSavingAlertRule)}\n            >\n              Cancel\n            </Button>\n          </Link>\n          {existing ? (\n            <Button variant=\"destructive\" type=\"button\" onClick={() => setShowDeleteModal(true)}>\n              Delete\n            </Button>\n          ) : null}\n          {isCortexLokiOrRecordingRule(watch) && (\n            <Button\n              variant=\"secondary\"\n              type=\"button\"\n              onClick={() => setShowEditYaml(true)}\n              disabled={submitState.loading}\n            >\n              Edit yaml\n            </Button>\n          )}\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={handleSubmit((values) => submit(values, false), onInvalid)}\n            disabled={submitState.loading}\n          >\n            {submitState.loading && <Spinner className={styles.buttonSpinner} inline={true} />}\n            Save\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={handleSubmit((values) => submit(values, true), onInvalid)}\n            disabled={submitState.loading}\n          >\n            {submitState.loading && <Spinner className={styles.buttonSpinner} inline={true} />}\n            Save and exit\n          </Button>\n        </HorizontalGroup>\n        <div className={styles.contentOuter}>\n          <CustomScrollbar autoHeightMin=\"100%\" hideHorizontalTrack={true}>\n            <div className={styles.contentInner}>\n              <QueryAndExpressionsStep editingExistingRule={!!existing} />\n              {showStep2 && (\n                <>\n                  {type === RuleFormType.grafana ? <GrafanaEvaluationBehavior /> : <CloudEvaluationBehavior />}\n                  <DetailsStep initialFolder={defaultValues.folder} />\n                  <NotificationsStep />\n                </>\n              )}\n            </div>\n          </CustomScrollbar>\n        </div>\n      </form>\n      {showDeleteModal ? (\n        <ConfirmModal\n          isOpen={true}\n          title=\"Delete rule\"\n          body=\"Deleting this rule will permanently remove it. Are you sure you want to delete this rule?\"\n          confirmText=\"Yes, delete\"\n          icon=\"exclamation-triangle\"\n          onConfirm={deleteRule}\n          onDismiss={() => setShowDeleteModal(false)}\n        />\n      ) : null}\n      {showEditYaml ? <RuleInspector onClose={() => setShowEditYaml(false)} /> : null}\n    </FormProvider>\n  );\n};\n\nconst isCortexLokiOrRecordingRule = (watch: UseFormWatch<RuleFormValues>) => {\n  const [ruleType, dataSourceName] = watch(['type', 'dataSourceName']);\n\n  return (ruleType === RuleFormType.cloudAlerting || ruleType === RuleFormType.cloudRecording) && dataSourceName !== '';\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    buttonSpinner: css`\n      margin-right: ${theme.spacing(1)};\n    `,\n    form: css`\n      width: 100%;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n    `,\n    contentInner: css`\n      flex: 1;\n      padding: ${theme.spacing(2)};\n    `,\n    contentOuter: css`\n      background: ${theme.colors.background.primary};\n      border: 1px solid ${theme.colors.border.weak};\n      border-radius: ${theme.shape.borderRadius()};\n      overflow: hidden;\n      flex: 1;\n      margin-top: ${theme.spacing(1)};\n    `,\n    flexRow: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    `,\n  };\n};\n","import React, { useEffect } from 'react';\n\nimport { Alert, LoadingPlaceholder } from '@grafana/ui';\nimport { useCleanup } from 'app/core/hooks/useCleanup';\nimport { useDispatch } from 'app/types';\nimport { RuleIdentifier } from 'app/types/unified-alerting';\n\nimport { AlertWarning } from './AlertWarning';\nimport { AlertRuleForm } from './components/rule-editor/AlertRuleForm';\nimport { useIsRuleEditable } from './hooks/useIsRuleEditable';\nimport { useUnifiedAlertingSelector } from './hooks/useUnifiedAlertingSelector';\nimport { fetchEditableRuleAction } from './state/actions';\nimport { initialAsyncRequestState } from './utils/redux';\nimport * as ruleId from './utils/rule-id';\n\ninterface ExistingRuleEditorProps {\n  identifier: RuleIdentifier;\n}\n\nexport function ExistingRuleEditor({ identifier }: ExistingRuleEditorProps) {\n  useCleanup((state) => (state.unifiedAlerting.ruleForm.existingRule = initialAsyncRequestState));\n\n  const {\n    loading: loadingAlertRule,\n    result,\n    error,\n    dispatched,\n  } = useUnifiedAlertingSelector((state) => state.ruleForm.existingRule);\n\n  const dispatch = useDispatch();\n  const { isEditable, loading: loadingEditable } = useIsRuleEditable(\n    ruleId.ruleIdentifierToRuleSourceName(identifier),\n    result?.rule\n  );\n\n  const loading = loadingAlertRule || loadingEditable;\n\n  useEffect(() => {\n    if (!dispatched) {\n      dispatch(fetchEditableRuleAction(identifier));\n    }\n  }, [dispatched, dispatch, identifier]);\n\n  if (loading || isEditable === undefined) {\n    return <LoadingPlaceholder text=\"Loading rule...\" />;\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" title=\"Failed to load rule\">\n        {error.message}\n      </Alert>\n    );\n  }\n\n  if (!result) {\n    return <AlertWarning title=\"Rule not found\">Sorry! This rule does not exist.</AlertWarning>;\n  }\n\n  if (isEditable === false) {\n    return <AlertWarning title=\"Cannot edit rule\">Sorry! You do not have permission to edit this rule.</AlertWarning>;\n  }\n\n  return <AlertRuleForm existing={result} />;\n}\n","import React, { useCallback } from 'react';\nimport { useAsync } from 'react-use';\n\nimport { NavModelItem } from '@grafana/data';\nimport { withErrorBoundary } from '@grafana/ui';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { useDispatch } from 'app/types';\n\nimport { AlertWarning } from './AlertWarning';\nimport { ExistingRuleEditor } from './ExistingRuleEditor';\nimport { AlertingPageWrapper } from './components/AlertingPageWrapper';\nimport { AlertRuleForm } from './components/rule-editor/AlertRuleForm';\nimport { fetchRulesSourceBuildInfoAction } from './state/actions';\nimport { useRulesAccess } from './utils/accessControlHooks';\nimport * as ruleId from './utils/rule-id';\n\ntype RuleEditorProps = GrafanaRouteComponentProps<{ id?: string }>;\n\nconst defaultPageNav: Partial<NavModelItem> = {\n  icon: 'bell',\n  id: 'alert-rule-view',\n  breadcrumbs: [{ title: 'Alert rules', url: 'alerting/list' }],\n};\n\nconst getPageNav = (state: 'edit' | 'add') => {\n  if (state === 'edit') {\n    return { ...defaultPageNav, id: 'alert-rule-edit', text: 'Edit rule' };\n  } else if (state === 'add') {\n    return { ...defaultPageNav, id: 'alert-rule-add', text: 'Add rule' };\n  }\n  return undefined;\n};\n\nconst RuleEditor = ({ match }: RuleEditorProps) => {\n  const dispatch = useDispatch();\n  const { id } = match.params;\n  const identifier = ruleId.tryParse(id, true);\n\n  const { loading = true } = useAsync(async () => {\n    if (identifier) {\n      await dispatch(fetchRulesSourceBuildInfoAction({ rulesSourceName: identifier.ruleSourceName }));\n    }\n  }, [dispatch]);\n\n  const { canCreateGrafanaRules, canCreateCloudRules, canEditRules } = useRulesAccess();\n\n  const getContent = useCallback(() => {\n    if (loading) {\n      return;\n    }\n\n    if (!identifier && !canCreateGrafanaRules && !canCreateCloudRules) {\n      return <AlertWarning title=\"Cannot create rules\">Sorry! You are not allowed to create rules.</AlertWarning>;\n    }\n\n    if (identifier && !canEditRules(identifier.ruleSourceName)) {\n      return <AlertWarning title=\"Cannot edit rules\">Sorry! You are not allowed to edit rules.</AlertWarning>;\n    }\n\n    if (identifier) {\n      return <ExistingRuleEditor key={id} identifier={identifier} />;\n    }\n\n    return <AlertRuleForm />;\n  }, [canCreateCloudRules, canCreateGrafanaRules, canEditRules, id, identifier, loading]);\n\n  return (\n    <AlertingPageWrapper isLoading={loading} pageId=\"alert-list\" pageNav={getPageNav(identifier ? 'edit' : 'add')}>\n      {getContent()}\n    </AlertingPageWrapper>\n  );\n};\n\nexport default withErrorBoundary(RuleEditor, { style: 'page' });\n","import React, { useMemo } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { RadioButtonGroup } from '@grafana/ui';\n\nimport { STAT, TABLE, TIMESERIES } from '../utils/constants';\n\nexport type SupportedPanelPlugins = 'timeseries' | 'table' | 'stat';\n\ntype Props = {\n  value: SupportedPanelPlugins;\n  onChange: (value: SupportedPanelPlugins) => void;\n  size?: 'sm' | 'md';\n};\n\nexport function PanelPluginsButtonGroup(props: Props): JSX.Element | null {\n  const { value, onChange, size = 'md' } = props;\n  const panels = useMemo(() => getSupportedPanels(), []);\n\n  return <RadioButtonGroup options={panels} value={value} onChange={onChange} size={size} />;\n}\n\nfunction getSupportedPanels(): Array<SelectableValue<SupportedPanelPlugins>> {\n  return Object.values(config.panels).reduce((panels: Array<SelectableValue<SupportedPanelPlugins>>, panel) => {\n    if (isSupportedPanelPlugin(panel.id)) {\n      panels.push({\n        value: panel.id,\n        label: panel.name,\n        imgUrl: panel.info.logos.small,\n      });\n    }\n    return panels;\n  }, []);\n}\n\nfunction isSupportedPanelPlugin(id: string): id is SupportedPanelPlugins {\n  switch (id) {\n    case TIMESERIES:\n    case TABLE:\n    case STAT:\n      return true;\n    default:\n      return false;\n  }\n}\n","import { useMemo } from 'react';\n\nimport { getDataSourceSrv } from '@grafana/runtime';\nimport { isExpressionReference } from '@grafana/runtime/src/utils/DataSourceWithBackend';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nexport function useAlertQueriesStatus(queries: AlertQuery[]) {\n  const allDataSourcesAvailable = useMemo(\n    () =>\n      queries\n        .filter((query) => !isExpressionReference(query.datasourceUid))\n        .every((query) => {\n          const instanceSettings = getDataSourceSrv().getInstanceSettings(query.datasourceUid);\n          return Boolean(instanceSettings);\n        }),\n    [queries]\n  );\n\n  return { allDataSourcesAvailable };\n}\n","import { useEffect } from 'react';\n\nimport { FolderDTO, useDispatch } from 'app/types';\n\nimport { fetchFolderIfNotFetchedAction } from '../state/actions';\nimport { initialAsyncRequestState } from '../utils/redux';\n\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\ninterface ReturnBag {\n  folder?: FolderDTO;\n  loading: boolean;\n}\n\nexport function useFolder(uid?: string): ReturnBag {\n  const dispatch = useDispatch();\n  const folderRequests = useUnifiedAlertingSelector((state) => state.folders);\n  useEffect(() => {\n    if (uid) {\n      dispatch(fetchFolderIfNotFetchedAction(uid));\n    }\n  }, [dispatch, uid]);\n\n  if (uid) {\n    const request = folderRequests[uid] || initialAsyncRequestState;\n    return {\n      folder: request.result,\n      loading: request.loading,\n    };\n  }\n  return {\n    loading: false,\n  };\n}\n","import { contextSrv } from 'app/core/services/context_srv';\nimport { RulerRuleDTO } from 'app/types/unified-alerting-dto';\n\nimport { getRulesPermissions } from '../utils/access-control';\nimport { isGrafanaRulerRule } from '../utils/rules';\n\nimport { useFolder } from './useFolder';\nimport { useUnifiedAlertingSelector } from './useUnifiedAlertingSelector';\n\ninterface ResultBag {\n  isEditable?: boolean;\n  isRemovable?: boolean;\n  loading: boolean;\n}\n\nexport function useIsRuleEditable(rulesSourceName: string, rule?: RulerRuleDTO): ResultBag {\n  const dataSources = useUnifiedAlertingSelector((state) => state.dataSources);\n  const folderUID = rule && isGrafanaRulerRule(rule) ? rule.grafana_alert.namespace_uid : undefined;\n\n  const rulePermission = getRulesPermissions(rulesSourceName);\n  const { folder, loading } = useFolder(folderUID);\n\n  if (!rule) {\n    return { isEditable: false, isRemovable: false, loading: false };\n  }\n\n  // Grafana rules can be edited if user can edit the folder they're in\n  // When RBAC is disabled access to a folder is the only requirement for managing rules\n  // When RBAC is enabled the appropriate alerting permissions need to be met\n  if (isGrafanaRulerRule(rule)) {\n    if (!folderUID) {\n      throw new Error(\n        `Rule ${rule.grafana_alert.title} does not have a folder uid, cannot determine if it is editable.`\n      );\n    }\n\n    if (!folder) {\n      // Loading or invalid folder UID\n      return {\n        isEditable: false,\n        isRemovable: false,\n        loading,\n      };\n    }\n    const rbacDisabledFallback = folder.canSave;\n\n    const canEditGrafanaRules = contextSrv.hasAccessInMetadata(rulePermission.update, folder, rbacDisabledFallback);\n    const canRemoveGrafanaRules = contextSrv.hasAccessInMetadata(rulePermission.delete, folder, rbacDisabledFallback);\n\n    return {\n      isEditable: canEditGrafanaRules,\n      isRemovable: canRemoveGrafanaRules,\n      loading,\n    };\n  }\n\n  // prom rules are only editable by users with Editor role and only if rules source supports editing\n  const isRulerAvailable = Boolean(dataSources[rulesSourceName]?.result?.rulerConfig);\n  const canEditCloudRules = contextSrv.hasAccess(rulePermission.update, contextSrv.isEditor);\n  const canRemoveCloudRules = contextSrv.hasAccess(rulePermission.delete, contextSrv.isEditor);\n\n  return {\n    isEditable: canEditCloudRules && isRulerAvailable,\n    isRemovable: canRemoveCloudRules && isRulerAvailable,\n    loading: dataSources[rulesSourceName]?.loading,\n  };\n}\n","import { RelativeTimeRange } from '@grafana/data';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { ExpressionQuery, ExpressionQueryType } from '../../../expressions/types';\n\nconst FALL_BACK_TIME_RANGE = { from: 21600, to: 0 };\n\nexport const getTimeRangeForExpression = (query: ExpressionQuery, queries: AlertQuery[]): RelativeTimeRange => {\n  const referencedRefIds: string[] | undefined = getReferencedIds(query, queries);\n\n  if (!referencedRefIds) {\n    return FALL_BACK_TIME_RANGE;\n  }\n\n  const { from, to } = getTimeRanges(referencedRefIds, queries);\n\n  if (!from.length && !to.length) {\n    return FALL_BACK_TIME_RANGE;\n  }\n\n  return {\n    from: Math.max(...from),\n    to: Math.min(...to),\n  };\n};\n\nconst getReferencedIds = (model: ExpressionQuery, queries: AlertQuery[]): string[] | undefined => {\n  switch (model.type) {\n    case ExpressionQueryType.classic:\n      return getReferencedIdsForClassicCondition(model);\n    case ExpressionQueryType.math:\n      return getReferencedIdsForMath(model, queries);\n    case ExpressionQueryType.resample:\n    case ExpressionQueryType.reduce:\n    case ExpressionQueryType.threshold:\n      return getReferencedIdsForReduce(model);\n  }\n};\n\nconst getReferencedIdsForClassicCondition = (model: ExpressionQuery) => {\n  return model.conditions?.map((condition) => {\n    return condition.query.params[0];\n  });\n};\n\nconst getTimeRanges = (referencedRefIds: string[], queries: AlertQuery[]) => {\n  let from: number[] = [];\n  let to = [FALL_BACK_TIME_RANGE.to];\n  for (const referencedRefIdsKey of referencedRefIds) {\n    const query = queries.find((query) => query.refId === referencedRefIdsKey);\n\n    if (!query || !query.relativeTimeRange) {\n      continue;\n    }\n    from.push(query.relativeTimeRange.from);\n    to.push(query.relativeTimeRange.to);\n  }\n\n  return {\n    from,\n    to,\n  };\n};\n\nconst getReferencedIdsForMath = (model: ExpressionQuery, queries: AlertQuery[]) => {\n  return (\n    queries\n      // filter queries of type query and filter expression on if it includes any refIds\n      .filter((q) => q.queryType === 'query' && model.expression?.includes(q.refId))\n      .map((q) => {\n        return q.refId;\n      })\n  );\n};\n\nconst getReferencedIdsForReduce = (model: ExpressionQuery) => {\n  return model.expression ? [model.expression] : undefined;\n};\n","import { Observable, of, OperatorFunction, ReplaySubject, Unsubscribable } from 'rxjs';\nimport { catchError, map, share } from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  dataFrameFromJSON,\n  DataFrameJSON,\n  getDefaultTimeRange,\n  LoadingState,\n  PanelData,\n  rangeUtil,\n  TimeRange,\n  withLoadingIndicator,\n} from '@grafana/data';\nimport { FetchResponse, getDataSourceSrv, toDataQueryError } from '@grafana/runtime';\nimport { BackendSrv, getBackendSrv } from 'app/core/services/backend_srv';\nimport { isExpressionQuery } from 'app/features/expressions/guards';\nimport { cancelNetworkRequestsOnUnsubscribe } from 'app/features/query/state/processing/canceler';\nimport { setStructureRevision } from 'app/features/query/state/processing/revision';\nimport { preProcessPanelData } from 'app/features/query/state/runRequest';\nimport { AlertQuery } from 'app/types/unified-alerting-dto';\n\nimport { getTimeRangeForExpression } from '../utils/timeRange';\n\nexport interface AlertingQueryResult {\n  frames: DataFrameJSON[];\n}\n\nexport interface AlertingQueryResponse {\n  results: Record<string, AlertingQueryResult>;\n}\nexport class AlertingQueryRunner {\n  private subject: ReplaySubject<Record<string, PanelData>>;\n  private subscription?: Unsubscribable;\n  private lastResult: Record<string, PanelData>;\n\n  constructor(private backendSrv = getBackendSrv(), private dataSourceSrv = getDataSourceSrv()) {\n    this.subject = new ReplaySubject(1);\n    this.lastResult = {};\n  }\n\n  get(): Observable<Record<string, PanelData>> {\n    return this.subject.asObservable();\n  }\n\n  async run(queries: AlertQuery[]) {\n    if (queries.length === 0) {\n      const empty = initialState(queries, LoadingState.Done);\n      return this.subject.next(empty);\n    }\n\n    // do not execute if one more of the queries are not runnable,\n    // for example not completely configured\n    for (const query of queries) {\n      if (!isExpressionQuery(query.model)) {\n        const ds = await this.dataSourceSrv.get(query.datasourceUid);\n        if (ds.filterQuery && !ds.filterQuery(query.model)) {\n          const empty = initialState(queries, LoadingState.Done);\n          return this.subject.next(empty);\n        }\n      }\n    }\n\n    this.subscription = runRequest(this.backendSrv, queries).subscribe({\n      next: (dataPerQuery) => {\n        const nextResult = applyChange(dataPerQuery, (refId, data) => {\n          const previous = this.lastResult[refId];\n          const preProcessed = preProcessPanelData(data, previous);\n          return setStructureRevision(preProcessed, previous);\n        });\n\n        this.lastResult = nextResult;\n        this.subject.next(this.lastResult);\n      },\n\n      error: (error: Error) => {\n        this.lastResult = mapErrorToPanelData(this.lastResult, error);\n        this.subject.next(this.lastResult);\n      },\n    });\n  }\n\n  cancel() {\n    if (!this.subscription) {\n      return;\n    }\n    this.subscription.unsubscribe();\n\n    let requestIsRunning = false;\n\n    const nextResult = applyChange(this.lastResult, (refId, data) => {\n      if (data.state === LoadingState.Loading) {\n        requestIsRunning = true;\n      }\n\n      return {\n        ...data,\n        state: LoadingState.Done,\n      };\n    });\n\n    if (requestIsRunning) {\n      this.subject.next(nextResult);\n    }\n  }\n\n  destroy() {\n    if (this.subject) {\n      this.subject.complete();\n    }\n\n    this.cancel();\n  }\n}\n\nconst runRequest = (backendSrv: BackendSrv, queries: AlertQuery[]): Observable<Record<string, PanelData>> => {\n  const initial = initialState(queries, LoadingState.Loading);\n  const request = {\n    data: { data: queries },\n    url: '/api/v1/eval',\n    method: 'POST',\n    requestId: uuidv4(),\n  };\n\n  return withLoadingIndicator({\n    whileLoading: initial,\n    source: backendSrv.fetch<AlertingQueryResponse>(request).pipe(\n      mapToPanelData(initial),\n      catchError((error) => of(mapErrorToPanelData(initial, error))),\n      cancelNetworkRequestsOnUnsubscribe(backendSrv, request.requestId),\n      share()\n    ),\n  });\n};\n\nconst initialState = (queries: AlertQuery[], state: LoadingState): Record<string, PanelData> => {\n  return queries.reduce((dataByQuery: Record<string, PanelData>, query) => {\n    dataByQuery[query.refId] = {\n      state,\n      series: [],\n      timeRange: getTimeRange(query, queries),\n    };\n\n    return dataByQuery;\n  }, {});\n};\n\nconst getTimeRange = (query: AlertQuery, queries: AlertQuery[]): TimeRange => {\n  if (isExpressionQuery(query.model)) {\n    const relative = getTimeRangeForExpression(query.model, queries);\n    return rangeUtil.relativeToTimeRange(relative);\n  }\n\n  if (!query.relativeTimeRange) {\n    console.warn(`Query with refId: ${query.refId} did not have any relative time range, using default.`);\n    return getDefaultTimeRange();\n  }\n\n  return rangeUtil.relativeToTimeRange(query.relativeTimeRange);\n};\n\nconst mapToPanelData = (\n  dataByQuery: Record<string, PanelData>\n): OperatorFunction<FetchResponse<AlertingQueryResponse>, Record<string, PanelData>> => {\n  return map((response) => {\n    const { data } = response;\n    const results: Record<string, PanelData> = {};\n\n    for (const [refId, result] of Object.entries(data.results)) {\n      results[refId] = {\n        timeRange: dataByQuery[refId].timeRange,\n        state: LoadingState.Done,\n        series: result.frames.map(dataFrameFromJSON),\n      };\n    }\n\n    return results;\n  });\n};\n\nconst mapErrorToPanelData = (lastResult: Record<string, PanelData>, error: Error): Record<string, PanelData> => {\n  const queryError = toDataQueryError(error);\n\n  return applyChange(lastResult, (refId, data) => {\n    return {\n      ...data,\n      state: LoadingState.Error,\n      error: queryError,\n    };\n  });\n};\n\nconst applyChange = (\n  initial: Record<string, PanelData>,\n  change: (refId: string, data: PanelData) => PanelData\n): Record<string, PanelData> => {\n  const nextResult: Record<string, PanelData> = {};\n\n  for (const [refId, data] of Object.entries(initial)) {\n    nextResult[refId] = change(refId, data);\n  }\n\n  return nextResult;\n};\n","import { useMemo } from 'react';\n\nimport { getRulesAccess } from './access-control';\n\nexport function useRulesAccess() {\n  return useMemo(() => getRulesAccess(), []);\n}\n","import { DataQuery } from '@grafana/data';\nimport { isExpressionReference } from '@grafana/runtime/src/utils/DataSourceWithBackend';\n\nimport { ExpressionQuery, ExpressionQueryType } from './types';\n\nexport const isExpressionQuery = (dataQuery?: DataQuery): dataQuery is ExpressionQuery => {\n  if (!dataQuery) {\n    return false;\n  }\n\n  if (isExpressionReference(dataQuery.datasource)) {\n    return true;\n  }\n\n  const expression = dataQuery as ExpressionQuery;\n\n  if (typeof expression.type !== 'string') {\n    return false;\n  }\n  return Object.values(ExpressionQueryType).includes(expression.type);\n};\n"],"names":["AlertWarning","title","children","Alert","className","useStyles2","warningStyles","warning","severity","href","theme","css","spacing","fetchAlertRulePreview","request","dataSourceUid","ruleType","withLoadingIndicator","whileLoading","createResponse","source","getBackendSrv","fetch","method","url","data","pipe","map","state","LoadingState","series","instances","dataFrameFromJSON","catchError","error","of","toDataQueryError","share","timeRange","getDefaultTimeRange","PreviewRuleResult","props","preview","styles","getStyles","fieldConfig","defaults","overrides","matcher","id","FieldMatcherID","options","properties","value","TableCellDisplayMode","container","messageFromError","RuleFormType","table","width","height","style","PanelRenderer","pluginId","colors","border","medium","shape","borderRadius","fields","PreviewRule","onPreview","usePreview","watch","useFormContext","type","condition","queries","allDataSourcesAvailable","useAlertQueriesStatus","isPreviewAvailable","Boolean","Button","disabled","variant","onClick","setPreview","useState","getValues","isMounted","useMountedState","useCallback","values","dataSourceName","expression","dsSettings","getDataSourceSrv","getInstanceSettings","Error","uid","expr","grafana_condition","now","dateTimeFormatISO","Date","createPreviewRequest","isCloudPreviewRequest","isGrafanaPreviewRequest","GRAFANA_RULES_SOURCE_NAME","previewAlertRule","takeWhile","response","isCompleted","subscribe","breakpoints","xxl","CloudEvaluationBehavior","register","control","formState","errors","RuleEditorSection","stepNo","Field","label","description","flexRow","invalid","forTime","message","inlineField","Input","I","pattern","InputControl","name","render","field","onChange","Select","timeOptions","timeUnit","createDagFromQueries","memoizeOne","graph","Graph","nodes","query","refId","createNodes","forEach","isExpressionQuery","model","input","r1","RegExp","r2","m1","Array","from","matchAll","m","groups","var","m2","compact","uniq","parseRefsFromMathExpression","target","link","previous","next","fingerPrintQueries","getOriginOfRefId","memoize","node","getNode","origins","findChildNode","inputEdges","length","edge","inputNode","push","origin","Object","keys","n","outputEdges","e","outputNode","join","fingerprintGraph","queryType","queriesWithUpdatedReferences","previousRefId","newRefId","isMathExpression","isReduceExpression","isResampleExpression","isClassicExpression","isThresholdExpression","updateMathExpressionRefs","isReferencing","conditions","params","param","oldExpression","newExpression","replace","refIdExists","undefined","find","checkForPathSeparator","includes","errorFromSeries","isTimeSeries","isRangeCondition","evaluator","EvalFunction","GroupAndNamespaceFields","rulesSourceName","setValue","getStyle","rulerRequests","useUnifiedAlertingSelector","rulerRules","dispatch","useDispatch","useEffect","fetchRulerRulesAction","rulesConfig","result","namespace","namespaceOptions","useMemo","groupOptions","group","allowCustomValue","rules","required","validate","pathSeparator","SlashesWarning","Stack","gap","slashNotAllowed","Tooltip","placement","content","Icon","size","infoIcon","window","open","containsSlashes","str","indexOf","RuleFolderPicker","folderWarning","warningCondition","folderName","warningComponent","customAdd","disallowValues","isAllowedValue","FolderPicker","showRoot","rootName","allowEmpty","initialTitle","initialFolderId","accessControlMetadata","permissionLevel","PermissionLevelString","main","recordingRuleNameValidationPattern","DetailsStep","initialFolder","ruleFormType","folderFilter","useRuleFolderFilter","formInput","classNames","alignBaseline","Label","htmlFor","folder","inputId","enableCreateNew","contextSrv","AccessControlAction","enableReset","filter","dissalowSlashes","group_","AnnotationsField","existingRuleForm","isSearchHitAvailable","hit","rbacDisabledFallback","canCreateRuleInFolder","canUpdateInCurrentFolder","folderId","folderHits","NotificationsStep","hideFlowChart","setHideFlowChart","useTheme2","hideButton","contentWrapper","flowChart","src","toLowerCase","alt","display","flexDirection","LabelsField","Card","card","Link","text","secondary","isNothing","subject","common","isObject","toArray","sequence","isArray","repeat","string","count","cycle","isNegativeZero","number","Number","NEGATIVE_INFINITY","extend","index","key","sourceKeys","formatError","exception","where","reason","mark","line","column","snippet","YAMLException$1","call","this","captureStackTrace","constructor","stack","prototype","create","toString","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","Math","floor","slice","pos","padStart","max","maxLength","indent","linesBefore","linesAfter","match","re","lineStarts","lineEnds","foundLineNo","exec","i","lineNoLength","min","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","tag","kind","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","alias","String","compileStyleAliases","compileList","schema","currentType","newIndex","previousType","previousIndex","Schema$1","definition","implicit","explicit","concat","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","scalar","mapping","fallback","collectType","arguments","compileMap","seq","failsafe","_null","object","canonical","lowercase","uppercase","camelcase","empty","bool","isOctCode","c","isDecCode","ch","hasDigits","charCodeAt","sign","parseInt","binary","obj","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","SCIENTIFIC_WITHOUT_DOT","test","POSITIVE_INFINITY","NaN","parseFloat","res","isNaN","json","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","timestamp","year","month","day","hour","minute","second","date","fraction","delta","UTC","setTime","getTime","toISOString","merge","BASE64_MAP","code","idx","bitlen","charAt","tailbits","bits","Uint8Array","_hasOwnProperty$3","hasOwnProperty","_toString$2","omap","pair","pairKey","pairHasKey","objectKeys","_toString$1","pairs","_hasOwnProperty$2","set","_default","_hasOwnProperty$1","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","throwError","throwWarning","directiveHandlers","YAML","args","major","minor","version","checkLineBreaks","TAG","handle","prefix","tagMap","decodeURIComponent","err","captureSegment","start","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readBlockSequence","nodeIndent","_line","_tag","_anchor","anchor","detected","anchorMap","composeNode","readTagProperty","tagHandle","tagName","isVerbatim","isNamed","readAnchorProperty","parentIndent","nodeContext","allowToSeek","allowCompact","allowBlockStyles","allowBlockScalars","allowBlockCollections","typeIndex","typeQuantity","typeList","flowIndent","blockIndent","indentStatus","atNewLine","hasContent","following","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readBlockMapping","_lineStart","_pos","terminator","isPair","isExplicitPair","isMapping","readNext","readFlowCollection","captureStart","folding","tmp","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockScalar","captureEnd","readSingleQuotedScalar","hexLength","hexResult","readDoubleQuotedScalar","readAlias","withinFlowCollection","hasPendingContent","_lineIndent","_kind","readPlainScalar","readDocument","directiveName","directiveArgs","documentStart","hasDirectives","loadDocuments","nullpos","loader","loadAll","iterator","load","_toString","_hasOwnProperty","CHAR_BOM","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","encodeHex","character","State","noArrayIndent","skipInvalid","flowLevel","styleMap","compileStyleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","generateNextLine","level","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","codePointAt","first","needIndentIndicator","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","isPlainSafeLast","writeScalar","iskey","dump","testImplicitResolving","blockHeader","dropEndingNewline","moreIndented","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","foldString","escapeSeq","escapeString","indentIndicator","clip","breakRe","curr","writeBlockSequence","writeNode","detectType","block","isblockseq","tagStr","duplicateIndex","duplicate","objectOrArray","objectKey","objectValue","explicitPair","pairBuffer","objectKeyList","sort","writeBlockMapping","writeFlowMapping","writeFlowSequence","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","renamed","to","tabs","RuleInspector","onClose","activeTab","setActiveTab","drawerStyles","Drawer","subtitle","RuleInspectorSubtitle","InspectorYamlTab","onSubmit","formValues","TabsBar","tab","Tab","onChangeTab","active","yamlTabStyle","yamlValues","formValuesToRulerRuleDTO","alertRuleAsYaml","setAlertRuleAsYaml","applyButton","rulerRule","currentFormValues","yamlFormValues","isAlertingRulerRule","alertingRulerRuleToRuleForm","isRecordingRulerRule","recordingRulerRuleToRuleForm","rulerRuleToRuleFormValues","YamlContentInfo","interactive","disableWidth","CodeEditor","language","onBlur","monacoOptions","minimap","enabled","rel","CloudAlertPreview","alertPreview","labelFields","stateFieldIndex","findIndex","infoFieldIndex","labelIndexes","labelField","instanceStatusCount","labelValues","labelIndex","get","info","isGrafanaAlertState","labels","fromEntries","mapDataFrameToAlertPreview","instanceTags","entries","labelsToTags","AlertStateTag","TagList","tags","tagList","primary","typography","bodySmall","fontSize","background","ExpressionEditor","mapToValue","mapToQuery","settings","existing","useQueryMappers","dataQuery","hide","loading","dataSource","useAsync","onChangeQuery","dsi","components","QueryEditor","errorMessage","previewLoaded","previewDataFrame","s","previewHasAlerts","some","DataSourcePluginContextProvider","instanceSettings","app","CoreApp","onRunQuery","noop","datasource","async","previewAlert","xl","Spacer","AlertConditionIndicator","onSetCondition","Badge","color","icon","tooltip","actionLink","getSeriesValue","frame","isFinite","roundDecimals","formatLabels","Expression","isAlertCondition","onUpdateRefId","onRemoveExpression","onUpdateExpressionType","isLoading","d","hasResults","emptyResults","every","serie","isEmptySeries","isTimeSeriesResults","alertCondition","showSummary","groupedByState","PromAlertingRuleState","renderExpressionType","availableRefIds","q","ExpressionQueryType","labelWidth","Reduce","refIds","Resample","ClassicConditions","Threshold","cx","wrapper","Header","body","results","TimeseriesRow","uniqueId","FrameRow","noData","mutedText","footer","direction","alignItems","PreviewSummary","firing","normal","editMode","setEditMode","editing","editingRefId","editingType","selectedExpressionType","gelTypes","o","header","wrap","editable","AutoSizeInput","autoFocus","defaultValue","minWidth","event","currentTarget","onFocus","select","capitalize","mutedIcon","isOpen","selection","IconButton","getSeriesName","showFiring","showNormal","resultsRow","resultLabel","resultValue","timestamps","getTimestampFromIndex","getValueFromIndex","HoverCard","wrapperClassName","timeseriesTableWrapper","timeseriesTable","_","dateTimeFormat","fontWeightBold","noResults","canvas","maxContrast","draggableIcon","weak","ExpressionsEditor","panelData","onUpdateQueryExpression","expressionQueries","reduce","acc","meta","notices","notice","warningFromSeries","VizWrapper","currentPanel","changePanel","thresholds","thresholdsType","GraphTresholdsStyleMode","setOptions","frameIndex","showHeader","vizHeight","TIMESERIES","STAT","dataIsEmpty","rowHeight","gridSize","tableHeight","useVizHeight","setFieldConfig","unit","defaultUnit","custom","thresholdsStyle","mode","defaultFieldConfig","context","eventBus","appEvents","canEditThresholds","showThresholds","buttonGroup","PanelPluginsButtonGroup","PanelContext","onOptionsChange","visHeight","config","QueryWrapper","onChangeDataSource","onChangeTimeRange","onRunQueries","onRemoveQuery","onDuplicateQuery","onChangeThreshold","isExpression","changePluginId","TABLE","SelectingDataSourceTooltip","dsTooltip","HeaderExtras","RelativeTimeRangePicker","relativeTimeRange","getDefaultRelativeTimeRange","range","QueryEditorRow","alerting","cloneDeep","onAddQuery","renderHeaderExtras","visualization","onThresholdsChange","hideDisableQuery","EmptyQueryWrapper","QueryRows","PureComponent","super","onQueriesChange","item","itemIndex","updatedQueries","previousSettings","getDataSourceSettings","omit","datasourceUid","copyModel","newModel","startIndex","endIndex","update","removed","splice","expressions","thresholdByRefId","SUPPORTED_EXPRESSION_TYPES","hasRangeThreshold","threshold","isRangeThreshold","originRefIDs","originQueries","originQuery","originRefID","originIsDataQuery","hasValidOrigin","ThresholdsMode","steps","appendSingleThreshold","appendRangeThreshold","console","a","b","getThresholdsForQueries","onDragEnd","droppableId","provided","ref","innerRef","droppableProps","DatasourceNotFound","onUpdateDatasource","defaultDataSource","getDatasourceSrv","placeholder","showDetails","setShowDetails","QueryOperationRow","draggable","show","fill","JSON","stringify","onChangeQueries","useRulesSourcesWithRuler","dataSources","ds","rulerConfig","getDataSourceByName","dsConfig","CloudRulesSourcePicker","rulesSourcesWithRuler","fetchAllPromBuildInfoAction","dataSourceFilter","DataSourcePicker","noDefault","current","RuleType","image","selected","cardStyles","isSelected","GrafanaManagedRuleType","DisabledTooltip","visible","MimirFlavoredType","RecordingRuleType","RuleTypePicker","enabledTypes","hasLotexDatasources","isEmpty","AlertType","editingExistingRule","enabledRuleTypes","defaultRuleType","canCreateGrafanaRules","canCreateCloudRules","getAvailableRuleTypes","findDataSourceFromExpressionRecursive","alertQuery","hasCyclicalReferences","ExpressionDatasourceUID","alertQueryReferenced","alertQuery_","findDataSourceFromExpression","firstReference","duplicateQuery","createAction","addNewDataQuery","setDataQueries","addNewExpression","removeExpression","updateExpression","updateExpressionRefId","rewireExpressions","updateExpressionType","updateExpressionTimeRange","queriesAndExpressionsReducer","createReducer","builder","addCase","payload","addQuery","getDefaultOrFirstCompatibleDataSource","expressionDatasource","defaultCondition","dataSourceAlertQuery","newState","oldRefId","action","queryToAdd","getNextRefIdChar","defaultTimeRange","QueryAndExpressionsStep","runner","useRef","AlertingQueryRunner","setPanelData","initialState","useReducer","isGrafanaManagedType","isCloudAlertRuleType","showCloudExpressionEditor","cancelQueries","cancel","runQueries","run","shouldValidate","currentRunner","destroy","noCompatibleDataSources","isDataLoading","dataQueries","emptyQueries","lastRefId","at","selectors","AlertRuleForm","notifyApp","useAppNotification","queryParams","useQueryParams","showEditYaml","setShowEditYaml","returnTo","showDeleteModal","setShowDeleteModal","defaultValues","rulerRuleToFormValues","getDefaultFormValues","getDefaultQueries","parse","formAPI","useForm","shouldFocusError","handleSubmit","showStep2","submitState","ruleForm","saveRule","initialAsyncRequestState","useCleanup","unifiedAlerting","submit","exitOnSave","saveRuleFormAction","annotations","trim","redirectOnSave","onInvalid","preventDefault","form","justify","logInfo","LogMessages","isCortexLokiOrRecordingRule","Spinner","buttonSpinner","inline","contentOuter","CustomScrollbar","autoHeightMin","hideHorizontalTrack","contentInner","GrafanaEvaluationBehavior","ConfirmModal","confirmText","onConfirm","identifier","ruleId","ruleSourceName","rule","deleteRuleAction","navigateTo","onDismiss","ExistingRuleEditor","existingRule","loadingAlertRule","dispatched","isEditable","loadingEditable","useIsRuleEditable","fetchEditableRuleAction","LoadingPlaceholder","defaultPageNav","breadcrumbs","withErrorBoundary","fetchRulesSourceBuildInfoAction","canEditRules","useRulesAccess","getContent","AlertingPageWrapper","pageId","pageNav","panels","panel","isSupportedPanelPlugin","imgUrl","logos","small","isExpressionReference","useFolder","folderRequests","folders","fetchFolderIfNotFetchedAction","folderUID","isGrafanaRulerRule","grafana_alert","namespace_uid","rulePermission","getRulesPermissions","isRemovable","canSave","delete","isRulerAvailable","FALL_BACK_TIME_RANGE","getReferencedIds","getReferencedIdsForClassicCondition","getReferencedIdsForMath","getReferencedIdsForReduce","getTimeRanges","referencedRefIds","referencedRefIdsKey","backendSrv","dataSourceSrv","ReplaySubject","lastResult","asObservable","filterQuery","subscription","runRequest","dataPerQuery","nextResult","applyChange","preProcessed","preProcessPanelData","setStructureRevision","mapErrorToPanelData","unsubscribe","requestIsRunning","complete","initial","requestId","uuidv4","mapToPanelData","cancelNetworkRequestsOnUnsubscribe","dataByQuery","getTimeRange","relative","getTimeRangeForExpression","rangeUtil","warn","frames","queryError","change","getRulesAccess"],"sourceRoot":""}