"use strict";(self.webpackChunkgrafana=self.webpackChunkgrafana||[]).push([[319],{70030:(e,t,r)=>{function n(e,t){const r=["A","B","C"],a=[];if(t>5)return[];for(const i of r){const r=`${e}${i}`;a.push({name:r,children:n(r,t+1)})}return a}function a(e,t,r){if(r>=t.length)return e;if("*"===t[r])return e;const n=t[r];let i=[],s=[n];n.startsWith("{")&&(s=n.replace(/\{|\}/g,"").split(","));for(const n of e)for(const e of s)if(-1!==e.indexOf("*")){const s=e.replace("*","");new RegExp(`^${s}.*`,"gi").test(n.name)&&(i=i.concat(a([n],t,r+1)))}else n.name===e&&(i=i.concat(a(n.children,t,r+1)));return i}function i(e){if(0===e.indexOf("value"))return[{name:e,children:[]}];return a(n("",0),e.split("."),0)}r.d(t,{H:()=>i})},30612:(e,t,r)=>{r.r(t),r.d(t,{plugin:()=>tt});var n,a=r(23214),i=r(68404),s=r(45916);class o extends i.PureComponent{render(){return n||(n=(0,s.jsx)("div",{}))}}var l=r(66015),u=r(25004),c=r(34117),m=r(46889),p=r(70917),d=r(4645),f=r(70800),g=r(93194);const h=[{label:"Speed (ms)",id:"speed",placeholder:"value",min:10,step:10},{label:"Spread",id:"spread",placeholder:"value",min:.5,step:.1},{label:"Noise",id:"noise",placeholder:"value",min:0,step:.1},{label:"Bands",id:"bands",placeholder:"bands",min:0,step:1}],b=[{value:"signal",label:"Signal"},{value:"logs",label:"Logs"},{value:"fetch",label:"Fetch"}],v=e=>{var t,r,n;let{onChange:a,query:i}=e;const o=e=>{const{name:t,value:r}=e.target;a({target:{name:t,value:Number(r)}})};return(0,s.jsxs)(c.Z,{children:[(0,s.jsx)(m._,{label:"Type",labelWidth:14,children:(0,s.jsx)(p.Ph,{width:32,onChange:e=>{let{value:t}=e;a({target:{name:"type",value:t}})},defaultValue:b[0],options:b})}),"signal"===(null==i||null===(t=i.stream)||void 0===t?void 0:t.type)&&h.map((e=>{var t;let{label:r,id:n,min:a,step:l,placeholder:u}=e;return(0,s.jsx)(m._,{label:r,labelWidth:14,children:(0,s.jsx)(d.I,{width:32,type:"number",id:`stream.${n}-${i.refId}`,name:n,min:a,step:l,value:null===(t=i.stream)||void 0===t?void 0:t[n],placeholder:u,onChange:o})},n)})),"fetch"===(null==i||null===(r=i.stream)||void 0===r?void 0:r.type)&&(0,s.jsx)(m._,{label:"URL",labelWidth:14,grow:!0,children:(0,s.jsx)(d.I,{type:"text",name:"url",id:`stream.url-${i.refId}`,value:null==i||null===(n=i.stream)||void 0===n?void 0:n.url,placeholder:"Fetch URL",onChange:a})})]})},y=[{label:"Series count",id:"seriesCount",placeholder:"1",min:1,step:1},{label:"Start value",id:"startValue",placeholder:"auto",step:1},{label:"Min",id:"min",placeholder:"none",step:.1},{label:"Max",id:"max",placeholder:"none",step:.1},{label:"Spread",id:"spread",placeholder:"1",min:.5,step:.1},{label:"Noise",id:"noise",placeholder:"0",min:0,step:.1},{label:"Drop (%)",id:"drop",placeholder:"0",min:0,max:100,step:1,tooltip:"Exclude some percent (chance) points"}],w=u.wl.components.DataSource.TestData.QueryTab,k=e=>{let{onChange:t,query:r}=e;return(0,s.jsx)(c.Z,{children:y.map((e=>{let{label:n,id:a,min:i,step:o,placeholder:l,tooltip:u}=e;const c=null==w?void 0:w[a];return(0,s.jsx)(m._,{label:n,labelWidth:14,"aria-label":c,tooltip:u,children:(0,s.jsx)(d.I,{width:32,name:a,type:"number",id:`randomWalk-${a}-${r.refId}`,min:i,step:o,value:r[a]||l,placeholder:l,onChange:t})},a)}))})};var x=r(31787);const S=e=>{var t;let{onChange:r,query:n}=e;const a=e=>{r(Object.assign({},n,{csvContent:e}))};return(0,s.jsx)(x.p,{height:300,language:"csv",value:null!==(t=n.csvContent)&&void 0!==t?t:"",onBlur:a,onSave:a,showMiniMap:!1,showLineNumbers:!0})},C=e=>{let{onChange:t,query:r}=e;const n=["flight_info_by_state.csv","population_by_state.csv","gdp_per_capita.csv","js_libraries.csv","ohlc_dogecoin.csv","weight_height.csv","browser_marketshare.csv"].map((e=>({label:e,value:e})));return(0,s.jsx)(c.Z,{children:(0,s.jsx)(m._,{label:"File",labelWidth:14,children:(0,s.jsx)(p.Ph,{width:32,onChange:e=>{let{value:n}=e;t(Object.assign({},r,{csvFileName:n}))},placeholder:"Select csv file",options:n,value:n.find((e=>e.value===r.csvFileName))})})})};var T=r(8006);const W={timeStep:60,onCount:3,onValue:2,offCount:3,offValue:1},j=[{timeStep:60,valuesCSV:"0,0,2,2,1,1"}],_={scenarioId:"random_walk",refId:""};function F(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const I=e=>{const{wave:t,last:r,index:n,onAdd:a,onChange:o}=e,[l,u]=(0,i.useState)(t.valuesCSV||""),[p,f]=(0,i.useState)(t.labels||""),[g,h]=(0,i.useState)(t.name||""),b=(e,r)=>{o(n,Object.assign({},t,{[e]:r}))};return(0,s.jsxs)(c.Z,{children:[(0,s.jsx)(m._,{label:"Values",grow:!0,tooltip:"Comma separated values. Each value may be an int, float, or null and must not be empty. Whitespace and trailing commas are removed",children:(0,s.jsx)(d.I,{value:l,placeholder:"CSV values",onChange:e=>u(e.currentTarget.value),autoFocus:!0,onBlur:()=>b("valuesCSV",l),onKeyDown:e=>{"Enter"===e.key&&b("valuesCSV",l)}})}),(0,s.jsx)(m._,{label:"Step",tooltip:"The number of seconds between datapoints.",children:(0,s.jsx)(d.I,{value:t.timeStep,type:"number",placeholder:"60",width:10,onChange:e=>b("timeStep",e.currentTarget.valueAsNumber)})}),(0,s.jsx)(m._,{label:"Name",children:(0,s.jsx)(d.I,{value:g,placeholder:"name",width:10,onChange:e=>h(e.currentTarget.value),onBlur:()=>b("name",g)})}),(0,s.jsx)(m._,{label:"Labels",children:(0,s.jsx)(d.I,{value:p,placeholder:"labels",width:12,onChange:e=>f(e.currentTarget.value),onBlur:()=>b("labels",p)})}),(0,s.jsx)(T.zx,{icon:r?"plus":"minus",variant:"secondary",onClick:()=>{r?a():o(n,void 0)}})]})};class B extends i.PureComponent{constructor(){super(...arguments),F(this,"onChange",((e,t)=>{var r;let n=[...null!==(r=this.props.waves)&&void 0!==r?r:j];t?n[e]=Object.assign({},t):n.splice(e,1),this.props.onChange(n)})),F(this,"onAdd",(()=>{var e;const t=[...null!==(e=this.props.waves)&&void 0!==e?e:j];t.push(Object.assign({},j[0])),this.props.onChange(t)}))}render(){var e;let t=null!==(e=this.props.waves)&&void 0!==e?e:j;return t.length||(t=j),(0,s.jsx)(s.Fragment,{children:t.map(((e,r)=>(0,s.jsx)(I,{wave:e,index:r,onAdd:this.onAdd,onChange:this.onChange,last:r===t.length-1},`${r}/${e.valuesCSV}`)))})}}const A=[{label:"Server panic",value:"server_panic"},{label:"Frontend exception",value:"frontend_exception"},{label:"Frontend observable",value:"frontend_observable"}],P=e=>{let{query:t,onChange:r}=e;return(0,s.jsx)(c.Z,{children:(0,s.jsx)(m._,{labelWidth:14,label:"Error type",children:(0,s.jsx)(p.Ph,{options:A,value:t.errorType,onChange:e=>{r(Object.assign({},t,{errorType:e.value}))}})})})},R=[{label:"random-2s-stream",value:"random-2s-stream",description:"Random stream with points every 2s"},{label:"random-flakey-stream",value:"random-flakey-stream",description:"Stream that returns data in random intervals"},{label:"random-labeled-stream",value:"random-labeled-stream",description:"Value with moving labels"},{label:"random-20Hz-stream",value:"random-20Hz-stream",description:"Random stream with points in 20Hz"}],N=e=>{let{onChange:t,query:r}=e;return(0,s.jsx)(c.Z,{children:(0,s.jsx)(m._,{label:"Channel",labelWidth:14,children:(0,s.jsx)(p.Ph,{width:32,onChange:e=>{let{value:n}=e;t(Object.assign({},r,{channel:n}))},placeholder:"Select channel",options:R,value:R.find((e=>e.value===r.channel))})})})};function M(e){var t,r;let{query:n,onChange:a}=e;const i=(null===(t=n.nodes)||void 0===t?void 0:t.type)||"random";return(0,s.jsxs)(c.Z,{children:[(0,s.jsx)(m._,{label:"Data type",labelWidth:14,children:(0,s.jsx)(p.Ph,{options:q.map((e=>({label:e,value:e}))),value:q.find((e=>e===i)),onChange:e=>a(Object.assign({},n.nodes,{type:e.value})),width:32})}),"random"===i&&(0,s.jsx)(m._,{label:"Count",labelWidth:14,children:(0,s.jsx)(d.I,{type:"number",name:"count",value:null===(r=n.nodes)||void 0===r?void 0:r.count,width:32,onChange:e=>a(Object.assign({},n.nodes,{count:e.currentTarget.value?parseInt(e.currentTarget.value,10):0})),placeholder:"10"})})]})}const q=["random","response"],O=[{label:"Step",id:"timeStep",placeholder:"60",tooltip:"The number of seconds between datapoints."},{label:"On Count",id:"onCount",placeholder:"3",tooltip:"The number of values within a cycle, at the start of the cycle, that should have the onValue."},{label:"Off Count",id:"offCount",placeholder:"6",tooltip:"The number of offValues within the cycle."},{label:"On Value",id:"onValue",placeholder:"1",tooltip:'The value for "on values", may be an int, float, or null.'},{label:"Off Value",id:"offValue",placeholder:"1",tooltip:'The value for "off values", may be a int, float, or null.'}],D=e=>{let{onChange:t,query:r}=e;const n=e=>{const{name:r,value:n}=e.target;t({target:{name:r,value:Number(n)}})};return(0,s.jsx)(c.Z,{children:O.map((e=>{var t;let{label:a,id:i,placeholder:o,tooltip:l}=e;return(0,s.jsx)(m._,{label:a,labelWidth:14,tooltip:l,children:(0,s.jsx)(d.I,{width:32,type:"number",name:i,id:`pulseWave.${i}-${r.refId}`,value:null===(t=r.pulseWave)||void 0===t?void 0:t[i],placeholder:o,onChange:n})},i)}))})};var z=r(82897),H=r(68633),L=r(99511),V=r(93864),E=r(2843);const U=e=>{var t;let{onChange:r,query:n}=e;const[a,o]=(0,i.useState)(),[l,u]=(0,i.useState)(),c=e=>{try{const a=JSON.parse(e);if((0,z.isArray)(a))return o(void 0),u(void 0),void r(Object.assign({},n,{rawFrameContent:e}));let i;if((0,z.isArray)(a.series)&&a.state)i=a.series.map((e=>(0,H.og)((0,H.g0)(e))));else{var t;const e=(0,V.z1)({data:a});null!==(t=e.data)&&void 0!==t&&t.length&&!e.error&&(i=e.data.map((e=>(0,L.Y)(e))))}if(i)return console.log("Original",a),console.log("Save",i),o(void 0),u("Converted to direct frame result"),void r(Object.assign({},n,{rawFrameContent:JSON.stringify(i,null,2)}));o("Unable to read dataframes in text")}catch(e){console.log("Error parsing json",e),o("Enter JSON array of data frames (or raw query results body)"),u(void 0)}};return(0,s.jsxs)(s.Fragment,{children:[a&&(0,s.jsx)(E.b,{title:a,severity:"error"}),l&&(0,s.jsx)(E.b,{title:l,severity:"warning"}),(0,s.jsx)(x.p,{height:300,language:"json",value:null!==(t=n.rawFrameContent)&&void 0!==t?t:"[]",onBlur:c,onSave:c,showMiniMap:!0,showLineNumbers:!0})]})};var $=r(83744),G=r(52423),Q=r(16755),Z=r(71980);const K=(e,t,r)=>{var n;switch(e.type){case"number":return(0,s.jsx)(d.I,{type:"number",defaultValue:null==r?void 0:r[e.name],onChange:n=>{const a=n.currentTarget.valueAsNumber;t(Object.assign({},r,{[e.name]:a}))}});case"boolean":return(0,s.jsx)(f.x,{value:null===(n=null==r?void 0:r[e.name])||void 0===n||n,onChange:()=>{t(Object.assign({},r,{[e.name]:!r[e.name]}))}});default:return(0,s.jsx)(d.I,{type:"string",value:null==r?void 0:r[e.name],onChange:n=>{const a=n.target.value;t(Object.assign({},r,{[e.name]:a}))}})}},J=e=>({jsonView:G.css`
      margin-bottom: ${e.spacing(1)};
    `}),Y=e=>{let{config:t,schema:r,onChange:n}=e;const[a,o]=(0,i.useState)(!1),l=(0,Q.wW)(J);return(0,s.jsxs)(Z.C,{label:"Config",children:[(0,s.jsx)(f.x,{className:l.jsonView,label:"JSON View",showLabel:!0,value:a,onChange:()=>o(!a)}),a?(0,s.jsx)(g.K,{defaultValue:JSON.stringify(t,null,2),rows:7,onChange:e=>{const t=e.target;n(JSON.parse(t.value))}}):(0,s.jsx)(s.Fragment,{children:r.fields.map((e=>(0,s.jsx)(m._,{label:e.name,labelWidth:14,children:K(e,n,t)},e.name)))})]})},X=e=>{var t,r,n,a,o,u;let{onChange:g,query:h,ds:b}=e;const v=null!==(t=h.sim)&&void 0!==t?t:{},y=null!==(r=v.key)&&void 0!==r?r:{},[w,k]=(0,i.useState)({}),x=(0,l.Z)((async()=>{const e=await b.getResource("sims");return{sims:e,options:e.map((e=>({label:e.name,value:e.type,description:e.description})))}}),[b]),S=(0,i.useMemo)((()=>{const e=y.type;return e&&x.value?{details:x.value.sims.find((t=>t.type===e)),option:x.value.options.find((t=>t.value===e))}:{}}),[x.value,null==y?void 0:y.type]);let C=(0,l.Z)((async()=>{var e;let t=y.type+"/"+y.tick+"hz";y.uid&&(t+="/"+y.uid);let r=null===(e=await b.getResource("sim/"+t))||void 0===e?void 0:e.config;return k(r.value),r}),[y.type,y.tick,y.uid]);const T=e=>{g(Object.assign({},h,{sim:Object.assign({},v,{key:e})}))};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(c.Z,{children:(0,s.jsx)(m._,{labelWidth:14,label:"Simulation",tooltip:"",children:(0,s.jsx)(p.Ph,{isLoading:x.loading,options:null!==(n=null===(a=x.value)||void 0===a?void 0:a.options)&&void 0!==n?n:[],value:S.option,onChange:e=>{T(Object.assign({},y,{type:e.value}))},width:32})})}),(0,s.jsxs)(c.Z,{children:[(0,s.jsx)(m._,{labelWidth:14,label:"Stream",tooltip:"connect to the live channel",children:(0,s.jsx)(f.x,{value:Boolean(v.stream),onChange:()=>{g(Object.assign({},h,{sim:Object.assign({},v,{stream:!v.stream})}))}})}),(0,s.jsx)(m._,{label:"Interval",tooltip:"the rate a simulation will spit out events",children:(0,s.jsx)(d.I,{width:10,type:"number",value:y.tick,onChange:e=>{const t=e.currentTarget.valueAsNumber;T(Object.assign({},y,{tick:t}))},min:.1,max:50,suffix:"hz"})}),(0,s.jsx)(m._,{label:"Last",tooltip:"Only return the last value",children:(0,s.jsx)($._,{children:(0,s.jsx)(f.x,{value:Boolean(v.last),onChange:()=>{g(Object.assign({},h,{sim:Object.assign({},v,{last:!v.last})}))}})})}),(0,s.jsx)(m._,{label:"UID",tooltip:"A UID will allow multiple simulations to run at the same time",children:(0,s.jsx)(d.I,{type:"text",placeholder:"optional",value:v.key.uid,onChange:e=>{const{value:t}=e.target;T(Object.assign({},y,{uid:null!=t?t:void 0}))}})})]}),(0,s.jsx)(Y,{onChange:e=>{let t=y.type+"/"+y.tick+"hz";y.uid&&(t+="/"+y.uid),b.postResource("sim/"+t,e).then((e=>{k(e.config)}))},config:null!=w?w:C.value,schema:null!==(o=null===(u=S.details)||void 0===u?void 0:u.config.schema)&&void 0!==o?o:{fields:[]}})]})};function ee(e){let{query:t,onChange:r}=e;return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(c.Z,{children:[(0,s.jsx)(m._,{labelWidth:14,label:"Mode",children:(0,s.jsx)(p.Ph,{options:te,onChange:e=>{r(Object.assign({},t,{mode:e.value}))},width:32,value:te.find((e=>e.value===t.mode))})}),(0,s.jsx)(m._,{label:"Period",children:(0,s.jsx)(d.I,{value:t.period,placeholder:"30m",onChange:e=>{r(Object.assign({},t,{period:e.currentTarget.value}))}})})]}),(0,s.jsxs)(c.Z,{children:[(0,s.jsx)(m._,{labelWidth:14,label:"Fields",children:(0,s.jsx)(p.NU,{options:re,onChange:e=>{r(Object.assign({},t,{fields:e.map((e=>e.value))}))},width:32,placeholder:"all",value:t.fields})}),(0,s.jsx)(m._,{label:"States",grow:!0,children:(0,s.jsx)(p.NU,{options:ne,onChange:e=>{r(Object.assign({},t,{states:e.map((e=>e.value))}))},placeholder:"all",value:t.states})})]})]})}const te=["values-as-rows","values-as-fields","values-as-labeled-fields","timeseries","timeseries-wide"].map((e=>({label:e,value:e}))),re=["foo","bar","baz"].map((e=>({label:e,value:e}))),ne=["AL","AK","AZ","AR","CA","CO","CT","DE","DC","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","MD","MA","MI","MN","MS","MO","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"].map((e=>({label:e,value:e})));var ae=r(46060),ie=r(27843),se=r(28173),oe=r(10187),le=r(14790),ue=r(89704),ce=r(36551);let me=0;function pe(){return me=(me+Math.floor(5*Math.random()))%de.length,de[me]}const de=["At","vero","eos","et","accusamus","et","iusto","odio","dignissimos","ducimus","qui","blanditiis","praesentium","voluptatum","deleniti","atque","corrupti","quos","dolores","et","quas","molestias","excepturi","sint","occaecati","cupiditate","non","provident","similique","sunt","in","culpa","qui","officia","deserunt","mollitia","animi","id","est","laborum","et","dolorum","fuga","Et","harum","quidem","rerum","facilis","est","et","expedita","distinctio","Nam","libero","tempore","cum","soluta","nobis","est","eligendi","optio","cumque","nihil","impedit","quo","minus","id","quod","maxime","placeat","facere","possimus","omnis","voluptas","assumenda","est","omnis","dolor","repellendus","Temporibus","autem","quibusdam","et","aut","officiis","debitis","aut","rerum","necessitatibus","saepe","eveniet","ut","et","voluptates","repudiandae","sint","et","molestiae","non","recusandae","Itaque","earum","rerum","hic","tenetur","a","sapiente","delectus","ut","aut","reiciendis","voluptatibus","maiores","alias","consequatur","aut","perferendis","doloribus","asperiores","repellat"],fe={type:"signal",speed:250,spread:3.5,noise:2.2,bands:1};function ge(e,t){const r=(0,z.defaults)(e.stream,fe);if("signal"===r.type)return function(e,t,r){return new ae.y((n=>{var a;const i=`signal-${r.panelId}-${e.refId}`,s=r.maxDataPoints||1e3,o={refId:e.refId,fields:[{name:"time",type:ie.fS.time},{name:null!==(a=e.alias)&&void 0!==a?a:"value",type:ie.fS.number}]},{spread:l,speed:u,bands:c=0,noise:m}=t;for(let e=0;e<c;e++){const t=c>1?` ${e+1}`:"";o.fields.push({name:"Min"+t,type:ie.fS.number}),o.fields.push({name:"Max"+t,type:ie.fS.number})}const p=ce.Av.fromDataFrameJSON({schema:o},{maxLength:s});let d=100*Math.random(),f=null,g=-1;const h=e=>{d+=(Math.random()-.5)*l;const t={values:[[e],[d]]};let r=d,n=d;for(let e=0;e<c;e++)r-=Math.random()*m,n+=Math.random()*m,t.values.push([r]),t.values.push([n]);const a={data:t};return p.push(a)};{let e=Date.now()-s*u;for(let t=0;t<s;t++)h(e),e+=u}const b=()=>{h(Date.now());(ue.A.lastUpdate-g>1e3||ue.A.ok)&&(n.next({data:[p],key:i,state:se.Gu.Streaming}),g=ue.A.lastUpdate),f=setTimeout(b,u)};return setTimeout(b,5),()=>{console.log("unsubscribing to stream "+i),clearTimeout(f)}}))}(e,r,t);if("logs"===r.type)return function(e,t,r){return new ae.y((n=>{const a=`logs-${r.panelId}-${e.refId}`,i=r.maxDataPoints||1e3,s=new oe.a({append:"tail",capacity:i});s.refId=e.refId,s.name=e.alias||"Logs "+e.refId,s.addField({name:"line",type:ie.fS.string}),s.addField({name:"time",type:ie.fS.time}),s.meta={preferredVisualisationType:"logs"};const{speed:o}=t;let l=null;const u=()=>{s.fields[0].values.add(Date.now()),s.fields[1].values.add(function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:60,t=pe();for(;t.length<e;)t+=" "+pe();return t}()),n.next({data:[s],key:a}),l=setTimeout(u,o)};return setTimeout(u,5),()=>{console.log("unsubscribing to stream "+a),clearTimeout(l)}}))}(e,r,t);if("fetch"===r.type)return function(e,t,r){return new ae.y((n=>{const a=`fetch-${r.panelId}-${e.refId}`,i=r.maxDataPoints||1e3;let s,o=new oe.a({append:"tail",capacity:i});o.refId=e.refId,o.name=e.alias||"Fetch "+e.refId;const l=new le.QM({callback:{onHeader:t=>{o.fields.length&&(o=new oe.a({append:"tail",capacity:i}),o.refId=e.refId,o.name="Fetch "+e.refId);for(const e of t)o.addField(e)},onRow:e=>{o.add(e)}}}),u=e=>{if(e.value){const t=(new TextDecoder).decode(e.value);l.readCSV(t)}return n.next({data:[o],key:a,state:e.done?se.Gu.Done:se.Gu.Streaming}),e.done?(console.log("Finished stream"),void n.complete()):s.read().then(u)};if(!t.url)throw new Error("query.url is not defined");return fetch(new Request(t.url)).then((e=>{e.body&&(s=e.body.getReader(),s.read().then(u))})),()=>{console.log("unsubscribing to stream "+a)}}))}(e,r,t);throw new Error(`Unknown Stream Type: ${r.type}`)}var he,be,ve,ye;const we=["random_walk","predictable_pulse"],ke=[{value:"datasources",label:"Data Sources"},{value:"search",label:"Search"},{value:"annotations",label:"Annotations"}],xe=u.wl.components.DataSource.TestData.QueryTab;var Se;class Ce extends i.PureComponent{constructor(e){super(e)}render(){return Se||(Se=(0,s.jsxs)("div",{children:["See github for more information about setting up a reproducible test environment.",(0,s.jsx)("br",{}),(0,s.jsx)("br",{}),(0,s.jsx)(T.Qj,{variant:"secondary",href:"https://github.com/grafana/grafana/tree/main/devenv",target:"_blank",rel:"noopener noreferrer",children:"GitHub"}),(0,s.jsx)("br",{})]}))}}var Te=r(53786),We=r(16313),je=r(37537),_e=r(85526),Fe=r(86570),Ie=r(22458),Be=r(84403),Ae=r(22543),Pe=r(18474),Re=r(2633),Ne=r(93570),Me=r(98251),qe=r(98142),Oe=r(70030),De=r(25803),ze=r(94582),He=r(663),Le=r(57171);const Ve={fields:[{name:De.z.id,type:ie.fS.string,config:{links:[{title:"Traces/All",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}"))'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/OK",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}")) { ok = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Errors",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}")) { error = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Faults",url:"",internal:{query:{queryType:"getTraceSummaries",query:'service(id(name: "${__data.fields.name}", type: "${__data.fields.type}")) { fault = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}}]},values:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]},{name:De.z.title,type:ie.fS.string,config:{displayName:"Name"},values:["auth","products","customers","orders","products","orders","api","shipping","orders","execute-api","shipping","www","api","www","products"]},{name:De.z.subTitle,type:ie.fS.string,config:{displayName:"Type"},values:["Compute","SQL","SQL","SQL","remote","Function","Compute","Function","Function","remote","Function","Compute","client","client","Compute"]},{name:De.z.mainStat,type:ie.fS.number,config:{unit:"ms/t",displayName:"Average response time"},values:[3.5394042646735553,15.906441318223264,4.913011921591567,7.4163203042094095,1092,22.85961441405067,56.135855729084696,4.45946191601527,12.818300278280843,4.25,12.565442646791492,77.63447512700567,40.387096774193544,77.63447512700567,27.648950187374872]},{name:De.z.secondaryStat,type:ie.fS.number,config:{unit:"t/min",displayName:"Transactions per minute"},values:[50.56317154501667,682.4,512.8416666666667,125.64444444444445,.005585812037424941,137.59722222222223,300.0527777777778,30.582348853370394,125.77222222222223,.028706417080318163,30.582348853370394,165.675,.100021510002151,165.675,162.33055555555555]},{name:De.z.arc+"success",type:ie.fS.number,config:{color:{mode:He.S.Fixed,fixedColor:"green"},displayName:"Sucesss"},values:[.9338865684765882,1,1,1,.5,1,.9901128505170387,.9069260134520997,1,0,.9069260134520997,.9624432037288534,0,.9624432037288534,.9824945669843769]},{name:De.z.arc+"faults",type:ie.fS.number,config:{color:{mode:He.S.Fixed,fixedColor:"red"},displayName:"Faults"},values:[0,0,0,0,.5,0,.009479813736472288,0,0,0,0,.017168821152524185,0,.017168821152524185,.01750543301562313]},{name:De.z.arc+"errors",type:ie.fS.number,config:{color:{mode:He.S.Fixed,fixedColor:"semi-dark-yellow"},displayName:"Errors"},values:[.06611343152341174,0,0,0,0,0,.0004073357464890436,.09307398654790038,0,1,.09307398654790038,.02038797511862247,1,.02038797511862247,0]},{name:De.z.arc+"throttled",type:ie.fS.number,config:{color:{mode:He.S.Fixed,fixedColor:"purple"},displayName:"Throttled"},values:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}],meta:{preferredVisualisationType:"nodeGraph"},name:"nodes"},Ee={fields:[{name:De.z.id,type:ie.fS.string,config:{links:[{title:"Traces/All",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}")'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/OK",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}") { ok = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Errors",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}") { error = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}},{title:"Traces/Faults",url:"",internal:{query:{queryType:"getTraceSummaries",query:'edge("${__data.fields.sourceName}", "${__data.fields.targetName}") { fault = true }'},datasourceUid:"Ax4erxHGz",datasourceName:"Trace data source"}}]},values:["0__2","5__8","6__0","6__5","6__9","6__2","6__14","6__4","8__3","10__7","11__0","11__6","12__6","13__11","14__1","14__2","14__10"]},{name:De.z.source,type:ie.fS.string,config:{},values:[0,5,6,6,6,6,6,6,8,10,11,11,12,13,14,14,14]},{name:"sourceName",type:ie.fS.string,config:{},values:["auth","orders","api","api","api","api","api","api","orders","shipping","www","www","api","www","products","products","products"]},{name:De.z.target,type:ie.fS.string,config:{},values:[2,8,0,5,9,2,14,4,3,7,0,6,6,11,1,2,10]},{name:"targetName",type:ie.fS.string,config:{},values:["customers","orders","auth","orders","execute-api","customers","products","products","orders","shipping","auth","api","api","www","products","customers","shipping"]},{name:De.z.mainStat,type:ie.fS.string,config:{displayName:"Response percentage"},values:["Success 100.00%","Success 100.00%","Success 100.00%","Success 100.00%","Errors 100.00%","Success 100.00%","Faults 1.75%","Faults 50.00%","Success 100.00%","Errors 9.31%","Errors 6.62%","Faults 1.13%","Errors 100.00%","Faults 1.72%","Success 100.00%","Success 100.00%","Faults 9.30%"]},{name:De.z.secondaryStat,type:ie.fS.number,config:{unit:"t/min",displayName:"Transactions per minute"},values:[50.56317154501667,125.77222222222223,.03333333333333333,137.59722222222223,.022222222222222223,299.96666666666664,162.33055555555555,.005555555555555556,125.64444444444445,30.582348853370394,50.51111111111111,299.9166666666667,.100021510002151,165.675,682.4,162.33055555555555,30.558333333333334]}],meta:{preferredVisualisationType:"nodeGraph"},name:"edges"};function Ue(e){const t=Math.random(),r=1-t;return{id:e.toString(),title:`service:${e}`,subTitle:"service",success:t,error:r,stat1:Math.random(),stat2:Math.random(),edges:[]}}const $e={name:"response",refId:"A",meta:{preferredVisualisationType:"flamegraph"},fields:[{name:"level",values:[0,1,2,3,4,5,6,7,8,9,10,11,12,11,12,13,14,15,16,10,11,12,13,9,10,9,9,7,7,6,5,6,7,8,8,9,10,11,12,13,8,9,10,6,7,8,9,10,11,12,13,14,15,4,5,6,7,8,9,9,10,11,12,11,12,13,8,8,7,8,8,7,6,7,8,9,9,10,11,12,13,14,15,16,17,18,9,8,8,7,8,6,7,8,8,7,6,7,8,8,8,9,10,11,12,4,5,6,7,8,9,9,10,11,9,10,7,4,5,6,7,8,8,7,8,9,10,11,12,13,10,10,11,9,10,10,11,12,13,14,15,16,17,8,9,5,6,7,6,7,6,5,6,6,6,6,5,6,7,6,5,6,7,8,4,5,6,5,6,5,4,5,5,3,4,5,6,7,7,8,7,8,9,8,9,8,7,8,9,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,24,24,25,26,24,25,22,23,23,24,25,26,27,28,29,30,31,32,21,22,23,24,25,26,27,26,24,25,26,25,24,24,25,26,27,28,29,30,31,32,33,34,35,25,26,27,25,26,24,23,24,24,25,23,23,22,23,24,24,23,24,25,26,24,25,23,24,24,25,23,23,24,24,23,23,23,23,23,24,25,22,23,24,25,22,23,24,25,26,27,28,25,26,27,28,29,24,22,23,24,25,26,27,28,29,30,31,32,33,21,22,23,23,24,24,24,22,23,24,25,24,23,24,24,23,22,23,24,25,25,26,27,24,22,23,24,25,26,27,28,29,30,31,32,24,21,22,23,24,25,26,27,28,21,22,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,24,25,26,27,28,23,24,25,26,27,28,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,31,30,28,29,30,31,32,33,34,35,36,37,29,30,31,26,27,28,28,28,29,27,26,27,26,25,26,27,28,29,30,31,32,32,33,34,30,31,32,33,34,33,34,35,36,37,38,39,29,30,31,32,32,27,28,28,27,28,29,30,31,32,33,34,35,36,37,38,39,40,27,28,27,28,29,30,31,32,33,34,35,36,28,27,28,28,29,27,27,28,27,27,26,27,28,28,29,29,29,26,27,27,28,29,30,29,30,30,29,30,31,28,29,30,28,28,28,28,29,30,29,30,27,28,28,26,27,26,27,27,28,29,26,27,28,29,28,27,28,29,30,30,28,29,30,31,32,32,27,28,26,25,25,26,27,28,29,30,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,31,30,31,32,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,29,26,27,28,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,31,30,29,29,29,25,26,27,28,26,26,27,28,27,28,28,26,27,28,28,27,28,25,26,27,28,29,30,31,32,33,34,25,25,26,27,28,25,26,24,25,22,23,24,25,26,27,28,29,30,31,32,33,33,34,34,32,33,34,34,32,28,29,30,31,27,28,29,26,27,28,29,30,31,32,33,34,26,27,28,29,24,25,26,27,28,29,30,27,28,26,27,25,26,27,28,29,26,25,26,27,26,27,27,28,29,30,31,32,33,34,35,36,37,38,38,39,30,31,32,26,27,28,27,28,29,25,26,27,28,29,30,31,32,28,29,28,29,28,29,27,28,29,30,31,29,30,31,32,33,34,35,27,28,29,30,31,32,33,34,35,36,37,38,28,29,30,31,28,29,30,31,26,25,26,27,28,29,27,28,29,30,25,26,15,14,15,16,17,13,14,15,16,15,16,17,18,19,20,12,13,14,15,16,17,10,11,12,13,14,12,13,10,11,12,13,14,15,2,3,4,5,6,7,8,4,5,6,7,8,9,2,3,1,2,3,4,5,6,6,6,6,7,8,8,9,6,7,6,6,6,6,5,5,6,5,5,5,5,5,6,7,4,2,3,4,5,6,4,5,6,7,8,9,1,2,3,4,5,6,7,8,2,3,4,5,6,7,8,9,2,3,4,5,6,1,2,3,3,4,3,2,1,2,3,4,5,6,5,6,7,8,5,5,6,7,4,5,6,4,2,3,4,3,4,5,6,5,5,6,4,1,2,3,4,5,6,2,3,4,5,6,7,8,9,10,11,12,13,2,3,4,5,6,7,8,9,10,11,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,16,17,18,19,16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,1,2,3,4]},{name:"value",values:[1646e7,41e8,41e8,367e7,113e7,106e7,102e7,15e7,15e7,5e7,3e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,8e7,4e7,1e7,1e7,53e7,8e7,4e7,7e7,5e7,5e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,39e7,39e7,18e7,7e7,5e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,1e7,1e7,1e7,11e7,8e7,6e7,1e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,1e7,1e7,3e7,2e7,4e7,3e7,2e7,1e7,1e7,4e7,4e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,21e7,21e7,21e7,13e7,13e7,1e7,5e7,4e7,4e7,7e7,1e7,4e7,184e7,24e7,24e7,5e7,1e7,1e7,19e7,13e7,5e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,8e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,6e7,1e7,133e7,129e7,32e7,1e7,1e7,1e7,13e7,1e7,1e7,6e7,3e7,1e8,4e7,1e7,1e7,4e7,3e7,1e7,1e7,7e7,1e7,1e7,5e7,4e7,1e7,3e7,2e7,1e7,43e7,43e7,43e7,43e7,1e7,4e7,2e7,37e7,2e7,1e7,18e7,1e7,3e7,1e7,1e7,1e7,563e7,558e7,558e7,558e7,558e7,558e7,558e7,558e7,558e7,554e7,554e7,553e7,551e7,55e8,549e7,549e7,161e7,161e7,154e7,154e7,19e7,17e7,17e7,1e7,2e7,12e7,1e7,1e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,85e7,35e7,3e8,12e7,11e7,8e7,2e7,1e7,8e7,4e7,2e7,1e7,1e7,5e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,37e7,4e7,2e7,1e7,1e8,1e7,1e7,1e7,3e7,3e7,8e7,2e7,1e7,1e7,1e7,4e7,1e7,1e7,1e7,2e7,1e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,11e7,11e7,6e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,48e7,15e7,1e7,13e7,1e7,1e7,5e7,14e7,8e7,4e7,1e7,1e7,2e7,1e7,1e7,2e7,12e7,6e7,4e7,1e7,1e7,1e7,1e7,2e7,3e7,3e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,6e7,6e7,6e7,6e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,388e7,388e7,388e7,388e7,387e7,323e7,323e7,321e7,32e7,7e7,7e7,4e7,4e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,7e7,6e7,2e7,3e7,1e7,1e7,1e7,1e8,2e7,5e7,185e7,41e7,11e7,11e7,9e7,6e7,6e7,4e7,2e7,2e7,2e7,3e7,3e7,3e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,2e7,2e7,2e7,1e7,1e7,3e7,2e7,1e7,4e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,4e7,1e7,8e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,6e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,16e7,12e7,2e7,1e8,5e7,1e7,1e7,64e7,1e7,55e7,41e7,8e7,6e7,26e7,2e7,17e7,6e7,3e7,2e7,2e7,2e7,1e7,1e7,1e7,2e7,5e7,4e7,1e7,1e7,1e7,7e7,3e7,4e7,29e7,9e7,3e7,1e7,1e7,1e7,1e7,21e7,2e7,1e7,1e7,1e7,12e7,9e7,9e7,6e7,1e7,3e7,3e7,3e7,3e7,1e7,2e7,5e7,1e7,1e7,1e7,28e7,15e7,15e7,15e7,6e7,3e7,8e7,5e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,13e7,13e7,13e7,7e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,4e7,1e7,59e7,2e7,2e7,1e7,4e7,15e7,3e7,3e7,12e7,1e7,8e7,37e7,26e7,4e7,15e7,11e7,9e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,7e7,6e7,2e7,2e7,64e7,64e7,25e7,25e7,23e7,18e7,17e7,17e7,17e7,17e7,5e7,1e7,4e7,1e7,1e7,6e7,6e7,1e7,3e7,1e7,1e7,1e7,1e7,1e7,5e7,5e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,39e7,6e7,4e7,3e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,3e7,1e7,1e7,1e7,1e7,1e7,9e7,1e7,1e7,6e7,1e7,4e7,4e7,4e7,3e7,3e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,1e7,1e7,1e7,1e7,1e7,18e7,17e7,5e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,3e7,3e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,9e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,7e7,7e7,7e7,7e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,1e7,4e7,4e7,1e7,1e7,1e7,1e7,1e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,619e7,617e7,617e7,607e7,446e7,1e7,5e7,44e7,54e7,2e7,1e7,1e7,1e7,98e7,1e7,5e7,48e7,54e7,5e7,21e7,3e7,3e7,6e7,18e7,1e7,21e7,2e7,2e7,2e7,1e8,2e7,2e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,4e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,1e7,1e7,1e7,1e7,1e7,17e7,16e7,7e7,3e7,1e7,4e7,1e7,17e7,9e7,9e7,7e7,2e7,1e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,8e7,1e7,1e7,7e7,6e7,1e7,1e7,2e7,2e7,2e7,1e7,8e7,1e7,1e7,1e7,1e7,1e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,2e7,5e7,5e7,5e7,5e7,5e7,5e7,5e7,1e7,1e7,1e7,6e7,6e7,6e7,6e7,6e7,6e7,6e7,4e7,4e7,3e7,3e7,3e7,3e7,3e7,3e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7,1e7],config:{unit:"short"}},{name:"self",values:[16460,4100,4100,3670,1130,1060,1020,150,150,50,30,20,10,10,10,10,10,10,10,10,10,10,10,80,40,10,10,530,80,40,70,50,50,30,10,10,10,10,10,10,10,10,10,20,20,20,20,20,20,20,20,20,10,390,390,180,70,50,10,20,20,10,10,10,10,10,10,10,20,10,10,10,110,80,60,10,20,20,20,10,10,10,10,10,10,10,20,10,10,30,20,40,30,20,10,10,40,40,10,10,10,10,10,10,10,210,210,210,130,130,10,50,40,40,70,10,40,1840,240,240,50,10,10,190,130,50,20,10,10,10,10,10,10,80,20,10,10,10,10,10,10,10,10,60,10,1330,1290,320,10,10,10,130,10,10,60,30,100,40,10,10,40,30,10,10,70,10,10,50,40,10,30,20,10,430,430,430,430,10,40,20,370,20,10,180,10,30,10,10,10,5630,5580,5580,5580,5580,5580,5580,5580,5580,5540,5540,5530,5510,5500,5490,5490,1610,1610,1540,1540,190,170,170,10,20,120,10,10,20,20,20,10,10,10,10,10,10,10,10,10,10,10,850,350,300,120,110,80,20,10,80,40,20,10,10,50,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,20,20,10,10,10,10,10,370,40,20,10,100,10,10,10,30,30,80,20,10,10,10,40,10,10,10,20,10,20,10,10,10,10,10,10,10,110,110,60,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,480,150,10,130,10,10,50,140,80,40,10,10,20,10,10,20,120,60,40,10,10,10,10,20,30,30,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,10,10,10,10,60,60,60,60,30,10,10,10,10,10,10,10,10,10,10,10,10,20,20,20,20,20,30,30,30,30,30,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3880,3880,3880,3880,3870,3230,3230,3210,320,70,70,40,40,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,30,10,10,10,10,10,10,10,10,10,20,20,20,70,60,20,30,10,10,10,100,20,50,1850,410,110,110,90,60,60,40,20,20,20,30,30,30,10,10,20,20,20,20,20,20,10,20,20,20,10,10,30,20,10,40,10,10,10,10,10,10,10,10,10,10,10,10,10,40,10,80,30,30,10,10,10,10,10,10,10,20,60,30,30,10,10,10,10,10,10,160,120,20,100,50,10,10,640,10,550,410,80,60,260,20,170,60,30,20,20,20,10,10,10,20,50,40,10,10,10,70,30,40,290,90,30,10,10,10,10,210,20,10,10,10,120,90,90,60,10,30,30,30,30,10,20,50,10,10,10,280,150,150,150,60,30,80,50,20,20,20,20,20,20,20,20,20,20,20,20,10,10,10,10,10,10,10,20,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,130,130,130,70,30,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,40,10,590,20,20,10,40,150,30,30,120,10,80,370,260,40,150,110,90,10,10,10,10,10,10,10,10,10,10,20,20,20,20,20,70,60,20,20,640,640,250,250,230,180,170,170,170,170,50,10,40,10,10,60,60,10,30,10,10,10,10,10,50,50,20,10,10,10,10,10,10,10,10,10,10,10,10,10,390,60,40,30,20,20,10,10,10,10,10,30,10,10,10,10,10,90,10,10,60,10,40,40,40,30,30,30,30,30,30,30,30,10,10,10,10,10,10,20,10,10,10,10,10,180,170,50,20,20,20,20,10,10,10,10,10,10,10,30,30,20,20,20,10,10,10,10,10,10,10,90,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,70,70,70,70,10,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,10,10,10,10,10,10,10,10,10,10,10,10,10,10,20,20,10,10,10,10,10,20,20,20,20,20,10,40,40,10,10,10,10,10,30,30,30,30,30,30,10,10,6190,6170,6170,6070,4460,10,50,440,540,20,10,10,10,980,10,50,480,540,50,210,30,30,60,180,10,210,20,20,20,100,20,20,10,10,10,10,10,10,10,10,10,40,10,10,10,10,10,10,10,20,20,20,20,20,20,20,20,10,10,10,10,10,170,160,70,30,10,40,10,170,90,90,70,20,10,30,30,30,30,10,10,10,10,10,10,10,10,80,10,10,70,60,10,10,20,20,20,10,80,10,10,10,10,10,20,20,20,20,20,20,20,20,20,20,20,20,50,50,50,50,50,50,50,10,10,10,60,60,60,60,60,60,60,40,40,30,30,30,30,30,30,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],config:{unit:"short"}},{name:"label",values:["total","test/pkg/agent.(*Target).start.func1","test/pkg/agent.(*Target).scrape","test/pkg/distributor.(*Distributor).Push","compress/gzip.(*Writer).Write","compress/flate.(*compressor).write","compress/flate.(*compressor).deflate","compress/flate.(*compressor).writeBlock","compress/flate.(*huffmanBitWriter).writeBlock","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanEncoder).generate","compress/flate.(*huffmanEncoder).bitCounts","runtime.memmove","compress/flate.(*huffmanEncoder).assignEncodingAndSize","sort.Sort","sort.quickSort","sort.quickSort","sort.quickSort","sort.insertionSort","compress/flate.(*byFreq).sort","sort.Sort","sort.quickSort","sort.doPivot","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","compress/flate.offsetCode","compress/flate.(*huffmanBitWriter).dynamicSize","compress/flate.(*compressor).findMatch","compress/flate.matchLen","compress/flate.hash4","compress/flate.NewWriter","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.heapBitsSetType","runtime.heapBitsSetTypeGCProg","runtime.runGCProg","compress/flate.(*compressor).initDeflate","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.pageIndexOf","test/pkg/pprof.OpenRaw","test/pkg/gen/google/v1.(*Profile).UnmarshalVT","test/pkg/gen/google/v1.(*Sample).UnmarshalVT","runtime.makeslice","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).uncacheSpan","runtime.(*spanSet).push","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.getMCache","runtime.nextFreeFast","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.growslice","test/pkg/gen/google/v1.(*Location).UnmarshalVT","runtime.newobject","runtime.mallocgc","runtime.heapBitsForAddr","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*mheap).allocMSpanLocked","runtime.(*fixalloc).alloc","runtime.heapBitsSetType","runtime.nextFreeFast","runtime.getMCache","runtime.growslice","runtime.mallocgc","runtime.growslice","runtime.mallocgc","runtime.heapBitsSetType","runtime.memclrNoHeapPointers","runtime.memmove","runtime.newobject","runtime.mallocgc","runtime.heapBitsSetType","runtime.memclrNoHeapPointers","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).uncacheSpan","runtime.(*spanSet).push","runtime.(*headTailIndex).incTail","compress/gzip.(*Writer).Close","compress/flate.(*compressor).close","compress/flate.(*compressor).deflate","compress/flate.(*compressor).writeBlock","compress/flate.(*huffmanBitWriter).writeBlock","compress/flate.offsetCode","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanEncoder).generate","compress/flate.(*huffmanEncoder).bitCounts","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","compress/flate.(*compressor).findMatch","test/pkg/pprof.(*Profile).Normalize","sort.Sort","sort.quickSort","sort.doPivot","test/pkg/pprof.(*sortedSample).Less","test/pkg/pprof.(*sortedSample).Swap","sort.quickSort","sort.quickSort","sort.quickSort","sort.quickSort","sort.quickSort","sort.insertionSort","test/pkg/pprof.(*sortedSample).Less","sort.doPivot","sort.insertionSort","test/pkg/pprof.(*sortedSample).Swap","sort.doPivot","test/pkg/pprof.(*sortedSample).Less","test/pkg/pprof.(*sortedSample).Swap","runtime.gcWriteBarrierR8","runtime.gcWriteBarrier","runtime.wbBufFlush","runtime.systemstack","runtime.wbBufFlush.func1","runtime.wbBufFlush1","runtime.findObject","sort.doPivot","test/pkg/pprof.(*sortedSample).Less","test/pkg/pprof.(*Profile).clearSampleReferences","test/pkg/slices.RemoveInPlace[...]","test/pkg/pprof.(*Profile).clearSampleReferences.func1","runtime.growslice","runtime.memmove","runtime.memmove","test/pkg/pprof.StacktracesHasher.Hashes","github.com/cespare/xxhash/v2.round","github.com/cespare/xxhash/v2.(*Digest).Sum64","github.com/cespare/xxhash/v2.(*Digest).Write","github.com/cespare/xxhash/v2.u64","github.com/samber/lo.Uniq[...]","runtime.mapaccess2_fast64","runtime.memhash64","runtime.bucketMask","test/pkg/slices.RemoveInPlace[...]","test/pkg/pprof.(*Profile).Normalize.func1","test/pkg/slices.RemoveInPlace[...]","test/pkg/pprof.(*Profile).Normalize.func1.1","test/pkg/gen/google/v1.(*Profile).MarshalToVT","test/pkg/gen/google/v1.(*Profile).MarshalToSizedBufferVT","test/pkg/gen/google/v1.(*Sample).MarshalToSizedBufferVT","test/pkg/gen/google/v1.(*Profile).SizeVT","test/pkg/gen/google/v1.(*Sample).SizeVT","test/pkg/gen/google/v1.encodeVarint","test/pkg/gen/google/v1.(*Profile).SizeVT","test/pkg/gen/google/v1.(*Location).SizeVT","test/pkg/gen/google/v1.(*Sample).SizeVT","io/ioutil.ReadAll","io.ReadAll","compress/gzip.(*Reader).Read","compress/flate.(*decompressor).Read","runtime.memmove","compress/flate.(*dictDecoder).tryWriteCopy","runtime.memmove","compress/flate.(*decompressor).huffmanBlock","compress/flate.(*dictDecoder).writeCopy","runtime.memmove","compress/flate.(*decompressor).huffSym","bytes.(*Reader).ReadByte","compress/flate.(*decompressor).moreBits","compress/flate.(*decompressor).nextBlock","compress/flate.(*decompressor).huffmanBlock","compress/flate.(*decompressor).moreBits","net/http.(*conn).serve","net/http.serverHandler.ServeHTTP","net/http.HandlerFunc.ServeHTTP","test/pkg/util.glob..func1.1","golang.org/x/net/http2/h2c.h2cHandler.ServeHTTP","net/http.HandlerFunc.ServeHTTP","test/pkg/create.(*create).initServer.func2.1","net/http.HandlerFunc.ServeHTTP","github.com/opentracing-contrib/go-stdlib/nethttp.MiddlewareFunc.func5","net/http.HandlerFunc.ServeHTTP","github.com/weaveworks/common/middleware.Log.Wrap.func1","net/http.HandlerFunc.ServeHTTP","github.com/weaveworks/common/middleware.Instrument.Wrap.func1","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics","github.com/weaveworks/common/middleware.Instrument.Wrap.func1.2","github.com/gorilla/mux.(*Router).ServeHTTP","github.com/bufbuild/connect-go.(*Handler).ServeHTTP","github.com/bufbuild/connect-go.NewUnaryHandler[...].func1","github.com/bufbuild/connect-go.NewUnaryHandler[...].func1.1","test/pkg/ingester.(*Ingester).Push","io.ReadAll","github.com/klauspost/compress/gzip.(*Reader).Read","github.com/klauspost/compress/flate.(*decompressor).Read","github.com/klauspost/compress/flate.(*dictDecoder).tryWriteCopy","github.com/klauspost/compress/flate.(*dictDecoder).writeByte","github.com/klauspost/compress/flate.(*decompressor).huffmanBytesReader","github.com/klauspost/compress/flate.(*dictDecoder).writeCopy","runtime.memmove","github.com/klauspost/compress/flate.(*decompressor).nextBlock","github.com/klauspost/compress/flate.(*decompressor).huffmanBytesReader","runtime.growslice","runtime.memmove","runtime.mallocgc","runtime.(*mcache).allocLarge","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*pageAlloc).alloc","runtime.(*pageAlloc).allocRange","runtime.(*pageAlloc).update","runtime.(*pallocBits).summarize","test/pkg/create.(*Head).Ingest","test/pkg/create.(*Head).convertSamples","test/pkg/create.(*deduplicatingSlice[...]).ingest","test/pkg/create.(*stacktracesHelper).rewrite","test/pkg/create.idConversionTable.rewriteUint64","runtime.mapaccess2_fast64","runtime.memhash64","runtime.add","test/pkg/create.(*stacktracesHelper).key","github.com/cespare/xxhash/v2.(*Digest).Write","runtime.memmove","github.com/cespare/xxhash/v2.round","runtime.mapaccess2_fast64","runtime.mapassign_fast64","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.profilealloc","runtime.mProf_Malloc","runtime.callers","runtime.systemstack","runtime.callers.func1","runtime.gentraceback","runtime.findfunc","runtime.(*hmap).newoverflow","runtime.growslice","runtime.releasem","runtime.growWork_fast64","runtime.evacuate_fast64","encoding/binary.littleEndian.PutUint64","runtime.newobject","runtime.acquirem","runtime.mallocgc","runtime.heapBitsSetType","test/pkg/create.(*labelCache).rewriteLabels","runtime.mapaccess1_fast64","test/pkg/create.(*deduplicatingSlice[...]).ingest","runtime.mapaccess2_faststr","aeshashbody","memeqbody","runtime.mapassign_fast64","runtime.(*hmap).newoverflow","runtime.growslice","runtime.nextFreeFast","runtime.growWork_fast64","runtime.evacuate_fast64","runtime.mapaccess2","memeqbody","runtime.memhash_varlen","aeshashbody","runtime.evacuated","test/pkg/create.(*locationsHelper).key","github.com/cespare/xxhash/v2.(*Digest).Sum64","github.com/cespare/xxhash/v2.(*Digest).Write","runtime.bucketShift","test/pkg/create.(*stringsHelper).addToRewriter","encoding/binary.littleEndian.PutUint64","runtime.add","test/pkg/create.(*locationsHelper).rewrite","test/pkg/create.idConversionTable.rewriteUint64","runtime.mapaccess2_fast64","github.com/prometheus/client_golang/prometheus.(*CounterVec).WithLabelValues","github.com/prometheus/client_golang/prometheus.(*MetricVec).GetMetricWithLabelValues","github.com/prometheus/client_golang/prometheus.(*MetricVec).hashLabelValues","github.com/prometheus/client_golang/prometheus.hashAdd","test/pkg/create.(*deltaProfiles).computeDelta","test/pkg/create.deltaSamples","runtime.mapassign_fast64","runtime.growWork_fast64","runtime.evacuate_fast64","runtime.typedmemmove","runtime.bulkBarrierPreWrite","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.heapBitsSetType","runtime.mapaccess2_fast64","test/pkg/create.copySlice[...]","runtime.mallocgc","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*mheap).allocMSpanLocked","runtime.(*fixalloc).alloc","test/pkg/gen/google/v1.(*Profile).UnmarshalVT","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.add1","runtime.heapBitsForAddr","runtime.heapBitsSetType","test/pkg/gen/google/v1.(*Location).UnmarshalVT","runtime.growslice","runtime.mallocgc","runtime.heapBitsSetType","runtime.nextFreeFast","runtime.newobject","runtime.getMCache","runtime.mallocgc","runtime.roundupsize","test/pkg/gen/google/v1.(*Sample).UnmarshalVT","runtime.makeslice","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.acquirem","runtime.growslice","runtime.mallocgc","runtime.profilealloc","runtime.mProf_Malloc","runtime.callers","runtime.systemstack","runtime.callers.func1","runtime.gentraceback","runtime.pcdatavalue","runtime.pcvalue","runtime.step","runtime.memclrNoHeapPointers","github.com/go-kit/log.(*context).Log","github.com/go-kit/log.bindValues","github.com/go-kit/log.Caller.func1","runtime.Caller","runtime.(*Frames).Next","runtime.funcline1","runtime.pcvalue","runtime.readvarint","test/pkg/gen/google/v1.(*Profile).ReturnToVTPool","test/pkg/gen/google/v1.(*Profile).ResetVT","github.com/bufbuild/connect-go.(*errorTranslatingSender).Send","github.com/bufbuild/connect-go.(*connectUnaryHandlerSender).Send","github.com/bufbuild/connect-go.(*connectUnaryMarshaler).Marshal","github.com/bufbuild/connect-go.(*compressionPool).Compress","github.com/bufbuild/connect-go.(*compressionPool).putCompressor","compress/gzip.(*Writer).Close","compress/gzip.(*Writer).Write","compress/flate.NewWriter","runtime.newobject","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.spanOf","compress/gzip.(*Writer).Reset","compress/gzip.(*Writer).init","compress/flate.(*Writer).Reset","compress/flate.(*compressor).reset","runtime.memclrNoHeapPointers","github.com/bufbuild/connect-go.(*compressionPool).getCompressor","compress/gzip.(*Writer).Reset","compress/gzip.(*Writer).init","compress/flate.(*Writer).Reset","compress/flate.(*compressor).reset","runtime.memclrNoHeapPointers","github.com/bufbuild/connect-go.receiveUnaryRequest[...]","github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryHandlerReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryUnmarshaler).UnmarshalFunc","bytes.(*Buffer).ReadFrom","github.com/weaveworks/common/middleware.(*reqBody).Read","net/http.(*body).Read","net/http.(*body).readLocked","net/http/internal.(*chunkedReader).Read","bufio.(*Reader).Read","net/http.(*connReader).Read","net.(*conn).Read","net.(*netFD).Read","syscall.Read","syscall.read","syscall.Syscall","net/http.(*ServeMux).ServeHTTP","net/http.HandlerFunc.ServeHTTP","net/http/pprof.Index","net/http/pprof.handler.ServeHTTP","runtime/pprof.(*Profile).WriteTo","runtime/pprof.writeAlloc","runtime/pprof.writeHeapInternal","runtime/pprof.writeHeapProto","runtime/pprof.(*profileBuilder).pbSample","runtime/pprof.(*profileBuilder).flush","compress/gzip.(*Writer).Write","compress/flate.(*compressor).write","compress/flate.(*compressor).encSpeed","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","compress/flate.token.length","compress/flate.(*deflateFast).encode","compress/flate.NewWriter","compress/flate.(*compressor).init","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime/pprof.writeHeapProto.func1","runtime/pprof.(*profileBuilder).pbLabel","runtime.mapaccess2_faststr","runtime/pprof.(*protobuf).int64Opt","runtime/pprof.(*protobuf).endMessage","runtime.memmove","runtime/pprof.(*protobuf).startMessage","runtime/pprof.(*protobuf).uint64s","runtime.memmove","runtime/pprof.(*protobuf).int64s","runtime/pprof.(*profileBuilder).appendLocsForStack","runtime/pprof.(*profileBuilder).emitLocation","runtime/pprof.(*profileBuilder).flush","compress/gzip.(*Writer).Write","compress/flate.NewWriter","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.heapBitsSetType","runtime.heapBitsSetTypeGCProg","runtime.runGCProg","compress/flate.(*compressor).init","runtime.makeslice","runtime.mallocgc","runtime.memclrNoHeapPointersChunked","runtime.memclrNoHeapPointers","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.pageIndexOf","compress/flate.(*compressor).write","compress/flate.(*compressor).encSpeed","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).indexTokens","runtime.growslice","runtime.mallocgc","runtime.acquirem","runtime.mapassign_faststr","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.profilealloc","runtime.mProf_Malloc","runtime.callers","runtime.systemstack","runtime.callers.func1","runtime.gentraceback","runtime.pcdatavalue","runtime.pcvalue","runtime.step","runtime.mapaccess1_faststr","aeshashbody","runtime.mapassign_fast64","runtime.growWork_fast64","runtime.evacuate_fast64","runtime.memclrHasPointers","runtime.bulkBarrierPreWrite","runtime.wbBufFlush","runtime.systemstack","runtime.wbBufFlush.func1","runtime.wbBufFlush1","runtime.spanOf","runtime.memhash64","runtime/pprof.(*profileBuilder).pbLine","runtime/pprof.(*protobuf).int64Opt","runtime/pprof.(*protobuf).endMessage","runtime.memmove","runtime.duffcopy","runtime/pprof.(*protobuf).endMessage","runtime.memmove","runtime.duffzero","runtime/pprof.(*protobuf).int64Opt","runtime.CallersFrames","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.heapBitsSetType","runtime.memclrNoHeapPointers","runtime.heapBitsForAddr","runtime/pprof.allFrames","runtime.duffcopy","runtime.(*Frames).Next","runtime.funcline1","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.funcfile","runtime.findnull","indexbytebody","runtime.funcname","runtime.findnull","indexbytebody","runtime.findfunc","runtime.duffzero","runtime.(*Func).Entry","runtime.pcdatavalue1","runtime.pcvalue","runtime.step","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime.newobject","runtime.nextFreeFast","runtime.mallocgc","runtime.mapaccess2_fast64","runtime.memhash64","runtime/pprof.runtime_expandFinalInlineFrame","runtime.findfunc","runtime.pcdatavalue1","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime/pprof.(*profileBuilder).stringIndex","runtime.growslice","runtime.mallocgc","runtime.heapBitsSetType","runtime.memmove","runtime.mapassign_faststr","runtime.growWork_faststr","runtime.evacuate_faststr","aeshashbody","runtime.advanceEvacuationMark","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.heapBitsSetType","runtime.mapaccess2_faststr","aeshashbody","runtime/pprof.(*protobuf).uint64Opt","runtime.funcdata","runtime/pprof.(*profileBuilder).build","compress/gzip.(*Writer).Write","compress/flate.(*compressor).write","compress/flate.(*compressor).encSpeed","compress/flate.(*deflateFast).encode","compress/flate.(*deflateFast).matchLen","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeCode","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","compress/flate.(*huffmanBitWriter).writeBits","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanEncoder).generate","compress/flate.(*huffmanEncoder).bitCounts","compress/flate.(*huffmanBitWriter).writeDynamicHeader","compress/flate.(*huffmanBitWriter).writeCode","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","compress/flate.hash","compress/gzip.(*Writer).Close","compress/flate.(*compressor).close","compress/flate.(*compressor).encSpeed","compress/flate.(*huffmanBitWriter).writeBlockDynamic","compress/flate.(*huffmanBitWriter).indexTokens","compress/flate.(*huffmanBitWriter).writeTokens","compress/flate.(*huffmanBitWriter).writeBits","github.com/felixge/httpsnoop.(*rw).Write","github.com/felixge/httpsnoop.(*Metrics).CaptureMetrics.func2.1","github.com/weaveworks/common/middleware.(*badResponseLoggingWriter).Write","github.com/opentracing-contrib/go-stdlib/nethttp.(*statusCodeTracker).Write","net/http.(*response).Write","net/http.(*response).write","bufio.(*Writer).Write","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","fmt.Fprintf","fmt.(*pp).doPrintf","fmt.(*pp).printArg","fmt.(*pp).fmtInteger","fmt.(*fmt).fmtInteger","compress/flate.(*huffmanBitWriter).writeCode","compress/flate.token.offset","compress/flate.hash","compress/flate.(*deflateFast).encode","compress/flate.load64","runtime.FuncForPC","runtime.newobject","runtime.mallocgc","runtime.heapBitsSetType","runtime.findfunc","runtime.pcdatavalue1","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.funcline1","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.funcInfo.entry","runtime.(*moduledata).textAddr","runtime/pprof.newProfileBuilder","runtime/pprof.(*profileBuilder).readMapping","os.ReadFile","runtime.growslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.duffcopy","runtime.(*Func).Name","runtime.funcname","runtime.findnull","indexbytebody","runtime/pprof.scaleHeapSample","math.archExp","runtime.(*MemProfileRecord).Stack","runtime.duffcopy","runtime/pprof.writeGoroutine","runtime/pprof.writeRuntimeProfile","runtime/pprof.runtime_goroutineProfileWithLabels","runtime.goroutineProfileWithLabels","runtime.forEachGRace","runtime.goroutineProfileWithLabels.func4","runtime.systemstack","runtime.goroutineProfileWithLabels.func4.1","runtime.saveg","runtime.gentraceback","runtime.pcdatavalue","runtime.funcInfo.entry","runtime.pcvalue","runtime.step","runtime.readvarint","runtime.funcspdelta","runtime.pcvalue","runtime.readvarint","runtime.step","runtime.findfunc","runtime.goroutineProfileWithLabels.func1","runtime.isSystemGoroutine","runtime.funcname","runtime.findnull","runtime.goroutineProfileWithLabels.func2","runtime.goroutineProfileWithLabels.func1","runtime.isSystemGoroutine","runtime.startTheWorld","runtime.systemstack","runtime.startTheWorld.func1","runtime.startTheWorldWithSema","runtime.wakep","runtime.startm","runtime.notewakeup","runtime.futexwakeup","runtime.futex","runtime.systemstack","runtime.goroutineProfileWithLabels.func3","runtime.saveg","runtime.gentraceback","runtime/pprof.printCountProfile","runtime/pprof.printCountProfile.func1","fmt.Fprintf","fmt.(*pp).doPrintf","fmt.(*pp).printArg","fmt.(*pp).fmtInteger","fmt.(*fmt).fmtInteger","bytes.(*Buffer).Write","runtime.memmove","runtime.slicebytetostring","runtime.nextFreeFast","runtime.mapassign_faststr","runtime.hashGrow","runtime.makeBucketArray","runtime.newarray","runtime.nextFreeFast","aeshashbody","runtime/pprof.(*profileBuilder).appendLocsForStack","runtime/pprof.(*profileBuilder).stringIndex","runtime.overLoadFactor","runtime/pprof.(*profileBuilder).emitLocation","runtime/pprof.(*profileBuilder).pbLine","runtime/pprof.(*profileBuilder).flush","compress/gzip.(*Writer).Write","compress/flate.NewWriter","compress/flate.(*compressor).init","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.heapBits.bits","runtime.scanobject","runtime.greyobject","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime/pprof.allFrames","runtime.newobject","runtime.nextFreeFast","runtime.(*Frames).Next","runtime.funcline1","runtime.pcvalue","runtime/pprof.newProfileBuilder","runtime/pprof.(*profileBuilder).readMapping","runtime/pprof.parseProcSelfMaps","runtime/pprof.elfBuildID","os.OpenFile","syscall.Open","syscall.openat","syscall.Syscall6","runtime/pprof.parseProcSelfMaps.func1","bytes.Cut","runtime.slicebytetostring","runtime.nextFreeFast","runtime/pprof.(*profileBuilder).addMapping","runtime.growslice","os.Open","os.OpenFile","syscall.Open","syscall.openat","syscall.Syscall6","os.openFileNolog","os.newFile","runtime.SetFinalizer","runtime.systemstack","runtime.SetFinalizer.func2","runtime.addfinalizer","runtime.addspecial","os.ReadFile","runtime.growslice","runtime.mallocgc","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.(*mheap).alloc","runtime.systemstack","runtime.(*mheap).alloc.func1","runtime.(*mheap).allocSpan","runtime.(*pageAlloc).allocToCache","os.(*File).Stat","internal/poll.(*FD).Fstat","syscall.Fstat","syscall.Syscall","os.(*File).Read","syscall.Read","syscall.read","syscall.Syscall","runtime.newobject","sort.Sort","sort.quickSort","sort.doPivot","runtime/pprof.(*keysByCount).Less","cmpbody","sort.quickSort","sort.insertionSort","runtime/pprof.(*keysByCount).Less","runtime.mapaccess1_faststr","runtime/pprof.(*profileBuilder).pbSample","runtime/pprof.(*protobuf).uint64s","runtime.newobject","github.com/prometheus/client_golang/prometheus.(*GaugeVec).WithLabelValues","runtime.assertI2I","runtime.getitab","runtime.(*itabTableType).find","github.com/weaveworks/common/middleware.Instrument.getRouteName","github.com/weaveworks/common/middleware.getRouteName","github.com/weaveworks/common/middleware.MakeLabelValue","strings.Trim","github.com/gorilla/mux.(*Router).Match","github.com/gorilla/mux.(*Route).Match","github.com/gorilla/mux.(*routeRegexp).Match","regexp.(*Regexp).doExecute","regexp.(*Regexp).backtrack","regexp.(*Regexp).tryBacktrack","github.com/weaveworks/common/logging.gokit.Debugf","github.com/go-kit/log.(*context).Log","github.com/go-kit/log.bindValues","github.com/go-kit/log.Caller.func1","runtime.Caller","runtime.callers","github.com/uber/jaeger-client-go.(*Tracer).Extract","github.com/uber/jaeger-client-go.(*TextMapPropagator).Extract","runtime.assertE2I2","runtime.getitab","runtime.(*itabTableType).find","runtime.newobject","runtime.nextFreeFast","github.com/weaveworks/common/middleware.Tracer.Wrap.func1","github.com/weaveworks/common/middleware.getRouteName","github.com/gorilla/mux.(*Router).Match","github.com/gorilla/mux.(*Route).Match","github.com/gorilla/mux.(*routeRegexp).Match","regexp.(*Regexp).doExecute","net/http.(*response).finishRequest","bufio.(*Writer).Flush","net/http.(*chunkWriter).Write","net/http.(*chunkWriter).writeHeader","net/http.Header.writeSubset","net/http.Header.sortedKeyValues","sync.(*Pool).Get","net/http.checkConnErrorWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","net/http.(*conn).readRequest","runtime.mapiterinit","runtime.gcBgMarkWorker","runtime.systemstack","runtime.gcBgMarkWorker.func2","runtime.gcDrain","runtime.scanobject","runtime.(*gcBits).bytep","runtime.(*mspan).objIndex","runtime.pageIndexOf","runtime.greyobject","runtime.(*gcWork).put","runtime.getempty","runtime.putfull","runtime.(*lfstack).push","runtime.findObject","runtime.spanOf","runtime.(*mspan).markBitsForIndex","runtime.spanOf","runtime.markBits.isMarked","runtime.arenaIndex","runtime.heapBitsForAddr","runtime.(*gcWork).tryGet","runtime.trygetfull","runtime.spanOfUnchecked","runtime.heapBits.next","runtime.gcFlushBgCredit","runtime.heapBits.bits","runtime.(*gcWork).balance","runtime.handoff","runtime.getempty","runtime.(*gcWork).tryGetFast","runtime.gcMarkDone","runtime.gcMarkTermination","runtime.mProf_Flush","runtime.mProf_FlushLocked","runtime.(*bucket).mp","runtime.systemstack","runtime.gcMarkTermination.func4","runtime.forEachP","runtime.gcMarkTermination.func4.1","runtime.(*mcache).prepareForSweep","runtime.(*mcache).releaseAll","net/http.(*persistConn).readLoop","runtime.selectgo","runtime.send","runtime.goready","runtime.systemstack","runtime.goready.func1","runtime.ready","runtime.runqput","bufio.(*Reader).Peek","bufio.(*Reader).fill","net/http.(*persistConn).Read","net.(*conn).Read","net.(*netFD).Read","syscall.Read","syscall.read","syscall.Syscall","net/http.(*persistConn).readResponse","github.com/opentracing-contrib/go-stdlib/nethttp.(*Tracer).gotFirstResponseByte","runtime.newobject","runtime.mallocgc","runtime.memclrNoHeapPointers","runtime.bgsweep","runtime.sweepone","runtime.(*sweepLocker).tryAcquire","runtime.(*sweepLocked).sweep","runtime.(*gcBitsArena).tryAlloc","runtime.spanClass.sizeclass","runtime/internal/atomic.(*Uint32).CompareAndSwap","runtime.mcall","runtime.park_m","runtime.schedule","runtime.findrunnable","runtime.netpoll","runtime.epollwait","runtime.stopm","runtime.notesleep","runtime.futexsleep","runtime.futex","runtime.(*randomOrder).start","runtime.checkTimers","runtime.runtimer","runtime.dodeltimer0","runtime.gcstopm","runtime.lock2","runtime.procyield","runtime.(*lfstack).pop","runtime.gosched_m","runtime.lock","runtime.lock2","runtime.goschedImpl","runtime.schedule","runtime.execute","runtime.casgstatus","runtime.checkTimers","runtime.findrunnable","runtime.checkTimers","runtime.casgstatus","net/http.(*persistConn).writeLoop","net/http.(*Request).write","net/http.newTransferWriter","runtime.convI2I","runtime.getitab","runtime.(*itabTableType).find","runtime.chansend1","runtime.chansend","runtime.send","runtime.goready","runtime.systemstack","runtime.goready.func1","runtime.ready","runtime.wakep","runtime.startm","runtime.notewakeup","runtime.futexwakeup","runtime.futex","bufio.(*Writer).Flush","net/http.persistConnWriter.Write","net.(*conn).Write","net.(*netFD).Write","internal/poll.(*FD).Write","syscall.write","syscall.Syscall","runtime.exitsyscall","runtime.exitsyscallfast","runtime.exitsyscallfast_reacquired","test/pkg/distributor.(*Distributor).Push.func1","test/pkg/distributor.(*Distributor).sendProfiles","test/pkg/distributor.(*Distributor).sendProfilesErr","test/pkg/gen/ingester/v1/ingesterv1connect.(*ingesterServiceClient).Push","github.com/bufbuild/connect-go.(*Client[...]).CallUnary","github.com/bufbuild/connect-go.NewClient[...].func2","github.com/bufbuild/connect-go.NewClient[...].func1","github.com/bufbuild/connect-go.receiveUnaryResponse[...]","github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Receive","github.com/bufbuild/connect-go.(*connectUnaryUnmarshaler).UnmarshalFunc","github.com/bufbuild/connect-go.(*compressionPool).Decompress","github.com/bufbuild/connect-go.(*compressionPool).getDecompressor","compress/gzip.(*Reader).Reset","compress/gzip.(*Reader).readHeader","compress/flate.(*dictDecoder).init","runtime.makeslice","runtime.mallocgc","runtime.(*mcache).nextFree","runtime.(*mcache).refill","runtime.(*mcentral).cacheSpan","runtime.(*mcentral).grow","runtime.heapBits.initSpan","compress/flate.(*decompressor).Reset","runtime.newstack","runtime.copystack","runtime.gentraceback","compress/flate.NewReader","compress/flate.fixedHuffmanDecoderInit","runtime.newstack","runtime.copystack","runtime.gentraceback","runtime.funcspdelta","runtime.pcvalue","runtime.step","github.com/bufbuild/connect-go.(*errorTranslatingSender).Send","github.com/bufbuild/connect-go.(*connectClientSender).Send","github.com/bufbuild/connect-go.(*connectUnaryMarshaler).Marshal","github.com/bufbuild/connect-go.(*connectUnaryMarshaler).write","github.com/bufbuild/connect-go.(*duplexHTTPCall).Write","io.(*pipe).write","runtime.chanrecv1","runtime.chanrecv","runtime.recv","runtime.gcWriteBarrierR8","runtime.gcWriteBarrier","runtime.wbBufFlush","runtime.systemstack","runtime.wbBufFlush.func1","runtime.wbBufFlush1","runtime.findObject","github.com/bufbuild/connect-go.(*errorTranslatingReceiver).Close","github.com/bufbuild/connect-go.(*connectUnaryClientReceiver).Close","github.com/bufbuild/connect-go.(*duplexHTTPCall).CloseRead","github.com/opentracing-contrib/go-stdlib/nethttp.closeTracker.Close","runtime.newobject","runtime.mallocgc","runtime.heapBitsSetType","runtime/pprof.profileWriter","runtime/pprof.(*profileBuilder).addCPUData","runtime/pprof.(*profMap).lookup","runtime.makeslice","runtime.mallocgc","runtime.gcAssistAlloc","runtime.systemstack","runtime.gcAssistAlloc.func1","runtime.gcAssistAlloc1","runtime.gcDrainN","runtime.scanobject","runtime.pageIndexOf","net/http.(*connReader).backgroundRead","net.(*conn).Read","net.(*netFD).Read","internal/poll.(*FD).Read"]}]};var Ge=r(58193);class Qe extends Ge.v6{toDataQuery(e){return{refId:"TestDataDataSource-QueryVariable",stringInput:e.query,scenarioId:"variables-query",csvWave:void 0}}}class Ze extends Pe.CK{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,Re.J)();var r,n,a;super(e),a=void 0,(n="scenariosCache")in(r=this)?Object.defineProperty(r,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[n]=a,this.templateSrv=t,this.variables=new Qe}query(e){const t=[],r=[];for(const n of e.targets)if(!n.hide)switch(this.resolveTemplateVariables(n,e.scopedVars),n.scenarioId){case"live":r.push(Ye(n,e));break;case"streaming_client":r.push(ge(n,e));break;case"grafana_api":r.push(Ke(n,e));break;case"annotations":r.push(this.annotationDataTopicTest(n,e));break;case"variables-query":r.push(this.variablesQuery(n,e));break;case"node_graph":r.push(this.nodesQuery(n,e));break;case"flame_graph":r.push(this.flameGraphQuery());break;case"raw_frame":r.push(this.rawFrameQuery(n,e));break;case"server_error_500":const a=this.serverErrorQuery(n,e);a?r.push(a):t.push(n);break;case"manual_entry":{let e="Time,Value\n";if(n.points)for(const t of n.points)e+=`${t[1]},${t[0]}\n`;n.scenarioId="csv_content",n.csvContent=e}default:t.push(n)}if(t.length){const n=Object.assign({},e,{targets:t});r.push(super.query(n))}return 0===r.length?(0,Te.of)({data:[]}):(0,We.T)(...r)}resolveTemplateVariables(e,t){e.labels&&(e.labels=this.templateSrv.replace(e.labels,t)),e.alias&&(e.alias=this.templateSrv.replace(e.alias,t)),e.scenarioId&&(e.scenarioId=this.templateSrv.replace(e.scenarioId,t)),e.stringInput&&(e.stringInput=this.templateSrv.replace(e.stringInput,t)),e.csvContent&&(e.csvContent=this.templateSrv.replace(e.csvContent,t)),e.rawFrameContent&&(e.rawFrameContent=this.templateSrv.replace(e.rawFrameContent,t))}annotationDataTopicTest(e,t){const r=this.buildFakeAnnotationEvents(t.range,50),n=new Ie.i(r);return n.meta={dataTopic:Be.w5.Annotations},(0,Te.of)({key:e.refId,data:[n]}).pipe((0,Fe.g)(100))}buildFakeAnnotationEvents(e,t){let r=e.from.valueOf();const n=[],a=(e.to.valueOf()-r)/t;for(let e=0;e<t;e++)n.push({time:r,text:'This is the text, <a href="https://grafana.com">Grafana.com</a>',tags:["text","server"]}),r+=a;return n}annotationQuery(e){return Promise.resolve(this.buildFakeAnnotationEvents(e.range,10))}getQueryDisplayText(e){var t;const r=null!==(t=e.scenarioId)&&void 0!==t?t:"Default scenario";return e.alias?r+" as "+e.alias:r}testDatasource(){return Promise.resolve({status:"success",message:"Data source is working"})}getScenarios(){return this.scenariosCache||(this.scenariosCache=this.getResource("scenarios")),this.scenariosCache}variablesQuery(e,t){var r;const n=null!==(r=e.stringInput)&&void 0!==r?r:"",a=this.templateSrv.replace(n,(0,qe._6)({query:n,wildcardChar:"*",options:t.scopedVars})),i=(0,Oe.H)(a).map((e=>({value:e.name,text:e.name}))),s=new Ie.i(i);return(0,Te.of)({data:[s]}).pipe((0,Fe.g)(100))}nodesQuery(e,t){var r,n;const a=(null===(r=e.nodes)||void 0===r?void 0:r.type)||"random";let i;switch(a){case"random":i=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;const t=[],r={id:"0",title:"root",subTitle:"client",success:1,error:0,stat1:Math.random(),stat2:Math.random(),edges:[]};t.push(r);const n=[r],a=3;for(let r=1;r<e;r++){const e=Ue(r);t.push(e);const i=Math.floor(Math.random()*Math.floor(n.length-1)),s=n[i];s.edges.push(e.id),s.edges.length>=a&&n.splice(i,1),n.push(e)}const i=Math.floor(e/2);for(let e=0;e<=i;e++){const e=Math.floor(Math.random()*Math.floor(t.length-1));e!==Math.floor(Math.random()*Math.floor(t.length-1))&&"0"!==t[e].id&&"0"!==t[e].id&&t[e].edges.push(t[e].id)}const s={[De.z.id]:{values:new ze.G,type:ie.fS.string,config:{links:[{title:"test data link",url:"",internal:{query:{scenarioId:"logs",alias:"from service graph",stringInput:"tes"},datasourceUid:"gdev-testdata",datasourceName:"gdev-testdata"}}]}},[De.z.title]:{values:new ze.G,type:ie.fS.string},[De.z.subTitle]:{values:new ze.G,type:ie.fS.string},[De.z.mainStat]:{values:new ze.G,type:ie.fS.number,config:{displayName:"Transactions per second"}},[De.z.secondaryStat]:{values:new ze.G,type:ie.fS.number,config:{displayName:"Average duration"}},[De.z.arc+"success"]:{values:new ze.G,type:ie.fS.number,config:{color:{fixedColor:"green",mode:He.S.Fixed},displayName:"Success"}},[De.z.arc+"errors"]:{values:new ze.G,type:ie.fS.number,config:{color:{fixedColor:"red",mode:He.S.Fixed},displayName:"Errors"}}},o=new Le.v({name:"nodes",fields:Object.keys(s).map((e=>Object.assign({},s[e],{name:e}))),meta:{preferredVisualisationType:"nodeGraph"}}),l={[De.z.id]:{values:new ze.G,type:ie.fS.string},[De.z.source]:{values:new ze.G,type:ie.fS.string},[De.z.target]:{values:new ze.G,type:ie.fS.string}},u=new Le.v({name:"edges",fields:Object.keys(l).map((e=>Object.assign({},l[e],{name:e}))),meta:{preferredVisualisationType:"nodeGraph"}}),c=new Set;for(const e of t){s.id.values.add(e.id),s.title.values.add(e.title),s[De.z.subTitle].values.add(e.subTitle),s[De.z.mainStat].values.add(e.stat1),s[De.z.secondaryStat].values.add(e.stat2),s.arc__success.values.add(e.success),s.arc__errors.values.add(e.error);for(const t of e.edges){const r=`${e.id}--${t}`;c.has(r)||(c.add(r),l.id.values.add(`${e.id}--${t}`),l.source.values.add(e.id),l.target.values.add(t))}}return[o,u]}(null===(n=e.nodes)||void 0===n?void 0:n.count);break;case"response":i=[new Le.v(Ve),new Le.v(Ee)];break;default:throw new Error(`Unknown node_graph sub type ${a}`)}return(0,Te.of)({data:i}).pipe((0,Fe.g)(100))}flameGraphQuery(){return(0,Te.of)({data:[$e]}).pipe((0,Fe.g)(100))}rawFrameQuery(e,t){try{var r;const t=JSON.parse(null!==(r=e.rawFrameContent)&&void 0!==r?r:"[]").map((t=>{const r=(0,H.g0)(t);return r.refId=e.refId,r}));return(0,Te.of)({data:t,state:se.Gu.Done}).pipe((0,Fe.g)(100))}catch(e){return(0,Te.of)({data:[],error:e instanceof Error?e:new Error("Unkown error")}).pipe((0,Fe.g)(100))}}serverErrorQuery(e,t){var r;const{errorType:n}=e;if("server_panic"===n)return null;if(""===(null!==(r=e.stringInput)&&void 0!==r?r:"")){if("frontend_exception"===n)throw new Error("Scenario threw an exception in the frontend because the input was empty.");return(0,je._)((()=>new Error("Scenario returned an error because the input was empty.")))}return null}}function Ke(e,t){const r=`/api/${e.stringInput}`;return(0,_e.D)((0,Ne.i)().get(r).then((e=>{const t=new Ie.i(e);return{state:se.Gu.Done,data:[t]}})))}let Je=1e3;function Ye(e,t){if(!e.channel)throw new Error("Missing channel config");return(0,Me.gj)().getDataStream({addr:{scope:Ae.z.Plugin,namespace:"testdata",path:e.channel},key:"testStream."+Je++})}function Xe(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class et{constructor(){Xe(this,"annotation",void 0)}}Xe(et,"template","<h2>Annotation scenario</h2>");const tt=new a.hf(Ze).setConfigEditor(o).setQueryEditor((e=>{var t,r;let{query:n,datasource:a,onChange:o,onRunQuery:u}=e;n=Object.assign({},_,n);const{loading:h,value:b}=(0,l.Z)((async()=>{if("manual_entry"===n.scenarioId&&n.points){let e="Time,Value\n";for(const t of n.points)e+=`${t[1]},${t[0]}\n`;o({refId:n.refId,datasource:n.datasource,scenarioId:"csv_content",csvContent:e})}const e=await a.getScenarios(),t=["simulation"];return e.map((e=>Object.assign({},e,{hideAliasField:t.includes(e.id)})))}),[]),y=e=>{o(e),u()},w=(0,i.useMemo)((()=>null==b?void 0:b.find((e=>e.id===n.scenarioId))),[b,n]),x=null==w?void 0:w.id,T=null==w?void 0:w.description,F=e=>{const{name:t,value:r,type:a}=e.target;let i=r;"number"===a&&(i=Number(r)),"levelColumn"===t&&(i=e.target.checked),y(Object.assign({},n,{[t]:i}))},I=e=>t=>{const{name:r,value:a,type:i}=t.target;let s=a;"number"===i&&(s=Number(a)),y(Object.assign({},n,{[e]:Object.assign({},n[e],{[r]:s})}))},A=I("stream"),R=I("pulseWave"),q=(0,i.useMemo)((()=>(b||[]).map((e=>({label:e.name,value:e.id}))).sort(((e,t)=>e.label.localeCompare(t.label)))),[b]),O=(0,i.useMemo)((()=>{var e;return we.includes(null!==(e=n.scenarioId)&&void 0!==e?e:"")}),[n]);return h?null:(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(c.Z,{"aria-label":xe.scenarioSelectContainer,children:[(0,s.jsx)(m._,{labelWidth:14,label:"Scenario",children:(0,s.jsx)(p.Ph,{inputId:`test-data-scenario-select-${n.refId}`,options:q,value:q.find((e=>e.value===n.scenarioId)),onChange:e=>{const t=null==b?void 0:b.find((t=>t.id===e.value));if(!t)return;const r={scenarioId:e.value,refId:n.refId,alias:n.alias,datasource:n.datasource};switch(t.stringInput&&(r.stringInput=t.stringInput),t.id){case"grafana_api":r.stringInput="datasources";break;case"streaming_client":r.stream=fe;break;case"live":r.channel="random-2s-stream";break;case"simulation":r.sim={key:{type:"flight",tick:10}};break;case"predictable_pulse":r.pulseWave=W;break;case"predictable_csv_wave":r.csvWave=j;break;case"usa":r.usa={mode:te[0].value}}y(r)},width:32})}),(null==w?void 0:w.stringInput)&&(0,s.jsx)(m._,{label:"String Input",children:(0,s.jsx)(d.I,{width:32,id:`stringInput-${n.refId}`,name:"stringInput",placeholder:n.stringInput,value:n.stringInput,onChange:F})}),Boolean(!(null!=w&&w.hideAliasField))&&(0,s.jsx)(m._,{label:"Alias",labelWidth:14,children:(0,s.jsx)(d.I,{width:32,id:`alias-${n.refId}`,type:"text",placeholder:"optional",pattern:'[^<>&\\\\"]+',name:"alias",value:n.alias,onChange:F})}),O&&(0,s.jsx)(m._,{label:"Labels",labelWidth:14,tooltip:(0,s.jsxs)(s.Fragment,{children:["Set labels using a key=value syntax:",he||(he=(0,s.jsx)("br",{})),'{ key = "value", key2 = "value" }',be||(be=(0,s.jsx)("br",{})),'key="value", key2="value"',ve||(ve=(0,s.jsx)("br",{})),"key=value, key2=value",ye||(ye=(0,s.jsx)("br",{}))]}),children:(0,s.jsx)(d.I,{width:32,id:`labels-${n.refId}`,name:"labels",onChange:F,value:null===(t=n)||void 0===t?void 0:t.labels,placeholder:"key=value, key2=value2"})})]}),"random_walk"===x&&(0,s.jsx)(k,{onChange:F,query:n,ds:a}),"streaming_client"===x&&(0,s.jsx)(v,{onChange:A,query:n,ds:a}),"live"===x&&(0,s.jsx)(N,{onChange:y,query:n,ds:a}),"simulation"===x&&(0,s.jsx)(X,{onChange:y,query:n,ds:a}),"raw_frame"===x&&(0,s.jsx)(U,{onChange:y,query:n,ds:a}),"csv_file"===x&&(0,s.jsx)(C,{onChange:y,query:n,ds:a}),"csv_content"===x&&(0,s.jsx)(S,{onChange:y,query:n,ds:a}),"logs"===x&&(0,s.jsxs)(c.Z,{children:[(0,s.jsx)(m._,{label:"Lines",labelWidth:14,children:(0,s.jsx)(d.I,{type:"number",name:"lines",value:n.lines,width:32,onChange:F,placeholder:"10"})}),(0,s.jsx)(m._,{label:"Level",labelWidth:14,children:(0,s.jsx)(f.x,{onChange:F,name:"levelColumn",value:!!n.levelColumn})})]}),"usa"===x&&(0,s.jsx)(ee,{onChange:e=>{y(Object.assign({},n,{usa:e}))},query:null!==(r=n.usa)&&void 0!==r?r:{}}),"grafana_api"===x&&(0,s.jsx)(m._,{labelWidth:14,label:"Endpoint",children:(0,s.jsx)(p.Ph,{options:ke,onChange:e=>{let{value:t}=e;y(Object.assign({},n,{stringInput:t}))},width:32,value:ke.find((e=>e.value===n.stringInput))})}),"arrow"===x&&(0,s.jsx)(m._,{grow:!0,children:(0,s.jsx)(g.K,{name:"stringInput",value:n.stringInput,rows:10,placeholder:"Copy base64 text data from query result",onChange:F})}),"predictable_pulse"===x&&(0,s.jsx)(D,{onChange:R,query:n,ds:a}),"predictable_csv_wave"===x&&(0,s.jsx)(B,{onChange:e=>{y(Object.assign({},n,{csvWave:e}))},waves:n.csvWave}),"node_graph"===x&&(0,s.jsx)(M,{onChange:e=>o(Object.assign({},n,{nodes:e})),query:n}),"server_error_500"===x&&(0,s.jsx)(P,{onChange:y,query:n,ds:a}),T&&(0,s.jsx)("p",{children:T})]})})).setAnnotationQueryCtrl(et).addConfigPage({title:"Setup",icon:"list-ul",body:Ce,id:"setup"})}}]);
//# sourceMappingURL=testDataDSPlugin.719b04b2a874b953aab4.js.map