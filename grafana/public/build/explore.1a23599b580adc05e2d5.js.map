{"version":3,"file":"explore.1a23599b580adc05e2d5.js","mappings":"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","sources":["webpack://grafana/./public/app/core/utils/types.ts","webpack://grafana/./public/app/features/correlations/useCorrelations.ts","webpack://grafana/./public/app/features/dashboard/dashgrid/SeriesVisibilityConfigFactory.ts","webpack://grafana/./public/app/features/explore/ExploreActions.tsx","webpack://grafana/./.yarn/__virtual__/react-use-virtual-0c21d950b6/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useUpdate.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-0c21d950b6/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/misc/hookState.js","webpack://grafana/./.yarn/__virtual__/react-use-virtual-0c21d950b6/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useGetSet.js","webpack://grafana/./public/app/features/explore/ExploreGraph.tsx","webpack://grafana/./.yarn/__virtual__/react-use-virtual-0c21d950b6/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useCounter.js","webpack://grafana/./public/app/features/explore/exploreGraphStyleUtils.ts","webpack://grafana/./public/app/features/explore/ExploreGraphLabel.tsx","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/3/opt/drone/yarncache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/resizer.js","webpack://grafana/./.yarn/__virtual__/re-resizable-virtual-3cca0dab2b/3/opt/drone/yarncache/re-resizable-npm-6.9.9-2a772ae568-a2c8bfe866.zip/node_modules/re-resizable/lib/index.js","webpack://grafana/./public/app/features/explore/ExploreDrawer.tsx","webpack://grafana/./public/app/features/explore/ExploreQueryInspector.tsx","webpack://grafana/./public/app/features/explore/TimeSyncButton.tsx","webpack://grafana/./public/app/features/explore/ExploreTimeControls.tsx","webpack://grafana/./public/app/features/explore/LiveTailButton.tsx","webpack://grafana/./public/app/features/explore/useLiveTailControls.ts","webpack://grafana/./public/app/features/explore/ExploreToolbar.tsx","webpack://grafana/./public/app/features/explore/FlameGraphExploreContainer.tsx","webpack://grafana/./public/app/features/explore/ElapsedTime.tsx","webpack://grafana/./public/app/features/explore/LiveLogs.tsx","webpack://grafana/./public/app/features/explore/MetaInfoText.tsx","webpack://grafana/./public/app/features/explore/LogsMetaRow.tsx","webpack://grafana/./public/app/features/explore/LogsNavigationPages.tsx","webpack://grafana/./public/app/features/explore/LogsNavigation.tsx","webpack://grafana/./public/app/features/explore/LogsVolumePanel.tsx","webpack://grafana/./public/app/features/explore/Logs.tsx","webpack://grafana/./public/app/features/explore/utils/LogsCrossFadeTransition.tsx","webpack://grafana/./public/app/features/explore/LogsContainer.tsx","webpack://grafana/./public/app/features/explore/NoData.tsx","webpack://grafana/./public/app/features/explore/NoDataSourceCallToAction.tsx","webpack://grafana/./public/app/features/explore/NodeGraphContainer.tsx","webpack://grafana/./public/app/features/explore/QueryRows.tsx","webpack://grafana/./public/app/core/components/Animations/FadeIn.tsx","webpack://grafana/./public/app/features/explore/ErrorContainer.tsx","webpack://grafana/./public/app/features/explore/ResponseErrorContainer.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryCard.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryQueriesTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistorySettingsTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryStarredTab.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistory.tsx","webpack://grafana/./public/app/features/explore/RichHistory/RichHistoryContainer.tsx","webpack://grafana/./public/app/features/explore/SecondaryActions.tsx","webpack://grafana/./public/app/features/explore/TableContainer.tsx","webpack://grafana/./public/app/features/explore/TraceView/TraceViewContainer.tsx","webpack://grafana/./public/app/features/explore/Explore.tsx","webpack://grafana/./public/app/features/explore/ExplorePaneContainer.tsx","webpack://grafana/./public/app/features/explore/Wrapper.tsx","webpack://grafana/./public/app/features/explore/state/selectors.ts","webpack://grafana/./public/app/features/inspector/types.ts","webpack://grafana/./.yarn/__virtual__/react-use-virtual-0c21d950b6/3/opt/drone/yarncache/react-use-npm-17.4.0-0ef4521544-0889da919b.zip/node_modules/react-use/esm/useInterval.js","webpack://grafana/../../opt/drone/yarncache/immer-npm-9.0.16-426ac657bc-e9a5ca65c9.zip/node_modules/immer/dist/immer.esm.mjs"],"sourcesContent":["type Truthy<T> = T extends false | '' | 0 | null | undefined ? never : T;\n\nexport const isTruthy = <T>(value: T): value is Truthy<T> => Boolean(value);\n","import { useAsyncFn } from 'react-use';\nimport { lastValueFrom } from 'rxjs';\n\nimport { DataSourceInstanceSettings } from '@grafana/data';\nimport { getDataSourceSrv, FetchResponse } from '@grafana/runtime';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\n\nimport { Correlation, CreateCorrelationParams, RemoveCorrelationParams, UpdateCorrelationParams } from './types';\n\nexport interface CorrelationData extends Omit<Correlation, 'sourceUID' | 'targetUID'> {\n  source: DataSourceInstanceSettings;\n  target: DataSourceInstanceSettings;\n}\n\nconst toEnrichedCorrelationData = ({ sourceUID, targetUID, ...correlation }: Correlation): CorrelationData => ({\n  ...correlation,\n  source: getDataSourceSrv().getInstanceSettings(sourceUID)!,\n  target: getDataSourceSrv().getInstanceSettings(targetUID)!,\n});\n\nconst toEnrichedCorrelationsData = (correlations: Correlation[]) => correlations.map(toEnrichedCorrelationData);\nfunction getData<T>(response: FetchResponse<T>) {\n  return response.data;\n}\n\n/**\n * hook for managing correlations data.\n * TODO: ideally this hook shouldn't have any side effect like showing notifications on error\n * and let consumers handle them. It works nicely with the correlations settings page, but when we'll\n * expose this we'll have to remove those side effects.\n */\nexport const useCorrelations = () => {\n  const { backend } = useGrafana();\n\n  const [getInfo, get] = useAsyncFn<() => Promise<CorrelationData[]>>(\n    () =>\n      lastValueFrom(\n        backend.fetch<Correlation[]>({ url: '/api/datasources/correlations', method: 'GET', showErrorAlert: false })\n      )\n        .then(getData)\n        .then(toEnrichedCorrelationsData),\n    [backend]\n  );\n\n  const [createInfo, create] = useAsyncFn<(params: CreateCorrelationParams) => Promise<CorrelationData>>(\n    ({ sourceUID, ...correlation }) =>\n      backend.post(`/api/datasources/uid/${sourceUID}/correlations`, correlation).then(toEnrichedCorrelationData),\n    [backend]\n  );\n\n  const [removeInfo, remove] = useAsyncFn<(params: RemoveCorrelationParams) => Promise<{ message: string }>>(\n    ({ sourceUID, uid }) => backend.delete(`/api/datasources/uid/${sourceUID}/correlations/${uid}`),\n    [backend]\n  );\n\n  const [updateInfo, update] = useAsyncFn<(params: UpdateCorrelationParams) => Promise<CorrelationData>>(\n    ({ sourceUID, uid, ...correlation }) =>\n      backend\n        .patch(`/api/datasources/uid/${sourceUID}/correlations/${uid}`, correlation)\n        .then(toEnrichedCorrelationData),\n    [backend]\n  );\n\n  return {\n    create: {\n      execute: create,\n      ...createInfo,\n    },\n    update: {\n      execute: update,\n      ...updateInfo,\n    },\n    get: {\n      execute: get,\n      ...getInfo,\n    },\n    remove: {\n      execute: remove,\n      ...removeInfo,\n    },\n  };\n};\n","import {\n  ByNamesMatcherMode,\n  ConfigOverrideRule,\n  DataFrame,\n  DynamicConfigValue,\n  FieldConfigSource,\n  FieldMatcherID,\n  fieldMatchers,\n  FieldType,\n  getFieldDisplayName,\n  isSystemOverrideWithRef,\n  SystemConfigOverrideRule,\n} from '@grafana/data';\nimport { SeriesVisibilityChangeMode } from '@grafana/ui';\n\nconst displayOverrideRef = 'hideSeriesFrom';\nconst isHideSeriesOverride = isSystemOverrideWithRef(displayOverrideRef);\n\nexport function seriesVisibilityConfigFactory(\n  label: string,\n  mode: SeriesVisibilityChangeMode,\n  fieldConfig: FieldConfigSource,\n  data: DataFrame[]\n) {\n  const { overrides } = fieldConfig;\n\n  const displayName = label;\n  const currentIndex = overrides.findIndex(isHideSeriesOverride);\n\n  if (currentIndex < 0) {\n    if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n      const override = createOverride([displayName, ...getNamesOfHiddenFields(overrides, data)]);\n\n      return {\n        ...fieldConfig,\n        overrides: [...fieldConfig.overrides, override],\n      };\n    }\n\n    const displayNames = getDisplayNames(data, displayName);\n    const override = createOverride(displayNames);\n\n    return {\n      ...fieldConfig,\n      overrides: [...fieldConfig.overrides, override],\n    };\n  }\n\n  const overridesCopy = Array.from(overrides);\n  const [current] = overridesCopy.splice(currentIndex, 1) as SystemConfigOverrideRule[];\n\n  if (mode === SeriesVisibilityChangeMode.ToggleSelection) {\n    let existing = getExistingDisplayNames(current);\n    const nameOfHiddenFields = getNamesOfHiddenFields(overridesCopy, data);\n\n    if (nameOfHiddenFields.length > 0) {\n      existing = existing.filter((el) => nameOfHiddenFields.indexOf(el) < 0);\n    }\n\n    if (existing[0] === displayName && existing.length === 1) {\n      return {\n        ...fieldConfig,\n        overrides: overridesCopy,\n      };\n    }\n\n    const override = createOverride([displayName, ...nameOfHiddenFields]);\n\n    return {\n      ...fieldConfig,\n      overrides: [...overridesCopy, override],\n    };\n  }\n\n  const override = createExtendedOverride(current, displayName);\n\n  if (allFieldsAreExcluded(override, data)) {\n    return {\n      ...fieldConfig,\n      overrides: overridesCopy,\n    };\n  }\n\n  return {\n    ...fieldConfig,\n    overrides: [...overridesCopy, override],\n  };\n}\n\nfunction createOverride(\n  names: string[],\n  mode = ByNamesMatcherMode.exclude,\n  property?: DynamicConfigValue\n): SystemConfigOverrideRule {\n  property = property ?? {\n    id: 'custom.hideFrom',\n    value: {\n      viz: true,\n      legend: false,\n      tooltip: false,\n    },\n  };\n\n  return {\n    __systemRef: displayOverrideRef,\n    matcher: {\n      id: FieldMatcherID.byNames,\n      options: {\n        mode: mode,\n        names: names,\n        prefix: mode === ByNamesMatcherMode.exclude ? 'All except:' : undefined,\n        readOnly: true,\n      },\n    },\n    properties: [\n      {\n        ...property,\n        value: {\n          viz: true,\n          legend: false,\n          tooltip: false,\n        },\n      },\n    ],\n  };\n}\n\nconst createExtendedOverride = (\n  current: SystemConfigOverrideRule,\n  displayName: string,\n  mode = ByNamesMatcherMode.exclude\n): SystemConfigOverrideRule => {\n  const property = current.properties.find((p) => p.id === 'custom.hideFrom');\n  const existing = getExistingDisplayNames(current);\n  const index = existing.findIndex((name) => name === displayName);\n\n  if (index < 0) {\n    existing.push(displayName);\n  } else {\n    existing.splice(index, 1);\n  }\n\n  return createOverride(existing, mode, property);\n};\n\nconst getExistingDisplayNames = (rule: SystemConfigOverrideRule): string[] => {\n  const names = rule.matcher.options?.names;\n  if (!Array.isArray(names)) {\n    return [];\n  }\n  return [...names];\n};\n\nconst allFieldsAreExcluded = (override: SystemConfigOverrideRule, data: DataFrame[]): boolean => {\n  return getExistingDisplayNames(override).length === getDisplayNames(data).length;\n};\n\nconst getDisplayNames = (data: DataFrame[], excludeName?: string): string[] => {\n  const unique = new Set<string>();\n\n  for (const frame of data) {\n    for (const field of frame.fields) {\n      if (field.type !== FieldType.number) {\n        continue;\n      }\n\n      const name = getFieldDisplayName(field, frame, data);\n\n      if (name === excludeName) {\n        continue;\n      }\n\n      unique.add(name);\n    }\n  }\n\n  return Array.from(unique);\n};\n\nconst getNamesOfHiddenFields = (overrides: ConfigOverrideRule[], data: DataFrame[]): string[] => {\n  let names: string[] = [];\n\n  for (const override of overrides) {\n    const property = override.properties.find((p) => p.id === 'custom.hideFrom');\n\n    if (property !== undefined && property.value?.legend === true) {\n      const info = fieldMatchers.get(override.matcher.id);\n      const matcher = info.get(override.matcher.options);\n\n      for (const frame of data) {\n        for (const field of frame.fields) {\n          if (field.type !== FieldType.number) {\n            continue;\n          }\n\n          const name = getFieldDisplayName(field, frame, data);\n\n          if (matcher(field, frame, data)) {\n            names.push(name);\n          }\n        }\n      }\n    }\n  }\n\n  return names;\n};\n","import { useRegisterActions, useKBar, Action, Priority } from 'kbar';\nimport { FC, useEffect, useState } from 'react';\n\nimport { ExploreId, useDispatch, useSelector } from 'app/types';\n\nimport { splitOpen, splitClose } from './state/main';\nimport { runQueries } from './state/query';\nimport { isSplit } from './state/selectors';\n\ninterface Props {\n  exploreIdLeft: ExploreId;\n  exploreIdRight?: ExploreId;\n}\n\nexport const ExploreActions: FC<Props> = ({ exploreIdLeft, exploreIdRight }: Props) => {\n  const [actions, setActions] = useState<Action[]>([]);\n  const { query } = useKBar();\n  const dispatch = useDispatch();\n  const splitted = useSelector(isSplit);\n\n  useEffect(() => {\n    const exploreSection = {\n      name: 'Explore',\n      priority: Priority.HIGH + 1,\n    };\n\n    const actionsArr: Action[] = [];\n\n    if (splitted) {\n      actionsArr.push({\n        id: 'explore/run-query-left',\n        name: 'Run query (left)',\n        keywords: 'query left',\n        perform: () => {\n          dispatch(runQueries(exploreIdLeft));\n        },\n        section: exploreSection,\n      });\n      if (exploreIdRight) {\n        // we should always have the right exploreId if split\n        actionsArr.push({\n          id: 'explore/run-query-right',\n          name: 'Run query (right)',\n          keywords: 'query right',\n          perform: () => {\n            dispatch(runQueries(exploreIdRight));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-left',\n          name: 'Close split view left',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(exploreIdLeft));\n          },\n          section: exploreSection,\n        });\n        actionsArr.push({\n          id: 'explore/split-view-close-right',\n          name: 'Close split view right',\n          keywords: 'split',\n          perform: () => {\n            dispatch(splitClose(exploreIdRight));\n          },\n          section: exploreSection,\n        });\n      }\n    } else {\n      actionsArr.push({\n        id: 'explore/run-query',\n        name: 'Run query',\n        keywords: 'query',\n        perform: () => {\n          dispatch(runQueries(exploreIdLeft));\n        },\n        section: exploreSection,\n      });\n      actionsArr.push({\n        id: 'explore/split-view-open',\n        name: 'Open split view',\n        keywords: 'split',\n        perform: () => {\n          dispatch(splitOpen());\n        },\n        section: exploreSection,\n      });\n    }\n    setActions(actionsArr);\n  }, [exploreIdLeft, exploreIdRight, splitted, query, dispatch]);\n\n  useRegisterActions(!query ? [] : actions, [actions, query]);\n\n  return null;\n};\n","import { useReducer } from 'react';\nvar updateReducer = function (num) { return (num + 1) % 1000000; };\nexport default function useUpdate() {\n    var _a = useReducer(updateReducer, 0), update = _a[1];\n    return update;\n}\n","export function resolveHookState(nextState, currentState) {\n    if (typeof nextState === 'function') {\n        return nextState.length ? nextState(currentState) : nextState();\n    }\n    return nextState;\n}\n","import { useMemo, useRef } from 'react';\nimport useUpdate from './useUpdate';\nimport { resolveHookState } from './misc/hookState';\nexport default function useGetSet(initialState) {\n    var state = useRef(resolveHookState(initialState));\n    var update = useUpdate();\n    return useMemo(function () { return [\n        function () { return state.current; },\n        function (newState) {\n            state.current = resolveHookState(newState, state.current);\n            update();\n        },\n    ]; }, []);\n}\n","import { css, cx } from '@emotion/css';\nimport { identity } from 'lodash';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useCounter } from 'react-use';\n\nimport {\n  AbsoluteTimeRange,\n  applyFieldOverrides,\n  createFieldConfigRegistry,\n  DataFrame,\n  dateTime,\n  FieldColorModeId,\n  FieldConfigSource,\n  getFrameDisplayName,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n  DashboardCursorSync,\n  EventBus,\n} from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { GraphDrawStyle, LegendDisplayMode, TooltipDisplayMode, SortOrder } from '@grafana/schema';\nimport {\n  Icon,\n  PanelContext,\n  PanelContextProvider,\n  SeriesVisibilityChangeMode,\n  useStyles2,\n  useTheme2,\n} from '@grafana/ui';\nimport { defaultGraphConfig, getGraphFieldConfig } from 'app/plugins/panel/timeseries/config';\nimport { TimeSeriesOptions } from 'app/plugins/panel/timeseries/types';\n\nimport { ExploreGraphStyle } from '../../types';\nimport { seriesVisibilityConfigFactory } from '../dashboard/dashgrid/SeriesVisibilityConfigFactory';\n\nimport { applyGraphStyle } from './exploreGraphStyleUtils';\n\nconst MAX_NUMBER_OF_TIME_SERIES = 20;\n\ninterface Props {\n  data: DataFrame[];\n  height: number;\n  width: number;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  loadingState: LoadingState;\n  annotations?: DataFrame[];\n  onHiddenSeriesChanged?: (hiddenSeries: string[]) => void;\n  tooltipDisplayMode?: TooltipDisplayMode;\n  splitOpenFn: SplitOpen;\n  onChangeTime: (timeRange: AbsoluteTimeRange) => void;\n  graphStyle: ExploreGraphStyle;\n  anchorToZero: boolean;\n  eventBus: EventBus;\n}\n\nexport function ExploreGraph({\n  data,\n  height,\n  width,\n  timeZone,\n  absoluteRange,\n  onChangeTime,\n  loadingState,\n  annotations,\n  onHiddenSeriesChanged,\n  splitOpenFn,\n  graphStyle,\n  tooltipDisplayMode = TooltipDisplayMode.Single,\n  anchorToZero,\n  eventBus,\n}: Props) {\n  const theme = useTheme2();\n  const style = useStyles2(getStyles);\n  const [showAllTimeSeries, setShowAllTimeSeries] = useState(false);\n  const [structureRev, { inc: incrementStructureRev }] = useCounter(1);\n  const fieldConfigRegistry = useMemo(\n    () => createFieldConfigRegistry(getGraphFieldConfig(defaultGraphConfig), 'Explore'),\n    []\n  );\n\n  const [fieldConfig, setFieldConfig] = useState<FieldConfigSource>({\n    defaults: {\n      min: anchorToZero ? 0 : undefined,\n      color: {\n        mode: FieldColorModeId.PaletteClassic,\n      },\n      custom: {\n        drawStyle: GraphDrawStyle.Line,\n        fillOpacity: 0,\n        pointSize: 5,\n      },\n    },\n    overrides: [],\n  });\n\n  const timeRange = {\n    from: dateTime(absoluteRange.from),\n    to: dateTime(absoluteRange.to),\n    raw: {\n      from: dateTime(absoluteRange.from),\n      to: dateTime(absoluteRange.to),\n    },\n  };\n\n  const styledFieldConfig = useMemo(() => applyGraphStyle(fieldConfig, graphStyle), [fieldConfig, graphStyle]);\n\n  const dataWithConfig = useMemo(() => {\n    return applyFieldOverrides({\n      fieldConfig: styledFieldConfig,\n      data,\n      timeZone,\n      replaceVariables: (value) => value, // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n      theme,\n      fieldConfigRegistry,\n    });\n  }, [fieldConfigRegistry, data, timeZone, theme, styledFieldConfig]);\n\n  // structureRev should be incremented when either the number of series or the config changes.\n  // like useEffect, but runs before rendering.\n  // TODO: while this works as it is supposed to, we are forced to do this now because of the way\n  // ExploreGraph is implemented. We should refactor it to a single component that handles structureRev increments\n  // when a user changes the viz style and not react to the value change itself.\n  useMemo(incrementStructureRev, [dataWithConfig.length, styledFieldConfig, incrementStructureRev]);\n\n  useEffect(() => {\n    if (onHiddenSeriesChanged) {\n      const hiddenFrames: string[] = [];\n      dataWithConfig.forEach((frame) => {\n        const allFieldsHidden = frame.fields.map((field) => field.config?.custom?.hideFrom?.viz).every(identity);\n        if (allFieldsHidden) {\n          hiddenFrames.push(getFrameDisplayName(frame));\n        }\n      });\n      onHiddenSeriesChanged(hiddenFrames);\n    }\n  }, [dataWithConfig, onHiddenSeriesChanged]);\n\n  const seriesToShow = showAllTimeSeries ? dataWithConfig : dataWithConfig.slice(0, MAX_NUMBER_OF_TIME_SERIES);\n\n  const panelContext: PanelContext = {\n    eventBus,\n    sync: () => DashboardCursorSync.Crosshair,\n    onSplitOpen: splitOpenFn,\n    onToggleSeriesVisibility(label: string, mode: SeriesVisibilityChangeMode) {\n      setFieldConfig(seriesVisibilityConfigFactory(label, mode, fieldConfig, data));\n    },\n  };\n\n  const panelOptions: TimeSeriesOptions = useMemo(\n    () => ({\n      tooltip: { mode: tooltipDisplayMode, sort: SortOrder.None },\n      legend: {\n        displayMode: LegendDisplayMode.List,\n        showLegend: true,\n        placement: 'bottom',\n        calcs: [],\n      },\n    }),\n    [tooltipDisplayMode]\n  );\n\n  return (\n    <PanelContextProvider value={panelContext}>\n      {dataWithConfig.length > MAX_NUMBER_OF_TIME_SERIES && !showAllTimeSeries && (\n        <div className={cx([style.timeSeriesDisclaimer])}>\n          <Icon className={style.disclaimerIcon} name=\"exclamation-triangle\" />\n          {`Showing only ${MAX_NUMBER_OF_TIME_SERIES} time series. `}\n          <span\n            className={cx([style.showAllTimeSeries])}\n            onClick={() => {\n              setShowAllTimeSeries(true);\n            }}\n          >{`Show all ${dataWithConfig.length}`}</span>\n        </div>\n      )}\n      <PanelRenderer\n        data={{ series: seriesToShow, timeRange, state: loadingState, annotations, structureRev }}\n        pluginId=\"timeseries\"\n        title=\"\"\n        width={width}\n        height={height}\n        onChangeTimeRange={onChangeTime}\n        timeZone={timeZone}\n        options={panelOptions}\n      />\n    </PanelContextProvider>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  timeSeriesDisclaimer: css`\n    label: time-series-disclaimer;\n    width: 300px;\n    margin: ${theme.spacing(1)} auto;\n    padding: 10px 0;\n    border-radius: ${theme.spacing(2)};\n    text-align: center;\n    background-color: ${theme.colors.background.primary};\n  `,\n  disclaimerIcon: css`\n    label: disclaimer-icon;\n    color: ${theme.colors.warning.main};\n    margin-right: ${theme.spacing(0.5)};\n  `,\n  showAllTimeSeries: css`\n    label: show-all-time-series;\n    cursor: pointer;\n    color: ${theme.colors.text.link};\n  `,\n});\n","import { useMemo } from 'react';\nimport useGetSet from './useGetSet';\nimport { resolveHookState } from './misc/hookState';\nexport default function useCounter(initialValue, max, min) {\n    if (initialValue === void 0) { initialValue = 0; }\n    if (max === void 0) { max = null; }\n    if (min === void 0) { min = null; }\n    var init = resolveHookState(initialValue);\n    typeof init !== 'number' &&\n        console.error('initialValue has to be a number, got ' + typeof initialValue);\n    if (typeof min === 'number') {\n        init = Math.max(init, min);\n    }\n    else if (min !== null) {\n        console.error('min has to be a number, got ' + typeof min);\n    }\n    if (typeof max === 'number') {\n        init = Math.min(init, max);\n    }\n    else if (max !== null) {\n        console.error('max has to be a number, got ' + typeof max);\n    }\n    var _a = useGetSet(init), get = _a[0], setInternal = _a[1];\n    return [\n        get(),\n        useMemo(function () {\n            var set = function (newState) {\n                var prevState = get();\n                var rState = resolveHookState(newState, prevState);\n                if (prevState !== rState) {\n                    if (typeof min === 'number') {\n                        rState = Math.max(rState, min);\n                    }\n                    if (typeof max === 'number') {\n                        rState = Math.min(rState, max);\n                    }\n                    prevState !== rState && setInternal(rState);\n                }\n            };\n            return {\n                get: get,\n                set: set,\n                inc: function (delta) {\n                    if (delta === void 0) { delta = 1; }\n                    var rDelta = resolveHookState(delta, get());\n                    if (typeof rDelta !== 'number') {\n                        console.error('delta has to be a number or function returning a number, got ' + typeof rDelta);\n                    }\n                    set(function (num) { return num + rDelta; });\n                },\n                dec: function (delta) {\n                    if (delta === void 0) { delta = 1; }\n                    var rDelta = resolveHookState(delta, get());\n                    if (typeof rDelta !== 'number') {\n                        console.error('delta has to be a number or function returning a number, got ' + typeof rDelta);\n                    }\n                    set(function (num) { return num - rDelta; });\n                },\n                reset: function (value) {\n                    if (value === void 0) { value = init; }\n                    var rValue = resolveHookState(value, get());\n                    if (typeof rValue !== 'number') {\n                        console.error('value has to be a number or function returning a number, got ' + typeof rValue);\n                    }\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\n                    init = rValue;\n                    set(rValue);\n                },\n            };\n        }, [init, min, max]),\n    ];\n}\n","import produce from 'immer';\n\nimport { FieldConfigSource } from '@grafana/data';\nimport { GraphDrawStyle, GraphFieldConfig, StackingMode } from '@grafana/schema';\n\nimport { ExploreGraphStyle } from '../../types';\n\nexport type FieldConfig = FieldConfigSource<GraphFieldConfig>;\n\nexport function applyGraphStyle(config: FieldConfig, style: ExploreGraphStyle): FieldConfig {\n  return produce(config, (draft) => {\n    if (draft.defaults.custom === undefined) {\n      draft.defaults.custom = {};\n    }\n\n    const { custom } = draft.defaults;\n\n    if (custom.stacking === undefined) {\n      custom.stacking = { group: 'A' };\n    }\n\n    switch (style) {\n      case 'lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 100;\n        break;\n      case 'points':\n        custom.drawStyle = GraphDrawStyle.Points;\n        custom.stacking.mode = StackingMode.None;\n        custom.fillOpacity = 0;\n        break;\n      case 'stacked_lines':\n        custom.drawStyle = GraphDrawStyle.Line;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      case 'stacked_bars':\n        custom.drawStyle = GraphDrawStyle.Bars;\n        custom.stacking.mode = StackingMode.Normal;\n        custom.fillOpacity = 100;\n        break;\n      default: {\n        // should never happen\n        // NOTE: casting to `never` will cause typescript\n        // to verify that the switch statement checks every possible\n        // enum-value\n        const invalidValue: never = style;\n        throw new Error(`Invalid graph-style: ${invalidValue}`);\n      }\n    }\n  });\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { RadioButtonGroup } from '@grafana/ui';\n\nimport { EXPLORE_GRAPH_STYLES, ExploreGraphStyle } from '../../types';\n\nconst ALL_GRAPH_STYLE_OPTIONS: Array<SelectableValue<ExploreGraphStyle>> = EXPLORE_GRAPH_STYLES.map((style) => ({\n  value: style,\n  // capital-case it and switch `_` to ` `\n  label: style[0].toUpperCase() + style.slice(1).replace(/_/, ' '),\n}));\n\nconst spacing = css({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\ntype Props = {\n  graphStyle: ExploreGraphStyle;\n  onChangeGraphStyle: (style: ExploreGraphStyle) => void;\n};\n\nexport function ExploreGraphLabel(props: Props) {\n  const { graphStyle, onChangeGraphStyle } = props;\n  return (\n    <div className={spacing}>\n      Graph\n      <RadioButtonGroup size=\"sm\" options={ALL_GRAPH_STYLE_OPTIONS} value={graphStyle} onChange={onChangeGraphStyle} />\n    </div>\n  );\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar rowSizeBase = {\n    width: '100%',\n    height: '10px',\n    top: '0px',\n    left: '0px',\n    cursor: 'row-resize',\n};\nvar colSizeBase = {\n    width: '10px',\n    height: '100%',\n    top: '0px',\n    left: '0px',\n    cursor: 'col-resize',\n};\nvar edgeBase = {\n    width: '20px',\n    height: '20px',\n    position: 'absolute',\n};\nvar styles = {\n    top: __assign(__assign({}, rowSizeBase), { top: '-5px' }),\n    right: __assign(__assign({}, colSizeBase), { left: undefined, right: '-5px' }),\n    bottom: __assign(__assign({}, rowSizeBase), { top: undefined, bottom: '-5px' }),\n    left: __assign(__assign({}, colSizeBase), { left: '-5px' }),\n    topRight: __assign(__assign({}, edgeBase), { right: '-10px', top: '-10px', cursor: 'ne-resize' }),\n    bottomRight: __assign(__assign({}, edgeBase), { right: '-10px', bottom: '-10px', cursor: 'se-resize' }),\n    bottomLeft: __assign(__assign({}, edgeBase), { left: '-10px', bottom: '-10px', cursor: 'sw-resize' }),\n    topLeft: __assign(__assign({}, edgeBase), { left: '-10px', top: '-10px', cursor: 'nw-resize' }),\n};\nvar Resizer = /** @class */ (function (_super) {\n    __extends(Resizer, _super);\n    function Resizer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.onMouseDown = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        _this.onTouchStart = function (e) {\n            _this.props.onResizeStart(e, _this.props.direction);\n        };\n        return _this;\n    }\n    Resizer.prototype.render = function () {\n        return (React.createElement(\"div\", { className: this.props.className || '', style: __assign(__assign({ position: 'absolute', userSelect: 'none' }, styles[this.props.direction]), (this.props.replaceStyles || {})), onMouseDown: this.onMouseDown, onTouchStart: this.onTouchStart }, this.props.children));\n    };\n    return Resizer;\n}(React.PureComponent));\nexport { Resizer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport { Resizer } from './resizer';\nvar DEFAULT_SIZE = {\n    width: 'auto',\n    height: 'auto',\n};\nvar clamp = function (n, min, max) { return Math.max(Math.min(n, max), min); };\nvar snap = function (n, size) { return Math.round(n / size) * size; };\nvar hasDirection = function (dir, target) {\n    return new RegExp(dir, 'i').test(target);\n};\n// INFO: In case of window is a Proxy and does not porxy Events correctly, use isTouchEvent & isMouseEvent to distinguish event type instead of `instanceof`.\nvar isTouchEvent = function (event) {\n    return Boolean(event.touches && event.touches.length);\n};\nvar isMouseEvent = function (event) {\n    return Boolean((event.clientX || event.clientX === 0) &&\n        (event.clientY || event.clientY === 0));\n};\nvar findClosestSnap = function (n, snapArray, snapGap) {\n    if (snapGap === void 0) { snapGap = 0; }\n    var closestGapIndex = snapArray.reduce(function (prev, curr, index) { return (Math.abs(curr - n) < Math.abs(snapArray[prev] - n) ? index : prev); }, 0);\n    var gap = Math.abs(snapArray[closestGapIndex] - n);\n    return snapGap === 0 || gap < snapGap ? snapArray[closestGapIndex] : n;\n};\nvar getStringSize = function (n) {\n    n = n.toString();\n    if (n === 'auto') {\n        return n;\n    }\n    if (n.endsWith('px')) {\n        return n;\n    }\n    if (n.endsWith('%')) {\n        return n;\n    }\n    if (n.endsWith('vh')) {\n        return n;\n    }\n    if (n.endsWith('vw')) {\n        return n;\n    }\n    if (n.endsWith('vmax')) {\n        return n;\n    }\n    if (n.endsWith('vmin')) {\n        return n;\n    }\n    return n + \"px\";\n};\nvar getPixelSize = function (size, parentSize, innerWidth, innerHeight) {\n    if (size && typeof size === 'string') {\n        if (size.endsWith('px')) {\n            return Number(size.replace('px', ''));\n        }\n        if (size.endsWith('%')) {\n            var ratio = Number(size.replace('%', '')) / 100;\n            return parentSize * ratio;\n        }\n        if (size.endsWith('vw')) {\n            var ratio = Number(size.replace('vw', '')) / 100;\n            return innerWidth * ratio;\n        }\n        if (size.endsWith('vh')) {\n            var ratio = Number(size.replace('vh', '')) / 100;\n            return innerHeight * ratio;\n        }\n    }\n    return size;\n};\nvar calculateNewMax = function (parentSize, innerWidth, innerHeight, maxWidth, maxHeight, minWidth, minHeight) {\n    maxWidth = getPixelSize(maxWidth, parentSize.width, innerWidth, innerHeight);\n    maxHeight = getPixelSize(maxHeight, parentSize.height, innerWidth, innerHeight);\n    minWidth = getPixelSize(minWidth, parentSize.width, innerWidth, innerHeight);\n    minHeight = getPixelSize(minHeight, parentSize.height, innerWidth, innerHeight);\n    return {\n        maxWidth: typeof maxWidth === 'undefined' ? undefined : Number(maxWidth),\n        maxHeight: typeof maxHeight === 'undefined' ? undefined : Number(maxHeight),\n        minWidth: typeof minWidth === 'undefined' ? undefined : Number(minWidth),\n        minHeight: typeof minHeight === 'undefined' ? undefined : Number(minHeight),\n    };\n};\nvar definedProps = [\n    'as',\n    'style',\n    'className',\n    'grid',\n    'snap',\n    'bounds',\n    'boundsByDirection',\n    'size',\n    'defaultSize',\n    'minWidth',\n    'minHeight',\n    'maxWidth',\n    'maxHeight',\n    'lockAspectRatio',\n    'lockAspectRatioExtraWidth',\n    'lockAspectRatioExtraHeight',\n    'enable',\n    'handleStyles',\n    'handleClasses',\n    'handleWrapperStyle',\n    'handleWrapperClass',\n    'children',\n    'onResizeStart',\n    'onResize',\n    'onResizeStop',\n    'handleComponent',\n    'scale',\n    'resizeRatio',\n    'snapGap',\n];\n// HACK: This class is used to calculate % size.\nvar baseClassName = '__resizable_base__';\nvar Resizable = /** @class */ (function (_super) {\n    __extends(Resizable, _super);\n    function Resizable(props) {\n        var _this = _super.call(this, props) || this;\n        _this.ratio = 1;\n        _this.resizable = null;\n        // For parent boundary\n        _this.parentLeft = 0;\n        _this.parentTop = 0;\n        // For boundary\n        _this.resizableLeft = 0;\n        _this.resizableRight = 0;\n        _this.resizableTop = 0;\n        _this.resizableBottom = 0;\n        // For target boundary\n        _this.targetLeft = 0;\n        _this.targetTop = 0;\n        _this.appendBase = function () {\n            if (!_this.resizable || !_this.window) {\n                return null;\n            }\n            var parent = _this.parentNode;\n            if (!parent) {\n                return null;\n            }\n            var element = _this.window.document.createElement('div');\n            element.style.width = '100%';\n            element.style.height = '100%';\n            element.style.position = 'absolute';\n            element.style.transform = 'scale(0, 0)';\n            element.style.left = '0';\n            element.style.flex = '0 0 100%';\n            if (element.classList) {\n                element.classList.add(baseClassName);\n            }\n            else {\n                element.className += baseClassName;\n            }\n            parent.appendChild(element);\n            return element;\n        };\n        _this.removeBase = function (base) {\n            var parent = _this.parentNode;\n            if (!parent) {\n                return;\n            }\n            parent.removeChild(base);\n        };\n        _this.ref = function (c) {\n            if (c) {\n                _this.resizable = c;\n            }\n        };\n        _this.state = {\n            isResizing: false,\n            width: typeof (_this.propsSize && _this.propsSize.width) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.width,\n            height: typeof (_this.propsSize && _this.propsSize.height) === 'undefined'\n                ? 'auto'\n                : _this.propsSize && _this.propsSize.height,\n            direction: 'right',\n            original: {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0,\n            },\n            backgroundStyle: {\n                height: '100%',\n                width: '100%',\n                backgroundColor: 'rgba(0,0,0,0)',\n                cursor: 'auto',\n                opacity: 0,\n                position: 'fixed',\n                zIndex: 9999,\n                top: '0',\n                left: '0',\n                bottom: '0',\n                right: '0',\n            },\n            flexBasis: undefined,\n        };\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        return _this;\n    }\n    Object.defineProperty(Resizable.prototype, \"parentNode\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            return this.resizable.parentNode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"window\", {\n        get: function () {\n            if (!this.resizable) {\n                return null;\n            }\n            if (!this.resizable.ownerDocument) {\n                return null;\n            }\n            return this.resizable.ownerDocument.defaultView;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"propsSize\", {\n        get: function () {\n            return this.props.size || this.props.defaultSize || DEFAULT_SIZE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"size\", {\n        get: function () {\n            var width = 0;\n            var height = 0;\n            if (this.resizable && this.window) {\n                var orgWidth = this.resizable.offsetWidth;\n                var orgHeight = this.resizable.offsetHeight;\n                // HACK: Set position `relative` to get parent size.\n                //       This is because when re-resizable set `absolute`, I can not get base width correctly.\n                var orgPosition = this.resizable.style.position;\n                if (orgPosition !== 'relative') {\n                    this.resizable.style.position = 'relative';\n                }\n                // INFO: Use original width or height if set auto.\n                width = this.resizable.style.width !== 'auto' ? this.resizable.offsetWidth : orgWidth;\n                height = this.resizable.style.height !== 'auto' ? this.resizable.offsetHeight : orgHeight;\n                // Restore original position\n                this.resizable.style.position = orgPosition;\n            }\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Resizable.prototype, \"sizeStyle\", {\n        get: function () {\n            var _this = this;\n            var size = this.props.size;\n            var getSize = function (key) {\n                if (typeof _this.state[key] === 'undefined' || _this.state[key] === 'auto') {\n                    return 'auto';\n                }\n                if (_this.propsSize && _this.propsSize[key] && _this.propsSize[key].toString().endsWith('%')) {\n                    if (_this.state[key].toString().endsWith('%')) {\n                        return _this.state[key].toString();\n                    }\n                    var parentSize = _this.getParentSize();\n                    var value = Number(_this.state[key].toString().replace('px', ''));\n                    var percent = (value / parentSize[key]) * 100;\n                    return percent + \"%\";\n                }\n                return getStringSize(_this.state[key]);\n            };\n            var width = size && typeof size.width !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.width)\n                : getSize('width');\n            var height = size && typeof size.height !== 'undefined' && !this.state.isResizing\n                ? getStringSize(size.height)\n                : getSize('height');\n            return { width: width, height: height };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Resizable.prototype.getParentSize = function () {\n        if (!this.parentNode) {\n            if (!this.window) {\n                return { width: 0, height: 0 };\n            }\n            return { width: this.window.innerWidth, height: this.window.innerHeight };\n        }\n        var base = this.appendBase();\n        if (!base) {\n            return { width: 0, height: 0 };\n        }\n        // INFO: To calculate parent width with flex layout\n        var wrapChanged = false;\n        var wrap = this.parentNode.style.flexWrap;\n        if (wrap !== 'wrap') {\n            wrapChanged = true;\n            this.parentNode.style.flexWrap = 'wrap';\n            // HACK: Use relative to get parent padding size\n        }\n        base.style.position = 'relative';\n        base.style.minWidth = '100%';\n        base.style.minHeight = '100%';\n        var size = {\n            width: base.offsetWidth,\n            height: base.offsetHeight,\n        };\n        if (wrapChanged) {\n            this.parentNode.style.flexWrap = wrap;\n        }\n        this.removeBase(base);\n        return size;\n    };\n    Resizable.prototype.bindEvents = function () {\n        if (this.window) {\n            this.window.addEventListener('mouseup', this.onMouseUp);\n            this.window.addEventListener('mousemove', this.onMouseMove);\n            this.window.addEventListener('mouseleave', this.onMouseUp);\n            this.window.addEventListener('touchmove', this.onMouseMove, {\n                capture: true,\n                passive: false,\n            });\n            this.window.addEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.unbindEvents = function () {\n        if (this.window) {\n            this.window.removeEventListener('mouseup', this.onMouseUp);\n            this.window.removeEventListener('mousemove', this.onMouseMove);\n            this.window.removeEventListener('mouseleave', this.onMouseUp);\n            this.window.removeEventListener('touchmove', this.onMouseMove, true);\n            this.window.removeEventListener('touchend', this.onMouseUp);\n        }\n    };\n    Resizable.prototype.componentDidMount = function () {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        this.setState({\n            width: this.state.width || this.size.width,\n            height: this.state.height || this.size.height,\n            flexBasis: computedStyle.flexBasis !== 'auto' ? computedStyle.flexBasis : undefined,\n        });\n    };\n    Resizable.prototype.componentWillUnmount = function () {\n        if (this.window) {\n            this.unbindEvents();\n        }\n    };\n    Resizable.prototype.createSizeForCssProperty = function (newSize, kind) {\n        var propsSize = this.propsSize && this.propsSize[kind];\n        return this.state[kind] === 'auto' &&\n            this.state.original[kind] === newSize &&\n            (typeof propsSize === 'undefined' || propsSize === 'auto')\n            ? 'auto'\n            : newSize;\n    };\n    Resizable.prototype.calculateNewMaxFromBoundary = function (maxWidth, maxHeight) {\n        var boundsByDirection = this.props.boundsByDirection;\n        var direction = this.state.direction;\n        var widthByDirection = boundsByDirection && hasDirection('left', direction);\n        var heightByDirection = boundsByDirection && hasDirection('top', direction);\n        var boundWidth;\n        var boundHeight;\n        if (this.props.bounds === 'parent') {\n            var parent_1 = this.parentNode;\n            if (parent_1) {\n                boundWidth = widthByDirection\n                    ? this.resizableRight - this.parentLeft\n                    : parent_1.offsetWidth + (this.parentLeft - this.resizableLeft);\n                boundHeight = heightByDirection\n                    ? this.resizableBottom - this.parentTop\n                    : parent_1.offsetHeight + (this.parentTop - this.resizableTop);\n            }\n        }\n        else if (this.props.bounds === 'window') {\n            if (this.window) {\n                boundWidth = widthByDirection ? this.resizableRight : this.window.innerWidth - this.resizableLeft;\n                boundHeight = heightByDirection ? this.resizableBottom : this.window.innerHeight - this.resizableTop;\n            }\n        }\n        else if (this.props.bounds) {\n            boundWidth = widthByDirection\n                ? this.resizableRight - this.targetLeft\n                : this.props.bounds.offsetWidth + (this.targetLeft - this.resizableLeft);\n            boundHeight = heightByDirection\n                ? this.resizableBottom - this.targetTop\n                : this.props.bounds.offsetHeight + (this.targetTop - this.resizableTop);\n        }\n        if (boundWidth && Number.isFinite(boundWidth)) {\n            maxWidth = maxWidth && maxWidth < boundWidth ? maxWidth : boundWidth;\n        }\n        if (boundHeight && Number.isFinite(boundHeight)) {\n            maxHeight = maxHeight && maxHeight < boundHeight ? maxHeight : boundHeight;\n        }\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromDirection = function (clientX, clientY) {\n        var scale = this.props.scale || 1;\n        var resizeRatio = this.props.resizeRatio || 1;\n        var _a = this.state, direction = _a.direction, original = _a.original;\n        var _b = this.props, lockAspectRatio = _b.lockAspectRatio, lockAspectRatioExtraHeight = _b.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _b.lockAspectRatioExtraWidth;\n        var newWidth = original.width;\n        var newHeight = original.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (hasDirection('right', direction)) {\n            newWidth = original.width + ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('left', direction)) {\n            newWidth = original.width - ((clientX - original.x) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newHeight = (newWidth - extraWidth) / this.ratio + extraHeight;\n            }\n        }\n        if (hasDirection('bottom', direction)) {\n            newHeight = original.height + ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        if (hasDirection('top', direction)) {\n            newHeight = original.height - ((clientY - original.y) * resizeRatio) / scale;\n            if (lockAspectRatio) {\n                newWidth = (newHeight - extraHeight) * this.ratio + extraWidth;\n            }\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.calculateNewSizeFromAspectRatio = function (newWidth, newHeight, max, min) {\n        var _a = this.props, lockAspectRatio = _a.lockAspectRatio, lockAspectRatioExtraHeight = _a.lockAspectRatioExtraHeight, lockAspectRatioExtraWidth = _a.lockAspectRatioExtraWidth;\n        var computedMinWidth = typeof min.width === 'undefined' ? 10 : min.width;\n        var computedMaxWidth = typeof max.width === 'undefined' || max.width < 0 ? newWidth : max.width;\n        var computedMinHeight = typeof min.height === 'undefined' ? 10 : min.height;\n        var computedMaxHeight = typeof max.height === 'undefined' || max.height < 0 ? newHeight : max.height;\n        var extraHeight = lockAspectRatioExtraHeight || 0;\n        var extraWidth = lockAspectRatioExtraWidth || 0;\n        if (lockAspectRatio) {\n            var extraMinWidth = (computedMinHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMaxWidth = (computedMaxHeight - extraHeight) * this.ratio + extraWidth;\n            var extraMinHeight = (computedMinWidth - extraWidth) / this.ratio + extraHeight;\n            var extraMaxHeight = (computedMaxWidth - extraWidth) / this.ratio + extraHeight;\n            var lockedMinWidth = Math.max(computedMinWidth, extraMinWidth);\n            var lockedMaxWidth = Math.min(computedMaxWidth, extraMaxWidth);\n            var lockedMinHeight = Math.max(computedMinHeight, extraMinHeight);\n            var lockedMaxHeight = Math.min(computedMaxHeight, extraMaxHeight);\n            newWidth = clamp(newWidth, lockedMinWidth, lockedMaxWidth);\n            newHeight = clamp(newHeight, lockedMinHeight, lockedMaxHeight);\n        }\n        else {\n            newWidth = clamp(newWidth, computedMinWidth, computedMaxWidth);\n            newHeight = clamp(newHeight, computedMinHeight, computedMaxHeight);\n        }\n        return { newWidth: newWidth, newHeight: newHeight };\n    };\n    Resizable.prototype.setBoundingClientRect = function () {\n        // For parent boundary\n        if (this.props.bounds === 'parent') {\n            var parent_2 = this.parentNode;\n            if (parent_2) {\n                var parentRect = parent_2.getBoundingClientRect();\n                this.parentLeft = parentRect.left;\n                this.parentTop = parentRect.top;\n            }\n        }\n        // For target(html element) boundary\n        if (this.props.bounds && typeof this.props.bounds !== 'string') {\n            var targetRect = this.props.bounds.getBoundingClientRect();\n            this.targetLeft = targetRect.left;\n            this.targetTop = targetRect.top;\n        }\n        // For boundary\n        if (this.resizable) {\n            var _a = this.resizable.getBoundingClientRect(), left = _a.left, top_1 = _a.top, right = _a.right, bottom = _a.bottom;\n            this.resizableLeft = left;\n            this.resizableRight = right;\n            this.resizableTop = top_1;\n            this.resizableBottom = bottom;\n        }\n    };\n    Resizable.prototype.onResizeStart = function (event, direction) {\n        if (!this.resizable || !this.window) {\n            return;\n        }\n        var clientX = 0;\n        var clientY = 0;\n        if (event.nativeEvent && isMouseEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.clientX;\n            clientY = event.nativeEvent.clientY;\n        }\n        else if (event.nativeEvent && isTouchEvent(event.nativeEvent)) {\n            clientX = event.nativeEvent.touches[0].clientX;\n            clientY = event.nativeEvent.touches[0].clientY;\n        }\n        if (this.props.onResizeStart) {\n            if (this.resizable) {\n                var startResize = this.props.onResizeStart(event, direction, this.resizable);\n                if (startResize === false) {\n                    return;\n                }\n            }\n        }\n        // Fix #168\n        if (this.props.size) {\n            if (typeof this.props.size.height !== 'undefined' && this.props.size.height !== this.state.height) {\n                this.setState({ height: this.props.size.height });\n            }\n            if (typeof this.props.size.width !== 'undefined' && this.props.size.width !== this.state.width) {\n                this.setState({ width: this.props.size.width });\n            }\n        }\n        // For lockAspectRatio case\n        this.ratio =\n            typeof this.props.lockAspectRatio === 'number' ? this.props.lockAspectRatio : this.size.width / this.size.height;\n        var flexBasis;\n        var computedStyle = this.window.getComputedStyle(this.resizable);\n        if (computedStyle.flexBasis !== 'auto') {\n            var parent_3 = this.parentNode;\n            if (parent_3) {\n                var dir = this.window.getComputedStyle(parent_3).flexDirection;\n                this.flexDir = dir.startsWith('row') ? 'row' : 'column';\n                flexBasis = computedStyle.flexBasis;\n            }\n        }\n        // For boundary\n        this.setBoundingClientRect();\n        this.bindEvents();\n        var state = {\n            original: {\n                x: clientX,\n                y: clientY,\n                width: this.size.width,\n                height: this.size.height,\n            },\n            isResizing: true,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: this.window.getComputedStyle(event.target).cursor || 'auto' }),\n            direction: direction,\n            flexBasis: flexBasis,\n        };\n        this.setState(state);\n    };\n    Resizable.prototype.onMouseMove = function (event) {\n        var _this = this;\n        if (!this.state.isResizing || !this.resizable || !this.window) {\n            return;\n        }\n        if (this.window.TouchEvent && isTouchEvent(event)) {\n            try {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            catch (e) {\n                // Ignore on fail\n            }\n        }\n        var _a = this.props, maxWidth = _a.maxWidth, maxHeight = _a.maxHeight, minWidth = _a.minWidth, minHeight = _a.minHeight;\n        var clientX = isTouchEvent(event) ? event.touches[0].clientX : event.clientX;\n        var clientY = isTouchEvent(event) ? event.touches[0].clientY : event.clientY;\n        var _b = this.state, direction = _b.direction, original = _b.original, width = _b.width, height = _b.height;\n        var parentSize = this.getParentSize();\n        var max = calculateNewMax(parentSize, this.window.innerWidth, this.window.innerHeight, maxWidth, maxHeight, minWidth, minHeight);\n        maxWidth = max.maxWidth;\n        maxHeight = max.maxHeight;\n        minWidth = max.minWidth;\n        minHeight = max.minHeight;\n        // Calculate new size\n        var _c = this.calculateNewSizeFromDirection(clientX, clientY), newHeight = _c.newHeight, newWidth = _c.newWidth;\n        // Calculate max size from boundary settings\n        var boundaryMax = this.calculateNewMaxFromBoundary(maxWidth, maxHeight);\n        if (this.props.snap && this.props.snap.x) {\n            newWidth = findClosestSnap(newWidth, this.props.snap.x, this.props.snapGap);\n        }\n        if (this.props.snap && this.props.snap.y) {\n            newHeight = findClosestSnap(newHeight, this.props.snap.y, this.props.snapGap);\n        }\n        // Calculate new size from aspect ratio\n        var newSize = this.calculateNewSizeFromAspectRatio(newWidth, newHeight, { width: boundaryMax.maxWidth, height: boundaryMax.maxHeight }, { width: minWidth, height: minHeight });\n        newWidth = newSize.newWidth;\n        newHeight = newSize.newHeight;\n        if (this.props.grid) {\n            var newGridWidth = snap(newWidth, this.props.grid[0]);\n            var newGridHeight = snap(newHeight, this.props.grid[1]);\n            var gap = this.props.snapGap || 0;\n            newWidth = gap === 0 || Math.abs(newGridWidth - newWidth) <= gap ? newGridWidth : newWidth;\n            newHeight = gap === 0 || Math.abs(newGridHeight - newHeight) <= gap ? newGridHeight : newHeight;\n        }\n        var delta = {\n            width: newWidth - original.width,\n            height: newHeight - original.height,\n        };\n        if (width && typeof width === 'string') {\n            if (width.endsWith('%')) {\n                var percent = (newWidth / parentSize.width) * 100;\n                newWidth = percent + \"%\";\n            }\n            else if (width.endsWith('vw')) {\n                var vw = (newWidth / this.window.innerWidth) * 100;\n                newWidth = vw + \"vw\";\n            }\n            else if (width.endsWith('vh')) {\n                var vh = (newWidth / this.window.innerHeight) * 100;\n                newWidth = vh + \"vh\";\n            }\n        }\n        if (height && typeof height === 'string') {\n            if (height.endsWith('%')) {\n                var percent = (newHeight / parentSize.height) * 100;\n                newHeight = percent + \"%\";\n            }\n            else if (height.endsWith('vw')) {\n                var vw = (newHeight / this.window.innerWidth) * 100;\n                newHeight = vw + \"vw\";\n            }\n            else if (height.endsWith('vh')) {\n                var vh = (newHeight / this.window.innerHeight) * 100;\n                newHeight = vh + \"vh\";\n            }\n        }\n        var newState = {\n            width: this.createSizeForCssProperty(newWidth, 'width'),\n            height: this.createSizeForCssProperty(newHeight, 'height'),\n        };\n        if (this.flexDir === 'row') {\n            newState.flexBasis = newState.width;\n        }\n        else if (this.flexDir === 'column') {\n            newState.flexBasis = newState.height;\n        }\n        // For v18, update state sync\n        flushSync(function () {\n            _this.setState(newState);\n        });\n        if (this.props.onResize) {\n            this.props.onResize(event, direction, this.resizable, delta);\n        }\n    };\n    Resizable.prototype.onMouseUp = function (event) {\n        var _a = this.state, isResizing = _a.isResizing, direction = _a.direction, original = _a.original;\n        if (!isResizing || !this.resizable) {\n            return;\n        }\n        var delta = {\n            width: this.size.width - original.width,\n            height: this.size.height - original.height,\n        };\n        if (this.props.onResizeStop) {\n            this.props.onResizeStop(event, direction, this.resizable, delta);\n        }\n        if (this.props.size) {\n            this.setState(this.props.size);\n        }\n        this.unbindEvents();\n        this.setState({\n            isResizing: false,\n            backgroundStyle: __assign(__assign({}, this.state.backgroundStyle), { cursor: 'auto' }),\n        });\n    };\n    Resizable.prototype.updateSize = function (size) {\n        this.setState({ width: size.width, height: size.height });\n    };\n    Resizable.prototype.renderResizer = function () {\n        var _this = this;\n        var _a = this.props, enable = _a.enable, handleStyles = _a.handleStyles, handleClasses = _a.handleClasses, handleWrapperStyle = _a.handleWrapperStyle, handleWrapperClass = _a.handleWrapperClass, handleComponent = _a.handleComponent;\n        if (!enable) {\n            return null;\n        }\n        var resizers = Object.keys(enable).map(function (dir) {\n            if (enable[dir] !== false) {\n                return (React.createElement(Resizer, { key: dir, direction: dir, onResizeStart: _this.onResizeStart, replaceStyles: handleStyles && handleStyles[dir], className: handleClasses && handleClasses[dir] }, handleComponent && handleComponent[dir] ? handleComponent[dir] : null));\n            }\n            return null;\n        });\n        // #93 Wrap the resize box in span (will not break 100% width/height)\n        return (React.createElement(\"div\", { className: handleWrapperClass, style: handleWrapperStyle }, resizers));\n    };\n    Resizable.prototype.render = function () {\n        var _this = this;\n        var extendsProps = Object.keys(this.props).reduce(function (acc, key) {\n            if (definedProps.indexOf(key) !== -1) {\n                return acc;\n            }\n            acc[key] = _this.props[key];\n            return acc;\n        }, {});\n        var style = __assign(__assign(__assign({ position: 'relative', userSelect: this.state.isResizing ? 'none' : 'auto' }, this.props.style), this.sizeStyle), { maxWidth: this.props.maxWidth, maxHeight: this.props.maxHeight, minWidth: this.props.minWidth, minHeight: this.props.minHeight, boxSizing: 'border-box', flexShrink: 0 });\n        if (this.state.flexBasis) {\n            style.flexBasis = this.state.flexBasis;\n        }\n        var Wrapper = this.props.as || 'div';\n        return (React.createElement(Wrapper, __assign({ ref: this.ref, style: style, className: this.props.className }, extendsProps),\n            this.state.isResizing && React.createElement(\"div\", { style: this.state.backgroundStyle }),\n            this.props.children,\n            this.renderResizer()));\n    };\n    Resizable.defaultProps = {\n        as: 'div',\n        onResizeStart: function () { },\n        onResize: function () { },\n        onResizeStop: function () { },\n        enable: {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true,\n            topRight: true,\n            bottomRight: true,\n            bottomLeft: true,\n            topLeft: true,\n        },\n        style: {},\n        grid: [1, 1],\n        lockAspectRatio: false,\n        lockAspectRatioExtraWidth: 0,\n        lockAspectRatioExtraHeight: 0,\n        scale: 1,\n        resizeRatio: 1,\n        snapGap: 0,\n    };\n    return Resizable;\n}(React.PureComponent));\nexport { Resizable };\n","// Libraries\nimport { css, cx, keyframes } from '@emotion/css';\nimport { Resizable, ResizeCallback } from 're-resizable';\nimport React from 'react';\n\n// Services & Utils\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { stylesFactory, useTheme2 } from '@grafana/ui';\n\n// Types\n\nconst drawerSlide = (theme: GrafanaTheme2) => keyframes`\n  0% {\n    transform: translateY(${theme.components.horizontalDrawer.defaultHeight}px);\n  }\n\n  100% {\n    transform: translateY(0px);\n  }\n`;\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      position: fixed !important;\n      bottom: 0;\n      background: ${theme.colors.background.primary};\n      border-top: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(0, -2, 0, -2)};\n      box-shadow: ${theme.shadows.z3};\n      z-index: ${theme.zIndex.navbarFixed};\n    `,\n    drawerActive: css`\n      opacity: 1;\n      animation: 0.5s ease-out ${drawerSlide(theme)};\n    `,\n    rzHandle: css`\n      background: ${theme.colors.secondary.main};\n      transition: 0.3s background ease-in-out;\n      position: relative;\n      width: 200px !important;\n      height: 7px !important;\n      left: calc(50% - 100px) !important;\n      top: -4px !important;\n      cursor: grab;\n      border-radius: 4px;\n      &:hover {\n        background: ${theme.colors.secondary.shade};\n      }\n    `,\n  };\n});\n\nexport interface Props {\n  width: number;\n  children: React.ReactNode;\n  onResize?: ResizeCallback;\n}\n\nexport function ExploreDrawer(props: Props) {\n  const { width, children, onResize } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  const drawerWidth = `${width + 31.5}px`;\n\n  return (\n    <Resizable\n      className={cx(styles.container, styles.drawerActive)}\n      defaultSize={{ width: drawerWidth, height: `${theme.components.horizontalDrawer.defaultHeight}px` }}\n      handleClasses={{ top: styles.rzHandle }}\n      enable={{\n        top: true,\n        right: false,\n        bottom: false,\n        left: false,\n        topRight: false,\n        bottomRight: false,\n        bottomLeft: false,\n        topLeft: false,\n      }}\n      maxHeight=\"100vh\"\n      maxWidth={drawerWidth}\n      minWidth={drawerWidth}\n      onResize={onResize}\n    >\n      {children}\n    </Resizable>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { CoreApp, TimeZone } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime/src';\nimport { TabbedContainer, TabConfig } from '@grafana/ui';\nimport { ExploreDrawer } from 'app/features/explore/ExploreDrawer';\nimport { InspectDataTab } from 'app/features/inspector/InspectDataTab';\nimport { InspectErrorTab } from 'app/features/inspector/InspectErrorTab';\nimport { InspectJSONTab } from 'app/features/inspector/InspectJSONTab';\nimport { InspectStatsTab } from 'app/features/inspector/InspectStatsTab';\nimport { QueryInspector } from 'app/features/inspector/QueryInspector';\nimport { StoreState, ExploreItemState, ExploreId } from 'app/types';\n\nimport { runQueries } from './state/query';\n\ninterface DispatchProps {\n  width: number;\n  exploreId: ExploreId;\n  timeZone: TimeZone;\n  onClose: () => void;\n}\n\ntype Props = DispatchProps & ConnectedProps<typeof connector>;\n\nexport function ExploreQueryInspector(props: Props) {\n  const { loading, width, onClose, queryResponse, timeZone } = props;\n  const dataFrames = queryResponse?.series || [];\n  const error = queryResponse?.error;\n\n  useEffect(() => {\n    reportInteraction('grafana_explore_query_inspector_opened');\n  }, []);\n\n  const statsTab: TabConfig = {\n    label: 'Stats',\n    value: 'stats',\n    icon: 'chart-line',\n    content: <InspectStatsTab data={queryResponse!} timeZone={queryResponse?.request?.timezone as TimeZone} />,\n  };\n\n  const jsonTab: TabConfig = {\n    label: 'JSON',\n    value: 'json',\n    icon: 'brackets-curly',\n    content: <InspectJSONTab data={queryResponse} onClose={onClose} />,\n  };\n\n  const dataTab: TabConfig = {\n    label: 'Data',\n    value: 'data',\n    icon: 'database',\n    content: (\n      <InspectDataTab\n        data={dataFrames}\n        isLoading={loading}\n        options={{ withTransforms: false, withFieldConfig: false }}\n        timeZone={timeZone}\n        app={CoreApp.Explore}\n      />\n    ),\n  };\n\n  const queryTab: TabConfig = {\n    label: 'Query',\n    value: 'query',\n    icon: 'info-circle',\n    content: <QueryInspector data={dataFrames} onRefreshQuery={() => props.runQueries(props.exploreId)} />,\n  };\n\n  const tabs = [statsTab, queryTab, jsonTab, dataTab];\n  if (error) {\n    const errorTab: TabConfig = {\n      label: 'Error',\n      value: 'error',\n      icon: 'exclamation-triangle',\n      content: <InspectErrorTab error={error} />,\n    };\n    tabs.push(errorTab);\n  }\n  return (\n    <ExploreDrawer width={width}>\n      <TabbedContainer tabs={tabs} onClose={onClose} closeIconTooltip=\"Close query inspector\" />\n    </ExploreDrawer>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const { loading, queryResponse } = item;\n\n  return {\n    loading,\n    queryResponse,\n  };\n}\n\nconst mapDispatchToProps = {\n  runQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default connector(ExploreQueryInspector);\n","import React from 'react';\n\nimport { Tooltip, ToolbarButton } from '@grafana/ui';\n\ninterface TimeSyncButtonProps {\n  isSynced: boolean;\n  onClick: () => void;\n}\n\nexport function TimeSyncButton(props: TimeSyncButtonProps) {\n  const { onClick, isSynced } = props;\n\n  const syncTimesTooltip = () => {\n    const { isSynced } = props;\n    const tooltip = isSynced ? 'Unsync all views' : 'Sync all views to this time range';\n    return <>{tooltip}</>;\n  };\n\n  return (\n    <Tooltip content={syncTimesTooltip} placement=\"bottom\">\n      <ToolbarButton\n        icon=\"link\"\n        variant={isSynced ? 'active' : 'default'}\n        aria-label={isSynced ? 'Synced times' : 'Unsynced times'}\n        onClick={onClick}\n      />\n    </Tooltip>\n  );\n}\n","import React, { Component } from 'react';\n\nimport { TimeRange, TimeZone, RawTimeRange, dateTimeForTimeZone, dateMath } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { TimePickerWithHistory } from 'app/core/components/TimePicker/TimePickerWithHistory';\nimport { getShiftedTimeRange, getZoomedTimeRange } from 'app/core/utils/timePicker';\nimport { ExploreId } from 'app/types';\n\nimport { TimeSyncButton } from './TimeSyncButton';\n\nexport interface Props {\n  exploreId: ExploreId;\n  hideText?: boolean;\n  range: TimeRange;\n  timeZone: TimeZone;\n  fiscalYearStartMonth: number;\n  splitted: boolean;\n  syncedTimes: boolean;\n  onChangeTimeSync: () => void;\n  onChangeTime: (range: RawTimeRange) => void;\n  onChangeTimeZone: (timeZone: TimeZone) => void;\n  onChangeFiscalYearStartMonth: (fiscalYearStartMonth: number) => void;\n}\n\nexport class ExploreTimeControls extends Component<Props> {\n  onMoveTimePicker = (direction: number) => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getShiftedTimeRange(direction, range);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  onMoveForward = () => this.onMoveTimePicker(1);\n  onMoveBack = () => this.onMoveTimePicker(-1);\n\n  onChangeTimePicker = (timeRange: TimeRange) => {\n    const adjustedFrom = dateMath.isMathString(timeRange.raw.from) ? timeRange.raw.from : timeRange.from;\n    const adjustedTo = dateMath.isMathString(timeRange.raw.to) ? timeRange.raw.to : timeRange.to;\n\n    this.props.onChangeTime({\n      from: adjustedFrom,\n      to: adjustedTo,\n    });\n\n    reportInteraction('grafana_explore_time_picker_time_range_changed', {\n      timeRangeFrom: adjustedFrom,\n      timeRangeTo: adjustedTo,\n    });\n  };\n\n  onZoom = () => {\n    const { range, onChangeTime, timeZone } = this.props;\n    const { from, to } = getZoomedTimeRange(range, 2);\n    const nextTimeRange = {\n      from: dateTimeForTimeZone(timeZone, from),\n      to: dateTimeForTimeZone(timeZone, to),\n    };\n\n    onChangeTime(nextTimeRange);\n  };\n\n  render() {\n    const {\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      splitted,\n      syncedTimes,\n      onChangeTimeSync,\n      hideText,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n    } = this.props;\n    const timeSyncButton = splitted ? <TimeSyncButton onClick={onChangeTimeSync} isSynced={syncedTimes} /> : undefined;\n    const timePickerCommonProps = {\n      value: range,\n      timeZone,\n      fiscalYearStartMonth,\n      onMoveBackward: this.onMoveBack,\n      onMoveForward: this.onMoveForward,\n      onZoom: this.onZoom,\n      hideText,\n    };\n\n    return (\n      <TimePickerWithHistory\n        {...timePickerCommonProps}\n        timeSyncButton={timeSyncButton}\n        isSynced={syncedTimes}\n        widthOverride={splitted ? window.innerWidth / 2 : undefined}\n        onChange={this.onChangeTimePicker}\n        onChangeTimeZone={onChangeTimeZone}\n        onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n      />\n    );\n  }\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { Tooltip, ButtonGroup, ToolbarButton } from '@grafana/ui';\n\ntype LiveTailButtonProps = {\n  splitted: boolean;\n  start: () => void;\n  stop: () => void;\n  pause: () => void;\n  resume: () => void;\n  isLive: boolean;\n  isPaused: boolean;\n};\n\nexport function LiveTailButton(props: LiveTailButtonProps) {\n  const { start, pause, resume, isLive, isPaused, stop, splitted } = props;\n  const buttonVariant = isLive && !isPaused ? 'active' : 'default';\n  const onClickMain = isLive ? (isPaused ? resume : pause) : start;\n\n  return (\n    <ButtonGroup>\n      <Tooltip\n        content={isLive && !isPaused ? <>Pause the live stream</> : <>Start live stream your logs</>}\n        placement=\"bottom\"\n      >\n        <ToolbarButton\n          iconOnly={splitted}\n          variant={buttonVariant}\n          icon={!isLive || isPaused ? 'play' : 'pause'}\n          onClick={onClickMain}\n        >\n          {isLive && isPaused ? 'Paused' : 'Live'}\n        </ToolbarButton>\n      </Tooltip>\n\n      <CSSTransition\n        mountOnEnter={true}\n        unmountOnExit={true}\n        timeout={100}\n        in={isLive}\n        classNames={{\n          enter: styles.stopButtonEnter,\n          enterActive: styles.stopButtonEnterActive,\n          exit: styles.stopButtonExit,\n          exitActive: styles.stopButtonExitActive,\n        }}\n      >\n        <Tooltip content={<>Stop and exit the live stream</>} placement=\"bottom\">\n          <ToolbarButton variant={buttonVariant} onClick={stop} icon=\"square-shape\" />\n        </Tooltip>\n      </CSSTransition>\n    </ButtonGroup>\n  );\n}\n\nconst styles = {\n  stopButtonEnter: css`\n    label: stopButtonEnter;\n    width: 0;\n    opacity: 0;\n    overflow: hidden;\n  `,\n  stopButtonEnterActive: css`\n    label: stopButtonEnterActive;\n    opacity: 1;\n    width: 32px;\n  `,\n  stopButtonExit: css`\n    label: stopButtonExit;\n    width: 32px;\n    opacity: 1;\n    overflow: hidden;\n  `,\n  stopButtonExitActive: css`\n    label: stopButtonExitActive;\n    opacity: 0;\n    width: 0;\n  `,\n};\n","import React, { useCallback } from 'react';\n\nimport { RefreshPicker } from '@grafana/ui';\nimport { useDispatch } from 'app/types';\n\nimport { ExploreId } from '../../types';\n\nimport { setPausedStateAction, runQueries } from './state/query';\nimport { changeRefreshInterval } from './state/time';\n\n/**\n * Hook that gives you all the functions needed to control the live tailing.\n */\nexport function useLiveTailControls(exploreId: ExploreId) {\n  const dispatch = useDispatch();\n\n  const pause = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: true }));\n  }, [exploreId, dispatch]);\n\n  const resume = useCallback(() => {\n    dispatch(setPausedStateAction({ exploreId, isPaused: false }));\n  }, [exploreId, dispatch]);\n\n  const stop = useCallback(() => {\n    // We need to pause here first because there is transition where we are not live but live logs are still shown\n    // to cross fade with the normal view. This will prevent reordering of the logs in the live view during the\n    // transition.\n    pause();\n\n    // TODO referencing this from perspective of refresh picker when there is designated button for it now is not\n    //  great. Needs a bit of refactoring.\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.offOption.value));\n    dispatch(runQueries(exploreId));\n  }, [exploreId, dispatch, pause]);\n\n  const start = useCallback(() => {\n    dispatch(changeRefreshInterval(exploreId, RefreshPicker.liveOption.value));\n  }, [exploreId, dispatch]);\n\n  return {\n    pause,\n    resume,\n    stop,\n    start,\n  };\n}\n\ntype Props = {\n  exploreId: ExploreId;\n  children: (controls: ReturnType<typeof useLiveTailControls>) => React.ReactElement;\n};\n\n/**\n * If you can't use the hook you can use this as a render prop pattern.\n */\nexport function LiveTailControls(props: Props) {\n  const controls = useLiveTailControls(props.exploreId);\n  return props.children(controls);\n}\n","import React, { lazy, PureComponent, RefObject, Suspense } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { DataSourceInstanceSettings, RawTimeRange } from '@grafana/data';\nimport { config, DataSourcePicker, reportInteraction } from '@grafana/runtime';\nimport {\n  defaultIntervals,\n  PageToolbar,\n  RefreshPicker,\n  SetInterval,\n  ToolbarButton,\n  ToolbarButtonRow,\n} from '@grafana/ui';\nimport { AppChromeUpdate } from 'app/core/components/AppChrome/AppChromeUpdate';\nimport { contextSrv } from 'app/core/core';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { AccessControlAction } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\nimport { StoreState } from 'app/types/store';\n\nimport { DashNavButton } from '../dashboard/components/DashNav/DashNavButton';\nimport { getTimeSrv } from '../dashboard/services/TimeSrv';\nimport { updateFiscalYearStartMonthForSession, updateTimeZoneForSession } from '../profile/state/reducers';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreTimeControls } from './ExploreTimeControls';\nimport { LiveTailButton } from './LiveTailButton';\nimport { changeDatasource } from './state/datasource';\nimport { splitClose, splitOpen } from './state/main';\nimport { cancelQueries, runQueries } from './state/query';\nimport { isSplit } from './state/selectors';\nimport { syncTimes, changeRefreshInterval } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\n\nconst AddToDashboard = lazy(() =>\n  import('./AddToDashboard').then(({ AddToDashboard }) => ({ default: AddToDashboard }))\n);\n\ninterface OwnProps {\n  exploreId: ExploreId;\n  onChangeTime: (range: RawTimeRange, changedByScanner?: boolean) => void;\n  topOfViewRef: RefObject<HTMLDivElement>;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nclass UnConnectedExploreToolbar extends PureComponent<Props> {\n  onChangeDatasource = async (dsSettings: DataSourceInstanceSettings) => {\n    const { changeDatasource, exploreId } = this.props;\n    changeDatasource(exploreId, dsSettings.uid, { importQueries: true });\n  };\n\n  onRunQuery = (loading = false) => {\n    const { runQueries, cancelQueries, exploreId } = this.props;\n    if (loading) {\n      return cancelQueries(exploreId);\n    } else {\n      return runQueries(exploreId);\n    }\n  };\n\n  onChangeRefreshInterval = (item: string) => {\n    const { changeRefreshInterval, exploreId } = this.props;\n    changeRefreshInterval(exploreId, item);\n  };\n\n  onChangeTimeSync = () => {\n    const { syncTimes, exploreId } = this.props;\n    syncTimes(exploreId);\n  };\n\n  onCopyShortLink = async () => {\n    await createAndCopyShortLink(window.location.href);\n    reportInteraction('grafana_explore_shortened_link_clicked');\n  };\n\n  onOpenSplitView = () => {\n    const { split } = this.props;\n    split();\n    reportInteraction('grafana_explore_split_view_opened', { origin: 'menu' });\n  };\n\n  onCloseSplitView = () => {\n    const { closeSplit, exploreId } = this.props;\n    closeSplit(exploreId);\n    reportInteraction('grafana_explore_split_view_closed');\n  };\n\n  renderRefreshPicker = (showSmallTimePicker: boolean) => {\n    const { loading, refreshInterval, isLive } = this.props;\n\n    let refreshPickerText: string | undefined = loading ? 'Cancel' : 'Run query';\n    let refreshPickerTooltip = undefined;\n    let refreshPickerWidth = '108px';\n    if (showSmallTimePicker) {\n      refreshPickerTooltip = refreshPickerText;\n      refreshPickerText = undefined;\n      refreshPickerWidth = '35px';\n    }\n\n    return (\n      <RefreshPicker\n        key=\"refreshPicker\"\n        onIntervalChanged={this.onChangeRefreshInterval}\n        value={refreshInterval}\n        isLoading={loading}\n        text={refreshPickerText}\n        tooltip={refreshPickerTooltip}\n        intervals={getTimeSrv().getValidIntervals(defaultIntervals)}\n        isLive={isLive}\n        onRefresh={() => this.onRunQuery(loading)}\n        noIntervalPicker={isLive}\n        primary={true}\n        width={refreshPickerWidth}\n      />\n    );\n  };\n\n  renderActions = () => {\n    const {\n      splitted,\n      isLive,\n      exploreId,\n      range,\n      timeZone,\n      fiscalYearStartMonth,\n      onChangeTime,\n      syncedTimes,\n      onChangeTimeZone,\n      onChangeFiscalYearStartMonth,\n      refreshInterval,\n      loading,\n      isPaused,\n      hasLiveOption,\n      containerWidth,\n    } = this.props;\n    const showSmallTimePicker = splitted || containerWidth < 1210;\n\n    const showExploreToDashboard =\n      contextSrv.hasAccess(AccessControlAction.DashboardsCreate, contextSrv.isEditor) ||\n      contextSrv.hasAccess(AccessControlAction.DashboardsWrite, contextSrv.isEditor);\n\n    return [\n      !splitted ? (\n        <ToolbarButton\n          key=\"split\"\n          tooltip=\"Split the pane\"\n          onClick={this.onOpenSplitView}\n          icon=\"columns\"\n          disabled={isLive}\n        >\n          Split\n        </ToolbarButton>\n      ) : (\n        <ToolbarButton key=\"split\" tooltip=\"Close split pane\" onClick={this.onCloseSplitView} icon=\"times\">\n          Close\n        </ToolbarButton>\n      ),\n\n      showExploreToDashboard && (\n        <Suspense key=\"addToDashboard\" fallback={null}>\n          <AddToDashboard exploreId={exploreId} />\n        </Suspense>\n      ),\n\n      !isLive && (\n        <ExploreTimeControls\n          key=\"timeControls\"\n          exploreId={exploreId}\n          range={range}\n          timeZone={timeZone}\n          fiscalYearStartMonth={fiscalYearStartMonth}\n          onChangeTime={onChangeTime}\n          splitted={splitted}\n          syncedTimes={syncedTimes}\n          onChangeTimeSync={this.onChangeTimeSync}\n          hideText={showSmallTimePicker}\n          onChangeTimeZone={onChangeTimeZone}\n          onChangeFiscalYearStartMonth={onChangeFiscalYearStartMonth}\n        />\n      ),\n\n      this.renderRefreshPicker(showSmallTimePicker),\n\n      refreshInterval && (\n        <SetInterval key=\"setInterval\" func={this.onRunQuery} interval={refreshInterval} loading={loading} />\n      ),\n\n      hasLiveOption && (\n        <LiveTailControls key=\"liveControls\" exploreId={exploreId}>\n          {(c) => {\n            const controls = {\n              ...c,\n              start: () => {\n                reportInteraction('grafana_explore_logs_live_tailing_clicked', {\n                  datasourceType: this.props.datasourceType,\n                });\n                c.start();\n              },\n            };\n            return (\n              <LiveTailButton\n                splitted={splitted}\n                isLive={isLive}\n                isPaused={isPaused}\n                start={controls.start}\n                pause={controls.pause}\n                resume={controls.resume}\n                stop={controls.stop}\n              />\n            );\n          }}\n        </LiveTailControls>\n      ),\n    ].filter(Boolean);\n  };\n\n  render() {\n    const { datasourceMissing, exploreId, splitted, containerWidth, topOfViewRef } = this.props;\n\n    const showSmallDataSourcePicker = (splitted ? containerWidth < 700 : containerWidth < 800) || false;\n    const isTopnav = config.featureToggles.topnav;\n\n    const getDashNav = () => (\n      <DashNavButton\n        key=\"share\"\n        tooltip=\"Copy shortened link\"\n        icon=\"share-alt\"\n        onClick={this.onCopyShortLink}\n        aria-label=\"Copy shortened link\"\n      />\n    );\n\n    const getDataSourcePicker = () =>\n      !datasourceMissing && (\n        <DataSourcePicker\n          key={`${exploreId}-ds-picker`}\n          mixed={config.featureToggles.exploreMixedDatasource === true}\n          onChange={this.onChangeDatasource}\n          current={this.props.datasourceRef}\n          hideTextValue={showSmallDataSourcePicker}\n          width={showSmallDataSourcePicker ? 8 : undefined}\n        />\n      );\n\n    const topNavActions = [\n      getDashNav(),\n      !splitted && getDataSourcePicker(),\n      <div style={{ flex: 1 }} key=\"spacer\" />,\n      <ToolbarButtonRow key=\"actions\" alignment=\"right\">\n        {this.renderActions()}\n      </ToolbarButtonRow>,\n    ].filter(Boolean);\n\n    const toolbarLeftItems = [exploreId === ExploreId.left && getDashNav(), getDataSourcePicker()].filter(Boolean);\n\n    const toolbarLeftItemsTopNav = [\n      exploreId === ExploreId.left && (\n        <AppChromeUpdate\n          actions={[getDashNav(), !splitted && getDataSourcePicker(), <div style={{ flex: 1 }} key=\"spacer\" />].filter(\n            Boolean\n          )}\n        />\n      ),\n      getDataSourcePicker(),\n    ].filter(Boolean);\n\n    return isTopnav && !splitted ? (\n      <div ref={topOfViewRef}>\n        <AppChromeUpdate actions={topNavActions} />\n      </div>\n    ) : (\n      <div ref={topOfViewRef}>\n        <PageToolbar\n          aria-label=\"Explore toolbar\"\n          title={exploreId === ExploreId.left && !isTopnav ? 'Explore' : undefined}\n          pageIcon={exploreId === ExploreId.left && !isTopnav ? 'compass' : undefined}\n          leftItems={isTopnav ? toolbarLeftItemsTopNav : toolbarLeftItems}\n        >\n          {this.renderActions()}\n        </PageToolbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: StoreState, { exploreId }: OwnProps) => {\n  const { syncedTimes } = state.explore;\n  const exploreItem = state.explore[exploreId]!;\n  const { datasourceInstance, datasourceMissing, range, refreshInterval, loading, isLive, isPaused, containerWidth } =\n    exploreItem;\n\n  const hasLiveOption = !!datasourceInstance?.meta?.streaming;\n\n  return {\n    datasourceMissing,\n    datasourceRef: datasourceInstance?.getRef(),\n    datasourceType: datasourceInstance?.type,\n    loading,\n    range,\n    timeZone: getTimeZone(state.user),\n    fiscalYearStartMonth: getFiscalYearStartMonth(state.user),\n    splitted: isSplit(state),\n    refreshInterval,\n    hasLiveOption,\n    isLive,\n    isPaused,\n    syncedTimes,\n    containerWidth,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  changeRefreshInterval,\n  cancelQueries,\n  runQueries,\n  closeSplit: splitClose,\n  split: splitOpen,\n  syncTimes,\n  onChangeTimeZone: updateTimeZoneForSession,\n  onChangeFiscalYearStartMonth: updateFiscalYearStartMonthForSession,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExploreToolbar = connector(UnConnectedExploreToolbar);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { DataFrame, GrafanaTheme2, CoreApp } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nimport FlameGraphContainer from '../../plugins/panel/flamegraph/components/FlameGraphContainer';\n\ninterface Props {\n  dataFrames: DataFrame[];\n}\n\nexport const FlameGraphExploreContainer = (props: Props) => {\n  const styles = useStyles2((theme) => getStyles(theme));\n\n  return (\n    <div className={styles.container}>\n      <FlameGraphContainer data={props.dataFrames[0]} app={CoreApp.Explore} />\n    </div>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  container: css`\n    background: ${theme.colors.background.primary};\n    display: flow-root;\n    padding: 0 ${theme.spacing(1)} ${theme.spacing(1)} ${theme.spacing(1)};\n    border: 1px solid ${theme.components.panel.borderColor};\n    border-radius: ${theme.shape.borderRadius(1)};\n  `,\n});\n","import React, { FC, useState, useEffect } from 'react';\nimport { useInterval } from 'react-use';\n\nimport { Time, TimeProps } from './Time';\n\nconst INTERVAL = 150;\n\nexport interface ElapsedTimeProps extends Omit<TimeProps, 'timeInMs'> {\n  // Use this to reset the timer. Any value is allowed just need to be !== from the previous.\n  // Keep in mind things like [] !== [] or {} !== {}.\n  resetKey?: any;\n}\n\nexport const ElapsedTime: FC<ElapsedTimeProps> = ({ resetKey, humanize, className }) => {\n  const [elapsed, setElapsed] = useState(0); // the current value of elapsed\n\n  // hook that will schedule a interval and then update the elapsed value on every tick.\n  useInterval(() => setElapsed(elapsed + INTERVAL), INTERVAL);\n  // this effect will only be run when resetKey changes. This will reset the elapsed to 0.\n  useEffect(() => setElapsed(0), [resetKey]);\n\n  return <Time timeInMs={elapsed} className={className} humanize={humanize} />;\n};\n","import { css, cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\nimport tinycolor from 'tinycolor2';\n\nimport { LogRowModel, TimeZone, dateTimeFormat, GrafanaTheme2 } from '@grafana/data';\nimport { Icon, Button, Themeable2, withTheme2 } from '@grafana/ui';\n\nimport { LogMessageAnsi } from '../logs/components/LogMessageAnsi';\nimport { getLogRowStyles } from '../logs/components/getLogRowStyles';\n\nimport { ElapsedTime } from './ElapsedTime';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  logsRowsLive: css`\n    label: logs-rows-live;\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n    display: flex;\n    flex-flow: column nowrap;\n    height: 60vh;\n    overflow-y: scroll;\n    :first-child {\n      margin-top: auto !important;\n    }\n  `,\n  logsRowFade: css`\n    label: logs-row-fresh;\n    color: ${theme.colors.text};\n    background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n    animation: fade 1s ease-out 1s 1 normal forwards;\n    @keyframes fade {\n      from {\n        background-color: ${tinycolor(theme.colors.info.transparent).setAlpha(0.25).toString()};\n      }\n      to {\n        background-color: transparent;\n      }\n    }\n  `,\n  logsRowsIndicator: css`\n    font-size: ${theme.typography.h6.fontSize};\n    padding-top: ${theme.spacing(1)};\n    display: flex;\n    align-items: center;\n  `,\n  button: css`\n    margin-right: ${theme.spacing(1)};\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n});\n\nexport interface Props extends Themeable2 {\n  logRows?: LogRowModel[];\n  timeZone: TimeZone;\n  stopLive: () => void;\n  onPause: () => void;\n  onResume: () => void;\n  isPaused: boolean;\n}\n\ninterface State {\n  logRowsToRender?: LogRowModel[];\n}\n\nclass LiveLogs extends PureComponent<Props, State> {\n  private liveEndDiv: HTMLDivElement | null = null;\n  private scrollContainerRef = React.createRef<HTMLTableSectionElement>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      logRowsToRender: props.logRows,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, state: State) {\n    if (!nextProps.isPaused) {\n      return {\n        // We update what we show only if not paused. We keep any background subscriptions running and keep updating\n        // our state, but we do not show the updates, this allows us start again showing correct result after resuming\n        // without creating a gap in the log results.\n        logRowsToRender: nextProps.logRows,\n      };\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Handle pausing when user scrolls up so that we stop resetting his position to the bottom when new row arrives.\n   * We do not need to throttle it here much, adding new rows should be throttled/buffered itself in the query epics\n   * and after you pause we remove the handler and add it after you manually resume, so this should not be fired often.\n   */\n  onScroll = (event: React.SyntheticEvent) => {\n    const { isPaused, onPause } = this.props;\n    const { scrollTop, clientHeight, scrollHeight } = event.currentTarget;\n    const distanceFromBottom = scrollHeight - (scrollTop + clientHeight);\n    if (distanceFromBottom >= 5 && !isPaused) {\n      onPause();\n    }\n  };\n\n  rowsToRender = () => {\n    const { isPaused } = this.props;\n    let { logRowsToRender: rowsToRender = [] } = this.state;\n    if (!isPaused) {\n      // A perf optimisation here. Show just 100 rows when streaming and full length when the streaming is paused.\n      rowsToRender = rowsToRender.slice(-100);\n    }\n    return rowsToRender;\n  };\n\n  render() {\n    const { theme, timeZone, onPause, onResume, isPaused } = this.props;\n    const styles = getStyles(theme);\n    const { logsRow, logsRowLocalTime, logsRowMessage } = getLogRowStyles(theme);\n\n    return (\n      <div>\n        <table className={styles.fullWidth}>\n          <tbody\n            onScroll={isPaused ? undefined : this.onScroll}\n            className={styles.logsRowsLive}\n            ref={this.scrollContainerRef}\n          >\n            {this.rowsToRender().map((row: LogRowModel) => {\n              return (\n                <tr className={cx(logsRow, styles.logsRowFade)} key={row.uid}>\n                  <td className={logsRowLocalTime}>{dateTimeFormat(row.timeEpochMs, { timeZone })}</td>\n                  <td className={logsRowMessage}>{row.hasAnsi ? <LogMessageAnsi value={row.raw} /> : row.entry}</td>\n                </tr>\n              );\n            })}\n            <tr\n              ref={(element) => {\n                this.liveEndDiv = element;\n                // This is triggered on every update so on every new row. It keeps the view scrolled at the bottom by\n                // default.\n                // As scrollTo is not implemented in JSDOM it needs to be part of the condition\n                if (this.liveEndDiv && this.scrollContainerRef.current?.scrollTo && !isPaused) {\n                  this.scrollContainerRef.current?.scrollTo(0, this.scrollContainerRef.current.scrollHeight);\n                }\n              }}\n            />\n          </tbody>\n        </table>\n        <div className={styles.logsRowsIndicator}>\n          <Button variant=\"secondary\" onClick={isPaused ? onResume : onPause} className={styles.button}>\n            <Icon name={isPaused ? 'play' : 'pause'} />\n            &nbsp;\n            {isPaused ? 'Resume' : 'Pause'}\n          </Button>\n          <Button variant=\"secondary\" onClick={this.props.stopLive} className={styles.button}>\n            <Icon name=\"square-shape\" size=\"lg\" type=\"mono\" />\n            &nbsp; Exit live mode\n          </Button>\n          {isPaused || (\n            <span>\n              Last line received: <ElapsedTime resetKey={this.props.logRows} humanize={true} /> ago\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const LiveLogsWithTheme = withTheme2(LiveLogs);\n","import { css } from '@emotion/css';\nimport React, { memo } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { useStyles2 } from '@grafana/ui';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  metaContainer: css`\n    flex: 1;\n    color: ${theme.colors.text.secondary};\n    margin-bottom: ${theme.spacing(2)};\n    min-width: 30%;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  metaItem: css`\n    margin-right: ${theme.spacing(2)};\n    margin-top: ${theme.spacing(0.5)};\n    display: flex;\n    align-items: center;\n\n    .logs-meta-item__error {\n      color: ${theme.colors.error.text};\n    }\n  `,\n  metaLabel: css`\n    margin-right: calc(${theme.spacing(2)} / 2);\n    font-size: ${theme.typography.bodySmall.fontSize};\n    font-weight: ${theme.typography.fontWeightMedium};\n  `,\n  metaValue: css`\n    font-family: ${theme.typography.fontFamilyMonospace};\n    font-size: ${theme.typography.bodySmall.fontSize};\n  `,\n});\n\nexport interface MetaItemProps {\n  label?: string;\n  value: string | JSX.Element;\n}\n\nconst MetaInfoItem = memo(function MetaInfoItem(props: MetaItemProps) {\n  const style = useStyles2(getStyles);\n  const { label, value } = props;\n\n  return (\n    <div data-testid=\"meta-info-text-item\" className={style.metaItem}>\n      {label && <span className={style.metaLabel}>{label}:</span>}\n      <span className={style.metaValue}>{value}</span>\n    </div>\n  );\n});\n\ninterface MetaInfoTextProps {\n  metaItems: MetaItemProps[];\n}\n\nexport const MetaInfoText = memo(function MetaInfoText(props: MetaInfoTextProps) {\n  const style = useStyles2(getStyles);\n  const { metaItems } = props;\n\n  return (\n    <div className={style.metaContainer} data-testid=\"meta-info-text\">\n      {metaItems.map((item, index) => (\n        <MetaInfoItem key={`${index}-${item.label}`} label={item.label} value={item.value} />\n      ))}\n    </div>\n  );\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { LogsDedupStrategy, LogsMetaItem, LogsMetaKind, LogRowModel } from '@grafana/data';\nimport { Button, ToolbarButton, Tooltip, useStyles2 } from '@grafana/ui';\n\nimport { downloadLogsModelAsTxt } from '../inspector/utils/download';\nimport { LogLabels } from '../logs/components/LogLabels';\nimport { MAX_CHARACTERS } from '../logs/components/LogRowMessage';\n\nimport { MetaInfoText, MetaItemProps } from './MetaInfoText';\n\nconst getStyles = () => ({\n  metaContainer: css`\n    flex: 1;\n    display: flex;\n    flex-wrap: wrap;\n  `,\n});\n\nexport type Props = {\n  meta: LogsMetaItem[];\n  dedupStrategy: LogsDedupStrategy;\n  dedupCount: number;\n  showDetectedFields: string[];\n  hasUnescapedContent: boolean;\n  forceEscape: boolean;\n  logRows: LogRowModel[];\n  onEscapeNewlines: () => void;\n  clearDetectedFields: () => void;\n};\n\nexport const LogsMetaRow = React.memo(\n  ({\n    meta,\n    dedupStrategy,\n    dedupCount,\n    showDetectedFields,\n    clearDetectedFields,\n    hasUnescapedContent,\n    forceEscape,\n    onEscapeNewlines,\n    logRows,\n  }: Props) => {\n    const style = useStyles2(getStyles);\n\n    const downloadLogs = () => {\n      downloadLogsModelAsTxt({ meta, rows: logRows }, 'Explore');\n    };\n\n    const logsMetaItem: Array<LogsMetaItem | MetaItemProps> = [...meta];\n\n    // Add deduplication info\n    if (dedupStrategy !== LogsDedupStrategy.none) {\n      logsMetaItem.push({\n        label: 'Dedup count',\n        value: dedupCount,\n        kind: LogsMetaKind.Number,\n      });\n    }\n    // Add info about limit for highlighting\n    if (logRows.some((r) => r.entry.length > MAX_CHARACTERS)) {\n      logsMetaItem.push({\n        label: 'Info',\n        value: 'Logs with more than 100,000 characters could not be parsed and highlighted',\n        kind: LogsMetaKind.String,\n      });\n    }\n\n    // Add detected fields info\n    if (showDetectedFields?.length > 0) {\n      logsMetaItem.push(\n        {\n          label: 'Showing only detected fields',\n          value: renderMetaItem(showDetectedFields, LogsMetaKind.LabelsMap),\n        },\n        {\n          label: '',\n          value: (\n            <Button variant=\"secondary\" size=\"sm\" onClick={clearDetectedFields}>\n              Show original line\n            </Button>\n          ),\n        }\n      );\n    }\n\n    // Add unescaped content info\n    if (hasUnescapedContent) {\n      logsMetaItem.push({\n        label: 'Your logs might have incorrectly escaped content',\n        value: (\n          <Tooltip\n            content=\"Fix incorrectly escaped newline and tab sequences in log lines. Manually review the results to confirm that the replacements are correct.\"\n            placement=\"right\"\n          >\n            <Button variant=\"secondary\" size=\"sm\" onClick={onEscapeNewlines}>\n              {forceEscape ? 'Remove escaping' : 'Escape newlines'}\n            </Button>\n          </Tooltip>\n        ),\n      });\n    }\n    return (\n      <>\n        {logsMetaItem && (\n          <div className={style.metaContainer}>\n            <MetaInfoText\n              metaItems={logsMetaItem.map((item) => {\n                return {\n                  label: item.label,\n                  value: 'kind' in item ? renderMetaItem(item.value, item.kind) : item.value,\n                };\n              })}\n            />\n            <ToolbarButton onClick={downloadLogs} variant=\"default\" icon=\"download-alt\">\n              Download logs\n            </ToolbarButton>\n          </div>\n        )}\n      </>\n    );\n  }\n);\n\nLogsMetaRow.displayName = 'LogsMetaRow';\n\nfunction renderMetaItem(value: any, kind: LogsMetaKind) {\n  if (kind === LogsMetaKind.LabelsMap) {\n    return <LogLabels labels={value} />;\n  } else if (kind === LogsMetaKind.Error) {\n    return <span className=\"logs-meta-item__error\">{value}</span>;\n  }\n  return value;\n}\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { dateTimeFormat, systemDateFormats, TimeZone, AbsoluteTimeRange, GrafanaTheme2 } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { CustomScrollbar, Spinner, useTheme2, clearButtonStyles } from '@grafana/ui';\n\nimport { LogsPage } from './LogsNavigation';\n\ntype Props = {\n  pages: LogsPage[];\n  currentPageIndex: number;\n  oldestLogsFirst: boolean;\n  timeZone: TimeZone;\n  loading: boolean;\n  changeTime: (range: AbsoluteTimeRange) => void;\n};\n\nexport function LogsNavigationPages({\n  pages,\n  currentPageIndex,\n  oldestLogsFirst,\n  timeZone,\n  loading,\n  changeTime,\n}: Props) {\n  const formatTime = (time: number) => {\n    return `${dateTimeFormat(time, {\n      format: systemDateFormats.interval.second,\n      timeZone: timeZone,\n    })}`;\n  };\n\n  const createPageContent = (page: LogsPage, index: number) => {\n    if (currentPageIndex === index && loading) {\n      return <Spinner />;\n    }\n    const topContent = formatTime(oldestLogsFirst ? page.logsRange.from : page.logsRange.to);\n    const bottomContent = formatTime(oldestLogsFirst ? page.logsRange.to : page.logsRange.from);\n    return `${topContent} — ${bottomContent}`;\n  };\n\n  const theme = useTheme2();\n  const styles = getStyles(theme, loading);\n\n  return (\n    <CustomScrollbar autoHide>\n      <div className={styles.pagesWrapper} data-testid=\"logsNavigationPages\">\n        <div className={styles.pagesContainer}>\n          {pages.map((page: LogsPage, index: number) => (\n            <button\n              type=\"button\"\n              data-testid={`page${index + 1}`}\n              className={styles.page}\n              key={page.queryRange.to}\n              onClick={() => {\n                reportInteraction('grafana_explore_logs_pagination_clicked', {\n                  pageType: 'page',\n                  pageNumber: index + 1,\n                });\n                !loading && changeTime({ from: page.queryRange.from, to: page.queryRange.to });\n              }}\n            >\n              <div className={cx(styles.line, { selectedBg: currentPageIndex === index })} />\n              <div className={cx(styles.time, { selectedText: currentPageIndex === index })}>\n                {createPageContent(page, index)}\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </CustomScrollbar>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2, loading: boolean) => {\n  return {\n    pagesWrapper: css`\n      height: 100%;\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      flex-direction: column;\n      overflow-y: scroll;\n      &::after {\n        content: '';\n        display: block;\n        background: repeating-linear-gradient(\n          135deg,\n          ${theme.colors.background.primary},\n          ${theme.colors.background.primary} 5px,\n          ${theme.colors.background.secondary} 5px,\n          ${theme.colors.background.secondary} 15px\n        );\n        width: 3px;\n        height: inherit;\n        margin-bottom: 8px;\n      }\n    `,\n    pagesContainer: css`\n      display: flex;\n      padding: 0;\n      flex-direction: column;\n    `,\n    page: css`\n      ${clearButtonStyles(theme)}\n      display: flex;\n      margin: ${theme.spacing(2)} 0;\n      cursor: ${loading ? 'auto' : 'pointer'};\n      white-space: normal;\n      .selectedBg {\n        background: ${theme.colors.primary.main};\n      }\n      .selectedText {\n        color: ${theme.colors.primary.main};\n      }\n    `,\n    line: css`\n      width: 3px;\n      height: 100%;\n      align-items: center;\n      background: ${theme.colors.text.secondary};\n    `,\n    time: css`\n      width: 60px;\n      min-height: 80px;\n      font-size: ${theme.v1.typography.size.sm};\n      padding-left: ${theme.spacing(0.5)};\n      display: flex;\n      align-items: center;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport { isEqual } from 'lodash';\nimport React, { memo, useEffect, useRef, useState } from 'react';\n\nimport { AbsoluteTimeRange, DataQuery, GrafanaTheme2, LogsSortOrder, TimeZone } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Button, Icon, Spinner, useTheme2 } from '@grafana/ui';\nimport { TOP_BAR_LEVEL_HEIGHT } from 'app/core/components/AppChrome/types';\n\nimport { LogsNavigationPages } from './LogsNavigationPages';\n\ntype Props = {\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  queries: DataQuery[];\n  loading: boolean;\n  visibleRange: AbsoluteTimeRange;\n  logsSortOrder?: LogsSortOrder | null;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  scrollToTopLogs: () => void;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n};\n\nexport type LogsPage = {\n  logsRange: AbsoluteTimeRange;\n  queryRange: AbsoluteTimeRange;\n};\n\nfunction LogsNavigation({\n  absoluteRange,\n  logsSortOrder,\n  timeZone,\n  loading,\n  onChangeTime,\n  scrollToTopLogs,\n  visibleRange,\n  queries,\n  clearCache,\n  addResultsToCache,\n}: Props) {\n  const [pages, setPages] = useState<LogsPage[]>([]);\n  const [currentPageIndex, setCurrentPageIndex] = useState(0);\n\n  // These refs are to determine, if we want to clear up logs navigation when totally new query is run\n  const expectedQueriesRef = useRef<DataQuery[]>();\n  const expectedRangeRef = useRef<AbsoluteTimeRange>();\n  // This ref is to store range span for future queres based on firstly selected time range\n  // e.g. if last 5 min selected, always run 5 min range\n  const rangeSpanRef = useRef(0);\n\n  const oldestLogsFirst = logsSortOrder === LogsSortOrder.Ascending;\n  const onFirstPage = oldestLogsFirst ? currentPageIndex === pages.length - 1 : currentPageIndex === 0;\n  const onLastPage = oldestLogsFirst ? currentPageIndex === 0 : currentPageIndex === pages.length - 1;\n  const theme = useTheme2();\n  const styles = getStyles(theme, oldestLogsFirst, loading);\n\n  // Main effect to set pages and index\n  useEffect(() => {\n    const newPage = { logsRange: visibleRange, queryRange: absoluteRange };\n    let newPages: LogsPage[] = [];\n    // We want to start new pagination if queries change or if absolute range is different than expected\n    if (!isEqual(expectedRangeRef.current, absoluteRange) || !isEqual(expectedQueriesRef.current, queries)) {\n      clearCache();\n      setPages([newPage]);\n      setCurrentPageIndex(0);\n      expectedQueriesRef.current = queries;\n      rangeSpanRef.current = absoluteRange.to - absoluteRange.from;\n    } else {\n      setPages((pages) => {\n        // Remove duplicates with new query\n        newPages = pages.filter((page) => !isEqual(newPage.queryRange, page.queryRange));\n        // Sort pages based on logsOrder so they visually align with displayed logs\n        newPages = [...newPages, newPage].sort((a, b) => sortPages(a, b, logsSortOrder));\n        // Set new pages\n\n        return newPages;\n      });\n\n      // Set current page index\n      const index = newPages.findIndex((page) => page.queryRange.to === absoluteRange.to);\n      setCurrentPageIndex(index);\n    }\n    addResultsToCache();\n  }, [visibleRange, absoluteRange, logsSortOrder, queries, clearCache, addResultsToCache]);\n\n  useEffect(() => {\n    clearCache();\n    // We can't enforce the eslint rule here because we only want to run when component is mounted.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const changeTime = ({ from, to }: AbsoluteTimeRange) => {\n    expectedRangeRef.current = { from, to };\n    onChangeTime({ from, to });\n  };\n\n  const sortPages = (a: LogsPage, b: LogsPage, logsSortOrder?: LogsSortOrder | null) => {\n    if (logsSortOrder === LogsSortOrder.Ascending) {\n      return a.queryRange.to > b.queryRange.to ? 1 : -1;\n    }\n    return a.queryRange.to > b.queryRange.to ? -1 : 1;\n  };\n\n  const olderLogsButton = (\n    <Button\n      data-testid=\"olderLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        //If we are not on the last page, use next page's range\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'olderLogsButton',\n        });\n        if (!onLastPage) {\n          const indexChange = oldestLogsFirst ? -1 : 1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        } else {\n          //If we are on the last page, create new range\n          changeTime({ from: visibleRange.from - rangeSpanRef.current, to: visibleRange.from });\n        }\n      }}\n      disabled={loading}\n    >\n      <div className={styles.navButtonContent}>\n        {loading ? <Spinner /> : <Icon name={oldestLogsFirst ? 'angle-up' : 'angle-down'} size=\"lg\" />}\n        Older logs\n      </div>\n    </Button>\n  );\n\n  const newerLogsButton = (\n    <Button\n      data-testid=\"newerLogsButton\"\n      className={styles.navButton}\n      variant=\"secondary\"\n      onClick={() => {\n        reportInteraction('grafana_explore_logs_pagination_clicked', {\n          pageType: 'newerLogsButton',\n        });\n        //If we are not on the first page, use previous page's range\n        if (!onFirstPage) {\n          const indexChange = oldestLogsFirst ? 1 : -1;\n          changeTime({\n            from: pages[currentPageIndex + indexChange].queryRange.from,\n            to: pages[currentPageIndex + indexChange].queryRange.to,\n          });\n        }\n        //If we are on the first page, button is disabled and we do nothing\n      }}\n      disabled={loading || onFirstPage}\n    >\n      <div className={styles.navButtonContent}>\n        {loading && <Spinner />}\n        {onFirstPage || loading ? null : <Icon name={oldestLogsFirst ? 'angle-down' : 'angle-up'} size=\"lg\" />}\n        {onFirstPage ? 'Start of range' : 'Newer logs'}\n      </div>\n    </Button>\n  );\n\n  return (\n    <div className={styles.navContainer}>\n      {oldestLogsFirst ? olderLogsButton : newerLogsButton}\n      <LogsNavigationPages\n        pages={pages}\n        currentPageIndex={currentPageIndex}\n        oldestLogsFirst={oldestLogsFirst}\n        timeZone={timeZone}\n        loading={loading}\n        changeTime={changeTime}\n      />\n      {oldestLogsFirst ? newerLogsButton : olderLogsButton}\n      <Button\n        data-testid=\"scrollToTop\"\n        className={styles.scrollToTopButton}\n        variant=\"secondary\"\n        onClick={scrollToTopLogs}\n        title=\"Scroll to top\"\n      >\n        <Icon name=\"arrow-up\" size=\"lg\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(LogsNavigation);\n\nconst getStyles = (theme: GrafanaTheme2, oldestLogsFirst: boolean, loading: boolean) => {\n  const navContainerHeight = theme.flags.topnav\n    ? `calc(100vh - 2*${theme.spacing(2)} - 2*${TOP_BAR_LEVEL_HEIGHT}px)`\n    : '95vh';\n  return {\n    navContainer: css`\n      max-height: ${navContainerHeight};\n      display: flex;\n      flex-direction: column;\n      justify-content: ${oldestLogsFirst ? 'flex-start' : 'space-between'};\n      position: sticky;\n      top: ${theme.spacing(2)};\n      right: 0;\n    `,\n    navButton: css`\n      width: 58px;\n      height: 68px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      line-height: 1;\n    `,\n    navButtonContent: css`\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 100%;\n      white-space: normal;\n    `,\n    scrollToTopButton: css`\n      width: 40px;\n      height: 40px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top: ${theme.spacing(1)};\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport React, { useState } from 'react';\n\nimport {\n  AbsoluteTimeRange,\n  DataQueryError,\n  DataQueryResponse,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  TimeZone,\n  EventBus,\n} from '@grafana/data';\nimport { Alert, Button, Collapse, InlineField, TooltipDisplayMode, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { ExploreGraph } from './ExploreGraph';\n\ntype Props = {\n  logsVolumeData: DataQueryResponse | undefined;\n  absoluteRange: AbsoluteTimeRange;\n  logLinesBasedData: DataQueryResponse | undefined;\n  logLinesBasedDataVisibleRange: AbsoluteTimeRange | undefined;\n  timeZone: TimeZone;\n  splitOpen: SplitOpen;\n  width: number;\n  onUpdateTimeRange: (timeRange: AbsoluteTimeRange) => void;\n  onLoadLogsVolume: () => void;\n  onHiddenSeriesChanged: (hiddenSeries: string[]) => void;\n  eventBus: EventBus;\n};\n\nconst SHORT_ERROR_MESSAGE_LIMIT = 100;\n\nfunction ErrorAlert(props: { error: DataQueryError }) {\n  const [isOpen, setIsOpen] = useState(false);\n  // generic get-error-message-logic, taken from\n  // /public/app/features/explore/ErrorContainer.tsx\n  const message = props.error.message || props.error.data?.message || '';\n\n  const showButton = !isOpen && message.length > SHORT_ERROR_MESSAGE_LIMIT;\n\n  return (\n    <Alert title=\"Failed to load log volume for this query\" severity=\"warning\">\n      {showButton ? (\n        <Button\n          variant=\"secondary\"\n          size=\"xs\"\n          onClick={() => {\n            setIsOpen(true);\n          }}\n        >\n          Show details\n        </Button>\n      ) : (\n        message\n      )}\n    </Alert>\n  );\n}\n\nfunction createVisualisationData(\n  logLinesBased: DataQueryResponse | undefined,\n  logLinesBasedVisibleRange: AbsoluteTimeRange | undefined,\n  fullRangeData: DataQueryResponse | undefined,\n  absoluteRange: AbsoluteTimeRange\n):\n  | {\n      logsVolumeData: DataQueryResponse;\n      fullRangeData: boolean;\n      range: AbsoluteTimeRange;\n    }\n  | undefined {\n  if (fullRangeData !== undefined) {\n    return {\n      logsVolumeData: fullRangeData,\n      fullRangeData: true,\n      range: absoluteRange,\n    };\n  }\n\n  if (logLinesBased !== undefined) {\n    return {\n      logsVolumeData: logLinesBased,\n      fullRangeData: false,\n      range: logLinesBasedVisibleRange || absoluteRange,\n    };\n  }\n\n  return undefined;\n}\n\nexport function LogsVolumePanel(props: Props) {\n  const { width, timeZone, splitOpen, onUpdateTimeRange, onLoadLogsVolume, onHiddenSeriesChanged } = props;\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n  const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n  const height = 150;\n\n  const data = createVisualisationData(\n    props.logLinesBasedData,\n    props.logLinesBasedDataVisibleRange,\n    props.logsVolumeData,\n    props.absoluteRange\n  );\n\n  if (data === undefined) {\n    return null;\n  }\n\n  const { logsVolumeData, fullRangeData, range } = data;\n\n  if (logsVolumeData.error !== undefined) {\n    return <ErrorAlert error={logsVolumeData.error} />;\n  }\n\n  let LogsVolumePanelContent;\n\n  if (logsVolumeData?.state === LoadingState.Loading) {\n    LogsVolumePanelContent = <span>Log volume is loading...</span>;\n  } else if (logsVolumeData?.data) {\n    if (logsVolumeData.data.length > 0) {\n      LogsVolumePanelContent = (\n        <ExploreGraph\n          graphStyle=\"lines\"\n          loadingState={LoadingState.Done}\n          data={logsVolumeData.data}\n          height={height}\n          width={width - spacing}\n          absoluteRange={range}\n          onChangeTime={onUpdateTimeRange}\n          timeZone={timeZone}\n          splitOpenFn={splitOpen}\n          tooltipDisplayMode={TooltipDisplayMode.Multi}\n          onHiddenSeriesChanged={onHiddenSeriesChanged}\n          anchorToZero\n          eventBus={props.eventBus}\n        />\n      );\n    } else {\n      LogsVolumePanelContent = <span>No volume data.</span>;\n    }\n  }\n\n  let extraInfo;\n  if (fullRangeData) {\n    const zoomRatio = logsLevelZoomRatio(logsVolumeData, range);\n\n    if (zoomRatio !== undefined && zoomRatio < 1) {\n      extraInfo = (\n        <InlineField label=\"Reload log volume\" transparent>\n          <Button size=\"xs\" icon=\"sync\" variant=\"secondary\" onClick={onLoadLogsVolume} id=\"reload-volume\" />\n        </InlineField>\n      );\n    }\n  } else {\n    extraInfo = (\n      <div className={styles.oldInfoText}>\n        This datasource does not support full-range histograms. The graph is based on the logs seen in the response.\n      </div>\n    );\n  }\n  return (\n    <Collapse label=\"\" isOpen={true}>\n      <div style={{ height }} className={styles.contentContainer}>\n        {LogsVolumePanelContent}\n      </div>\n      <div className={styles.extraInfoContainer}>{extraInfo}</div>\n    </Collapse>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    extraInfoContainer: css`\n      display: flex;\n      justify-content: end;\n      position: absolute;\n      right: 5px;\n      top: 5px;\n    `,\n    contentContainer: css`\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    `,\n    oldInfoText: css`\n      font-size: ${theme.typography.size.sm};\n      color: ${theme.colors.text.secondary};\n    `,\n  };\n};\n\nfunction logsLevelZoomRatio(\n  logsVolumeData: DataQueryResponse | undefined,\n  selectedTimeRange: AbsoluteTimeRange\n): number | undefined {\n  const dataRange = logsVolumeData && logsVolumeData.data[0] && logsVolumeData.data[0].meta?.custom?.absoluteRange;\n  return dataRange ? (selectedTimeRange.from - selectedTimeRange.to) / (dataRange.from - dataRange.to) : undefined;\n}\n","import { css } from '@emotion/css';\nimport { capitalize } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { PureComponent, createRef } from 'react';\n\nimport {\n  rangeUtil,\n  RawTimeRange,\n  LogLevel,\n  TimeZone,\n  AbsoluteTimeRange,\n  LogsDedupStrategy,\n  LogRowModel,\n  LogsDedupDescription,\n  LogsMetaItem,\n  LogsSortOrder,\n  LinkModel,\n  Field,\n  DataQuery,\n  DataFrame,\n  GrafanaTheme2,\n  LoadingState,\n  SplitOpen,\n  DataQueryResponse,\n  CoreApp,\n  DataHoverEvent,\n  DataHoverClearEvent,\n  EventBus,\n} from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport {\n  RadioButtonGroup,\n  Button,\n  InlineField,\n  InlineFieldRow,\n  InlineSwitch,\n  withTheme2,\n  Themeable2,\n  Collapse,\n} from '@grafana/ui';\nimport { dedupLogRows, filterLogLevels } from 'app/core/logsModel';\nimport store from 'app/core/store';\nimport { ExploreId } from 'app/types/explore';\n\nimport { RowContextOptions } from '../logs/components/LogRowContextProvider';\nimport { LogRows } from '../logs/components/LogRows';\n\nimport { LogsMetaRow } from './LogsMetaRow';\nimport LogsNavigation from './LogsNavigation';\nimport { LogsVolumePanel } from './LogsVolumePanel';\nimport { SETTINGS_KEYS } from './utils/logs';\n\ninterface Props extends Themeable2 {\n  width: number;\n  splitOpen: SplitOpen;\n  logRows: LogRowModel[];\n  logsMeta?: LogsMetaItem[];\n  logsSeries?: DataFrame[];\n  logsQueries?: DataQuery[];\n  visibleRange?: AbsoluteTimeRange;\n  theme: GrafanaTheme2;\n  loading: boolean;\n  loadingState: LoadingState;\n  absoluteRange: AbsoluteTimeRange;\n  timeZone: TimeZone;\n  scanning?: boolean;\n  scanRange?: RawTimeRange;\n  exploreId: ExploreId;\n  datasourceType?: string;\n  logsVolumeEnabled: boolean;\n  logsVolumeData: DataQueryResponse | undefined;\n  scrollElement?: HTMLDivElement;\n  onSetLogsVolumeEnabled: (enabled: boolean) => void;\n  loadLogsVolumeData: (exploreId: ExploreId) => void;\n  showContextToggle?: (row?: LogRowModel) => boolean;\n  onChangeTime: (range: AbsoluteTimeRange) => void;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning?: () => void;\n  onStopScanning?: () => void;\n  getRowContext?: (row: LogRowModel, options?: RowContextOptions) => Promise<any>;\n  getFieldLinks: (field: Field, rowIndex: number, dataFrame: DataFrame) => Array<LinkModel<Field>>;\n  addResultsToCache: () => void;\n  clearCache: () => void;\n  eventBus: EventBus;\n}\n\ninterface State {\n  showLabels: boolean;\n  showTime: boolean;\n  wrapLogMessage: boolean;\n  prettifyLogMessage: boolean;\n  dedupStrategy: LogsDedupStrategy;\n  hiddenLogLevels: LogLevel[];\n  logsSortOrder: LogsSortOrder | null;\n  isFlipping: boolean;\n  showDetectedFields: string[];\n  forceEscape: boolean;\n}\n\n// We need to override css overflow of divs in Collapse element to enable sticky Logs navigation\nconst styleOverridesForStickyNavigation = css`\n  & > div {\n    overflow: visible;\n    & > div {\n      overflow: visible;\n    }\n  }\n`;\n\nclass UnthemedLogs extends PureComponent<Props, State> {\n  flipOrderTimer?: number;\n  cancelFlippingTimer?: number;\n  topLogsRef = createRef<HTMLDivElement>();\n  logsVolumeEventBus: EventBus;\n\n  state: State = {\n    showLabels: store.getBool(SETTINGS_KEYS.showLabels, false),\n    showTime: store.getBool(SETTINGS_KEYS.showTime, true),\n    wrapLogMessage: store.getBool(SETTINGS_KEYS.wrapLogMessage, true),\n    prettifyLogMessage: store.getBool(SETTINGS_KEYS.prettifyLogMessage, false),\n    dedupStrategy: LogsDedupStrategy.none,\n    hiddenLogLevels: [],\n    logsSortOrder: store.get(SETTINGS_KEYS.logsSortOrder) || LogsSortOrder.Descending,\n    isFlipping: false,\n    showDetectedFields: [],\n    forceEscape: false,\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.logsVolumeEventBus = props.eventBus.newScopedBus('logsvolume', { onlyLocal: false });\n  }\n\n  componentWillUnmount() {\n    if (this.flipOrderTimer) {\n      window.clearTimeout(this.flipOrderTimer);\n    }\n\n    if (this.cancelFlippingTimer) {\n      window.clearTimeout(this.cancelFlippingTimer);\n    }\n  }\n\n  onLogRowHover = (row?: LogRowModel) => {\n    if (!row) {\n      this.props.eventBus.publish(new DataHoverClearEvent());\n    } else {\n      this.props.eventBus.publish(\n        new DataHoverEvent({\n          point: {\n            time: row.timeEpochMs,\n          },\n        })\n      );\n    }\n  };\n\n  onChangeLogsSortOrder = () => {\n    this.setState({ isFlipping: true });\n    // we are using setTimeout here to make sure that disabled button is rendered before the rendering of reordered logs\n    this.flipOrderTimer = window.setTimeout(() => {\n      this.setState((prevState) => {\n        const newSortOrder =\n          prevState.logsSortOrder === LogsSortOrder.Descending ? LogsSortOrder.Ascending : LogsSortOrder.Descending;\n        store.set(SETTINGS_KEYS.logsSortOrder, newSortOrder);\n        return { logsSortOrder: newSortOrder };\n      });\n    }, 0);\n    this.cancelFlippingTimer = window.setTimeout(() => this.setState({ isFlipping: false }), 1000);\n  };\n\n  onEscapeNewlines = () => {\n    this.setState((prevState) => ({\n      forceEscape: !prevState.forceEscape,\n    }));\n  };\n\n  onChangeDedup = (dedupStrategy: LogsDedupStrategy) => {\n    reportInteraction('grafana_explore_logs_deduplication_clicked', {\n      deduplicationType: dedupStrategy,\n      datasourceType: this.props.datasourceType,\n    });\n    this.setState({ dedupStrategy });\n  };\n\n  onChangeLabels = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showLabels = target.checked;\n      this.setState({\n        showLabels,\n      });\n      store.set(SETTINGS_KEYS.showLabels, showLabels);\n    }\n  };\n\n  onChangeTime = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const showTime = target.checked;\n      this.setState({\n        showTime,\n      });\n      store.set(SETTINGS_KEYS.showTime, showTime);\n    }\n  };\n\n  onChangeWrapLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const wrapLogMessage = target.checked;\n      this.setState({\n        wrapLogMessage,\n      });\n      store.set(SETTINGS_KEYS.wrapLogMessage, wrapLogMessage);\n    }\n  };\n\n  onChangePrettifyLogMessage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = event;\n    if (target) {\n      const prettifyLogMessage = target.checked;\n      this.setState({\n        prettifyLogMessage,\n      });\n      store.set(SETTINGS_KEYS.prettifyLogMessage, prettifyLogMessage);\n    }\n  };\n\n  onToggleLogLevel = (hiddenRawLevels: string[]) => {\n    const hiddenLogLevels = hiddenRawLevels.map((level) => LogLevel[level as LogLevel]);\n    this.setState({ hiddenLogLevels });\n  };\n\n  onToggleLogsVolumeCollapse = (isOpen: boolean) => {\n    this.props.onSetLogsVolumeEnabled(isOpen);\n    reportInteraction('grafana_explore_logs_histogram_toggle_clicked', {\n      datasourceType: this.props.datasourceType,\n      type: isOpen ? 'open' : 'close',\n    });\n  };\n\n  onClickScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStartScanning) {\n      this.props.onStartScanning();\n    }\n  };\n\n  onClickStopScan = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (this.props.onStopScanning) {\n      this.props.onStopScanning();\n    }\n  };\n\n  showDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n\n    if (index === -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.concat(key),\n        };\n      });\n    }\n  };\n\n  hideDetectedField = (key: string) => {\n    const index = this.state.showDetectedFields.indexOf(key);\n    if (index > -1) {\n      this.setState((state) => {\n        return {\n          showDetectedFields: state.showDetectedFields.filter((k) => key !== k),\n        };\n      });\n    }\n  };\n\n  clearDetectedFields = () => {\n    this.setState((state) => {\n      return {\n        showDetectedFields: [],\n      };\n    });\n  };\n\n  checkUnescapedContent = memoizeOne((logRows: LogRowModel[]) => {\n    return !!logRows.some((r) => r.hasUnescapedContent);\n  });\n\n  dedupRows = memoizeOne((logRows: LogRowModel[], dedupStrategy: LogsDedupStrategy) => {\n    const dedupedRows = dedupLogRows(logRows, dedupStrategy);\n    const dedupCount = dedupedRows.reduce((sum, row) => (row.duplicates ? sum + row.duplicates : sum), 0);\n    return { dedupedRows, dedupCount };\n  });\n\n  filterRows = memoizeOne((logRows: LogRowModel[], hiddenLogLevels: LogLevel[]) => {\n    return filterLogLevels(logRows, new Set(hiddenLogLevels));\n  });\n\n  createNavigationRange = memoizeOne((logRows: LogRowModel[]): { from: number; to: number } | undefined => {\n    if (!logRows || logRows.length === 0) {\n      return undefined;\n    }\n    const firstTimeStamp = logRows[0].timeEpochMs;\n    const lastTimeStamp = logRows[logRows.length - 1].timeEpochMs;\n\n    if (lastTimeStamp < firstTimeStamp) {\n      return { from: lastTimeStamp, to: firstTimeStamp };\n    }\n\n    return { from: firstTimeStamp, to: lastTimeStamp };\n  });\n\n  scrollToTopLogs = () => this.topLogsRef.current?.scrollIntoView();\n\n  render() {\n    const {\n      width,\n      splitOpen,\n      logRows,\n      logsMeta,\n      logsSeries,\n      visibleRange,\n      logsVolumeEnabled,\n      logsVolumeData,\n      loadLogsVolumeData,\n      loading = false,\n      loadingState,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      timeZone,\n      scanning,\n      scanRange,\n      showContextToggle,\n      absoluteRange,\n      onChangeTime,\n      getFieldLinks,\n      theme,\n      logsQueries,\n      clearCache,\n      addResultsToCache,\n      exploreId,\n      scrollElement,\n    } = this.props;\n\n    const {\n      showLabels,\n      showTime,\n      wrapLogMessage,\n      prettifyLogMessage,\n      dedupStrategy,\n      hiddenLogLevels,\n      logsSortOrder,\n      isFlipping,\n      showDetectedFields,\n      forceEscape,\n    } = this.state;\n\n    const styles = getStyles(theme, wrapLogMessage);\n    const hasData = logRows && logRows.length > 0;\n    const hasUnescapedContent = this.checkUnescapedContent(logRows);\n\n    const filteredLogs = this.filterRows(logRows, hiddenLogLevels);\n    const { dedupedRows, dedupCount } = this.dedupRows(filteredLogs, dedupStrategy);\n    const navigationRange = this.createNavigationRange(logRows);\n\n    const scanText = scanRange ? `Scanning ${rangeUtil.describeTimeRange(scanRange)}` : 'Scanning...';\n\n    return (\n      <>\n        <Collapse label=\"Logs volume\" collapsible isOpen={logsVolumeEnabled} onToggle={this.onToggleLogsVolumeCollapse}>\n          {logsVolumeEnabled && (\n            <LogsVolumePanel\n              absoluteRange={absoluteRange}\n              width={width}\n              logsVolumeData={logsVolumeData}\n              logLinesBasedData={\n                logsSeries\n                  ? {\n                      data: logsSeries,\n                      state: loadingState,\n                    }\n                  : undefined\n              }\n              logLinesBasedDataVisibleRange={visibleRange}\n              onUpdateTimeRange={onChangeTime}\n              timeZone={timeZone}\n              splitOpen={splitOpen}\n              onLoadLogsVolume={() => loadLogsVolumeData(exploreId)}\n              onHiddenSeriesChanged={this.onToggleLogLevel}\n              eventBus={this.logsVolumeEventBus}\n            />\n          )}\n        </Collapse>\n        <Collapse label=\"Logs\" loading={loading} isOpen className={styleOverridesForStickyNavigation}>\n          <div className={styles.logOptions} ref={this.topLogsRef}>\n            <InlineFieldRow>\n              <InlineField label=\"Time\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={showTime}\n                  onChange={this.onChangeTime}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`show-time_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Unique labels\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={showLabels}\n                  onChange={this.onChangeLabels}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`unique-labels_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Wrap lines\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={wrapLogMessage}\n                  onChange={this.onChangeWrapLogMessage}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`wrap-lines_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Prettify JSON\" className={styles.horizontalInlineLabel} transparent>\n                <InlineSwitch\n                  value={prettifyLogMessage}\n                  onChange={this.onChangePrettifyLogMessage}\n                  className={styles.horizontalInlineSwitch}\n                  transparent\n                  id={`prettify_${exploreId}`}\n                />\n              </InlineField>\n              <InlineField label=\"Dedup\" className={styles.horizontalInlineLabel} transparent>\n                <RadioButtonGroup\n                  options={Object.values(LogsDedupStrategy).map((dedupType) => ({\n                    label: capitalize(dedupType),\n                    value: dedupType,\n                    description: LogsDedupDescription[dedupType],\n                  }))}\n                  value={dedupStrategy}\n                  onChange={this.onChangeDedup}\n                  className={styles.radioButtons}\n                />\n              </InlineField>\n            </InlineFieldRow>\n            <div>\n              <InlineField label=\"Display results\" className={styles.horizontalInlineLabel} transparent>\n                <RadioButtonGroup\n                  disabled={isFlipping}\n                  options={[\n                    {\n                      label: 'Newest first',\n                      value: LogsSortOrder.Descending,\n                      description: 'Show results newest to oldest',\n                    },\n                    {\n                      label: 'Oldest first',\n                      value: LogsSortOrder.Ascending,\n                      description: 'Show results oldest to newest',\n                    },\n                  ]}\n                  value={logsSortOrder}\n                  onChange={this.onChangeLogsSortOrder}\n                  className={styles.radioButtons}\n                />\n              </InlineField>\n            </div>\n          </div>\n          <LogsMetaRow\n            logRows={logRows}\n            meta={logsMeta || []}\n            dedupStrategy={dedupStrategy}\n            dedupCount={dedupCount}\n            hasUnescapedContent={hasUnescapedContent}\n            forceEscape={forceEscape}\n            showDetectedFields={showDetectedFields}\n            onEscapeNewlines={this.onEscapeNewlines}\n            clearDetectedFields={this.clearDetectedFields}\n          />\n          <div className={styles.logsSection}>\n            <div className={styles.logRows} data-testid=\"logRows\">\n              <LogRows\n                logRows={logRows}\n                deduplicatedRows={dedupedRows}\n                dedupStrategy={dedupStrategy}\n                getRowContext={this.props.getRowContext}\n                onClickFilterLabel={onClickFilterLabel}\n                onClickFilterOutLabel={onClickFilterOutLabel}\n                showContextToggle={showContextToggle}\n                showLabels={showLabels}\n                showTime={showTime}\n                enableLogDetails={true}\n                forceEscape={forceEscape}\n                wrapLogMessage={wrapLogMessage}\n                prettifyLogMessage={prettifyLogMessage}\n                timeZone={timeZone}\n                getFieldLinks={getFieldLinks}\n                logsSortOrder={logsSortOrder}\n                showDetectedFields={showDetectedFields}\n                onClickShowDetectedField={this.showDetectedField}\n                onClickHideDetectedField={this.hideDetectedField}\n                app={CoreApp.Explore}\n                scrollElement={scrollElement}\n                onLogRowHover={this.onLogRowHover}\n              />\n            </div>\n            <LogsNavigation\n              logsSortOrder={logsSortOrder}\n              visibleRange={navigationRange ?? absoluteRange}\n              absoluteRange={absoluteRange}\n              timeZone={timeZone}\n              onChangeTime={onChangeTime}\n              loading={loading}\n              queries={logsQueries ?? []}\n              scrollToTopLogs={this.scrollToTopLogs}\n              addResultsToCache={addResultsToCache}\n              clearCache={clearCache}\n            />\n          </div>\n          {!loading && !hasData && !scanning && (\n            <div className={styles.noData}>\n              No logs found.\n              <Button size=\"xs\" fill=\"text\" onClick={this.onClickScan}>\n                Scan for older logs\n              </Button>\n            </div>\n          )}\n          {scanning && (\n            <div className={styles.noData}>\n              <span>{scanText}</span>\n              <Button size=\"xs\" fill=\"text\" onClick={this.onClickStopScan}>\n                Stop scan\n              </Button>\n            </div>\n          )}\n        </Collapse>\n      </>\n    );\n  }\n}\n\nexport const Logs = withTheme2(UnthemedLogs);\n\nconst getStyles = (theme: GrafanaTheme2, wrapLogMessage: boolean) => {\n  return {\n    noData: css`\n      > * {\n        margin-left: 0.5em;\n      }\n    `,\n    logOptions: css`\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-wrap: wrap;\n      background-color: ${theme.colors.background.primary};\n      padding: ${theme.spacing(1, 2)};\n      border-radius: ${theme.shape.borderRadius()};\n      margin: ${theme.spacing(0, 0, 1)};\n      border: 1px solid ${theme.colors.border.medium};\n    `,\n    headerButton: css`\n      margin: ${theme.spacing(0.5, 0, 0, 1)};\n    `,\n    horizontalInlineLabel: css`\n      > label {\n        margin-right: 0;\n      }\n    `,\n    horizontalInlineSwitch: css`\n      padding: 0 ${theme.spacing(1)} 0 0;\n    `,\n    radioButtons: css`\n      margin: 0;\n    `,\n    logsSection: css`\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n    `,\n    logRows: css`\n      overflow-x: ${wrapLogMessage ? 'unset' : 'scroll'};\n      overflow-y: visible;\n      width: 100%;\n    `,\n  };\n};\n","import { css } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst transitionDuration = 500;\n// We add a bit of delay to the transition as another perf optimisation. As at the start we need to render\n// quite a bit of new rows, if we start transition at the same time there can be frame rate drop. This gives time\n// for react to first render them and then do the animation.\nconst transitionDelay = 100;\n\nconst getStyles = memoizeOne(() => {\n  return {\n    logsEnter: css`\n      label: logsEnter;\n      position: absolute;\n      opacity: 0;\n      height: auto;\n      width: 100%;\n    `,\n    logsEnterActive: css`\n      label: logsEnterActive;\n      opacity: 1;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n    logsExit: css`\n      label: logsExit;\n      position: absolute;\n      opacity: 1;\n      height: auto;\n      width: 100%;\n    `,\n    logsExitActive: css`\n      label: logsExitActive;\n      opacity: 0;\n      transition: opacity ${transitionDuration}ms ease-out ${transitionDelay}ms;\n    `,\n  };\n});\n\ntype Props = {\n  children: React.ReactNode;\n  visible: boolean;\n};\n\n/**\n * Cross fade transition component that is tied a bit too much to the logs containers so not very useful elsewhere\n * right now.\n */\nexport function LogsCrossFadeTransition(props: Props) {\n  const { visible, children } = props;\n  const styles = getStyles();\n  return (\n    <CSSTransition\n      in={visible}\n      mountOnEnter={true}\n      unmountOnExit={true}\n      timeout={transitionDuration + transitionDelay}\n      classNames={{\n        enter: styles.logsEnter,\n        enterActive: styles.logsEnterActive,\n        exit: styles.logsExit,\n        exitActive: styles.logsExitActive,\n      }}\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport {\n  AbsoluteTimeRange,\n  Field,\n  hasLogsContextSupport,\n  LoadingState,\n  LogRowModel,\n  RawTimeRange,\n  EventBus,\n  SplitOpen,\n  DataFrame,\n} from '@grafana/data';\nimport { Collapse } from '@grafana/ui';\nimport { StoreState } from 'app/types';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { LiveLogsWithTheme } from './LiveLogs';\nimport { Logs } from './Logs';\nimport { addResultsToCache, clearCache, loadLogsVolumeData, setLogsVolumeEnabled } from './state/query';\nimport { updateTimeRange } from './state/time';\nimport { LiveTailControls } from './useLiveTailControls';\nimport { LogsCrossFadeTransition } from './utils/LogsCrossFadeTransition';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface LogsContainerProps extends PropsFromRedux {\n  width: number;\n  exploreId: ExploreId;\n  scanRange?: RawTimeRange;\n  syncedTimes: boolean;\n  loadingState: LoadingState;\n  scrollElement?: HTMLDivElement;\n  onClickFilterLabel?: (key: string, value: string) => void;\n  onClickFilterOutLabel?: (key: string, value: string) => void;\n  onStartScanning: () => void;\n  onStopScanning: () => void;\n  eventBus: EventBus;\n  splitOpenFn: SplitOpen;\n}\n\nclass LogsContainer extends PureComponent<LogsContainerProps> {\n  onChangeTime = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  getLogRowContext = async (row: LogRowModel, options?: any): Promise<any> => {\n    const { datasourceInstance, logsQueries } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      // we need to find the query, and we need to be very sure that\n      // it's a query from this datasource\n      const query = (logsQueries ?? []).find(\n        (q) => q.refId === row.dataFrame.refId && q.datasource != null && q.datasource.type === datasourceInstance.type\n      );\n      return datasourceInstance.getLogRowContext(row, options, query);\n    }\n\n    return [];\n  };\n\n  showContextToggle = (row?: LogRowModel): boolean => {\n    const { datasourceInstance } = this.props;\n\n    if (hasLogsContextSupport(datasourceInstance)) {\n      return datasourceInstance.showContextToggle(row);\n    }\n\n    return false;\n  };\n\n  getFieldLinks = (field: Field, rowIndex: number, dataFrame: DataFrame) => {\n    const { splitOpenFn, range } = this.props;\n    return getFieldLinksForExplore({ field, rowIndex, splitOpenFn, range, dataFrame });\n  };\n\n  render() {\n    const {\n      loading,\n      loadingState,\n      logRows,\n      logsMeta,\n      logsSeries,\n      logsQueries,\n      logsVolumeData,\n      loadLogsVolumeData,\n      onClickFilterLabel,\n      onClickFilterOutLabel,\n      onStartScanning,\n      onStopScanning,\n      absoluteRange,\n      timeZone,\n      visibleRange,\n      scanning,\n      range,\n      width,\n      splitOpenFn,\n      isLive,\n      exploreId,\n      addResultsToCache,\n      clearCache,\n      scrollElement,\n    } = this.props;\n\n    if (!logRows) {\n      return null;\n    }\n\n    return (\n      <>\n        <LogsCrossFadeTransition visible={isLive}>\n          <Collapse label=\"Logs\" loading={false} isOpen>\n            <LiveTailControls exploreId={exploreId}>\n              {(controls) => (\n                <LiveLogsWithTheme\n                  logRows={logRows}\n                  timeZone={timeZone}\n                  stopLive={controls.stop}\n                  isPaused={this.props.isPaused}\n                  onPause={controls.pause}\n                  onResume={controls.resume}\n                />\n              )}\n            </LiveTailControls>\n          </Collapse>\n        </LogsCrossFadeTransition>\n        <LogsCrossFadeTransition visible={!isLive}>\n          <Logs\n            exploreId={exploreId}\n            datasourceType={this.props.datasourceInstance?.type}\n            logRows={logRows}\n            logsMeta={logsMeta}\n            logsSeries={logsSeries}\n            logsVolumeEnabled={this.props.logsVolumeEnabled}\n            onSetLogsVolumeEnabled={(enabled) => this.props.setLogsVolumeEnabled(exploreId, enabled)}\n            logsVolumeData={logsVolumeData}\n            logsQueries={logsQueries}\n            width={width}\n            splitOpen={splitOpenFn}\n            loading={loading}\n            loadingState={loadingState}\n            loadLogsVolumeData={loadLogsVolumeData}\n            onChangeTime={this.onChangeTime}\n            onClickFilterLabel={onClickFilterLabel}\n            onClickFilterOutLabel={onClickFilterOutLabel}\n            onStartScanning={onStartScanning}\n            onStopScanning={onStopScanning}\n            absoluteRange={absoluteRange}\n            visibleRange={visibleRange}\n            timeZone={timeZone}\n            scanning={scanning}\n            scanRange={range.raw}\n            showContextToggle={this.showContextToggle}\n            getRowContext={this.getLogRowContext}\n            getFieldLinks={this.getFieldLinks}\n            addResultsToCache={() => addResultsToCache(exploreId)}\n            clearCache={() => clearCache(exploreId)}\n            scrollElement={scrollElement}\n            eventBus={this.props.eventBus}\n          />\n        </LogsCrossFadeTransition>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: string }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const {\n    logsResult,\n    loading,\n    scanning,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeEnabled,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  } = item;\n  const timeZone = getTimeZone(state.user);\n\n  return {\n    loading,\n    logRows: logsResult?.rows,\n    logsMeta: logsResult?.meta,\n    logsSeries: logsResult?.series,\n    logsQueries: logsResult?.queries,\n    visibleRange: logsResult?.visibleRange,\n    scanning,\n    timeZone,\n    datasourceInstance,\n    isLive,\n    isPaused,\n    range,\n    absoluteRange,\n    logsVolumeEnabled,\n    logsVolumeDataProvider,\n    logsVolumeData,\n  };\n}\n\nconst mapDispatchToProps = {\n  updateTimeRange,\n  addResultsToCache,\n  clearCache,\n  loadLogsVolumeData,\n  setLogsVolumeEnabled,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(LogsContainer);\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { useStyles2, PanelContainer } from '@grafana/ui';\n\nexport const NoData = () => {\n  const css = useStyles2(getStyles);\n  return (\n    <>\n      <PanelContainer data-testid=\"explore-no-data\" className={css.wrapper}>\n        <span className={css.message}>{'No data'}</span>\n      </PanelContainer>\n    </>\n  );\n};\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    label: no-data-card;\n    padding: ${theme.spacing(3)};\n    background: ${theme.colors.background.primary};\n    border-radius: ${theme.shape.borderRadius(2)};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 1;\n  `,\n  message: css`\n    font-size: ${theme.typography.h2.fontSize};\n    padding: ${theme.spacing(4)};\n    color: ${theme.colors.text.disabled};\n  `,\n});\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { LinkButton, CallToActionCard, Icon, useTheme2 } from '@grafana/ui';\nimport { contextSrv } from 'app/core/core';\nimport { AccessControlAction } from 'app/types';\n\nexport const NoDataSourceCallToAction = () => {\n  const theme = useTheme2();\n\n  const canCreateDataSource =\n    contextSrv.hasPermission(AccessControlAction.DataSourcesCreate) &&\n    contextSrv.hasPermission(AccessControlAction.DataSourcesWrite);\n\n  const message =\n    'Explore requires at least one data source. Once you have added a data source, you can query it here.';\n  const footer = (\n    <>\n      <Icon name=\"rocket\" />\n      <> ProTip: You can also define data sources through configuration files. </>\n      <a\n        href=\"http://docs.grafana.org/administration/provisioning/#datasources?utm_source=explore\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"text-link\"\n      >\n        Learn more\n      </a>\n    </>\n  );\n\n  const ctaElement = (\n    <LinkButton size=\"lg\" href=\"datasources/new\" icon=\"database\" disabled={!canCreateDataSource}>\n      Add data source\n    </LinkButton>\n  );\n\n  const cardClassName = css`\n    max-width: ${theme.breakpoints.values.lg}px;\n    margin-top: ${theme.spacing(2)};\n    align-self: center;\n  `;\n\n  return (\n    <CallToActionCard callToActionElement={ctaElement} className={cardClassName} footer={footer} message={message} />\n  );\n};\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useToggle, useWindowSize } from 'react-use';\n\nimport { applyFieldOverrides, DataFrame, GrafanaTheme2, SplitOpen } from '@grafana/data';\nimport { reportInteraction } from '@grafana/runtime';\nimport { Badge, Collapse, useStyles2, useTheme2 } from '@grafana/ui';\n\nimport { NodeGraph } from '../../plugins/panel/nodeGraph';\nimport { useCategorizeFrames } from '../../plugins/panel/nodeGraph/useCategorizeFrames';\nimport { ExploreId, StoreState } from '../../types';\n\nimport { useLinks } from './utils/links';\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  warningText: css`\n    label: warningText;\n    font-size: ${theme.typography.bodySmall.fontSize};\n    color: ${theme.colors.text.secondary};\n  `,\n});\n\ninterface OwnProps {\n  // Edges and Nodes are separate frames\n  dataFrames: DataFrame[];\n  exploreId: ExploreId;\n  // When showing the node graph together with trace view we do some changes so it works better.\n  withTraceView?: boolean;\n  datasourceType: string;\n  splitOpenFn: SplitOpen;\n}\n\ntype Props = OwnProps & ConnectedProps<typeof connector>;\n\nexport function UnconnectedNodeGraphContainer(props: Props) {\n  const { dataFrames, range, splitOpenFn, withTraceView, datasourceType } = props;\n  const getLinks = useLinks(range, splitOpenFn);\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  // This is implicit dependency that is needed for links to work. At some point when replacing variables in the link\n  // it requires field to have a display property which is added by the overrides even though we don't add any field\n  // overrides in explore.\n  const frames = applyFieldOverrides({\n    fieldConfig: {\n      defaults: {},\n      overrides: [],\n    },\n    data: dataFrames,\n    // We don't need proper replace here as it is only used in getLinks and we use getFieldLinks\n    replaceVariables: (value) => value,\n    theme,\n  });\n\n  const { nodes } = useCategorizeFrames(frames);\n  const [open, toggleOpen] = useToggle(false);\n  const toggled = () => {\n    toggleOpen();\n    reportInteraction('grafana_traces_node_graph_panel_clicked', {\n      datasourceType: datasourceType,\n      expanded: !open,\n    });\n  };\n\n  // Calculate node graph height based on window and top position, with some padding\n  const { height: windowHeight } = useWindowSize();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [top, setTop] = useState(250);\n  useEffect(() => {\n    if (containerRef.current) {\n      const { top } = containerRef.current.getBoundingClientRect();\n      setTop(top);\n    }\n  }, [containerRef]);\n  const height = windowHeight - top - 32;\n\n  const countWarning =\n    withTraceView && nodes[0]?.length > 1000 ? (\n      <span className={styles.warningText}> ({nodes[0].length} nodes, can be slow to load)</span>\n    ) : null;\n\n  return (\n    <Collapse\n      label={\n        <span>\n          Node graph{countWarning}{' '}\n          <Badge text={'Beta'} color={'blue'} icon={'rocket'} tooltip={'This visualization is in beta'} />\n        </span>\n      }\n      collapsible={withTraceView}\n      // We allow collapsing this only when it is shown together with trace view.\n      isOpen={withTraceView ? open : true}\n      onToggle={withTraceView ? () => toggled() : undefined}\n    >\n      <div\n        ref={containerRef}\n        style={\n          withTraceView\n            ? { height: 500 }\n            : {\n                minHeight: 600,\n                height,\n              }\n        }\n      >\n        <NodeGraph dataFrames={frames} getLinks={getLinks} />\n      </div>\n    </Collapse>\n  );\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: OwnProps) {\n  return {\n    range: state.explore[exploreId]!.range,\n  };\n}\n\nconst connector = connect(mapStateToProps, {});\nexport const NodeGraphContainer = connector(UnconnectedNodeGraphContainer);\n","import { createSelector } from '@reduxjs/toolkit';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { CoreApp, DataQuery, DataSourceInstanceSettings } from '@grafana/data';\nimport { getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { getNextRefIdChar } from 'app/core/utils/query';\nimport { useDispatch, useSelector } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { QueryEditorRows } from '../query/components/QueryEditorRows';\n\nimport { runQueries, changeQueriesAction, importQueries } from './state/query';\nimport { getExploreItemSelector } from './state/selectors';\n\ninterface Props {\n  exploreId: ExploreId;\n}\n\nconst makeSelectors = (exploreId: ExploreId) => {\n  const exploreItemSelector = getExploreItemSelector(exploreId);\n  return {\n    getQueries: createSelector(exploreItemSelector, (s) => s!.queries),\n    getQueryResponse: createSelector(exploreItemSelector, (s) => s!.queryResponse),\n    getHistory: createSelector(exploreItemSelector, (s) => s!.history),\n    getEventBridge: createSelector(exploreItemSelector, (s) => s!.eventBridge),\n    getDatasourceInstanceSettings: createSelector(\n      exploreItemSelector,\n      (s) => getDatasourceSrv().getInstanceSettings(s!.datasourceInstance?.uid)!\n    ),\n  };\n};\n\nexport const QueryRows = ({ exploreId }: Props) => {\n  const dispatch = useDispatch();\n  const { getQueries, getDatasourceInstanceSettings, getQueryResponse, getHistory, getEventBridge } = useMemo(\n    () => makeSelectors(exploreId),\n    [exploreId]\n  );\n\n  const queries = useSelector(getQueries)!;\n  const dsSettings = useSelector(getDatasourceInstanceSettings)!;\n  const queryResponse = useSelector(getQueryResponse)!;\n  const history = useSelector(getHistory);\n  const eventBridge = useSelector(getEventBridge);\n\n  const onRunQueries = useCallback(() => {\n    dispatch(runQueries(exploreId));\n  }, [dispatch, exploreId]);\n\n  const onChange = useCallback(\n    (newQueries: DataQuery[]) => {\n      dispatch(changeQueriesAction({ queries: newQueries, exploreId }));\n\n      // if we are removing a query we want to run the remaining ones\n      if (newQueries.length < queries.length) {\n        onRunQueries();\n      }\n    },\n    [dispatch, exploreId, onRunQueries, queries]\n  );\n\n  const onAddQuery = useCallback(\n    (query: DataQuery) => {\n      onChange([...queries, { ...query, refId: getNextRefIdChar(queries) }]);\n    },\n    [onChange, queries]\n  );\n\n  const onMixedDataSourceChange = async (ds: DataSourceInstanceSettings, query: DataQuery) => {\n    const queryDatasource = await getDataSourceSrv().get(query.datasource);\n    const targetDS = await getDataSourceSrv().get({ uid: ds.uid });\n    dispatch(importQueries(exploreId, queries, queryDatasource, targetDS, query.refId));\n  };\n\n  const onQueryCopied = () => {\n    reportInteraction('grafana_explore_query_row_copy');\n  };\n\n  const onQueryRemoved = () => {\n    reportInteraction('grafana_explore_query_row_remove');\n  };\n\n  const onQueryToggled = (queryStatus?: boolean) => {\n    reportInteraction('grafana_query_row_toggle', queryStatus === undefined ? {} : { queryEnabled: queryStatus });\n  };\n\n  return (\n    <QueryEditorRows\n      dsSettings={dsSettings}\n      onDatasourceChange={(ds: DataSourceInstanceSettings, query: DataQuery) => onMixedDataSourceChange(ds, query)}\n      queries={queries}\n      onQueriesChange={onChange}\n      onAddQuery={onAddQuery}\n      onRunQueries={onRunQueries}\n      onQueryCopied={onQueryCopied}\n      onQueryRemoved={onQueryRemoved}\n      onQueryToggled={onQueryToggled}\n      data={queryResponse}\n      app={CoreApp.Explore}\n      history={history}\n      eventBus={eventBridge}\n    />\n  );\n};\n","import React, { FC, CSSProperties } from 'react';\nimport Transition, { ExitHandler } from 'react-transition-group/Transition';\n\ninterface Props {\n  duration: number;\n  children: JSX.Element;\n  in: boolean;\n  unmountOnExit?: boolean;\n  onExited?: ExitHandler<HTMLDivElement>;\n}\n\nexport const FadeIn: FC<Props> = (props) => {\n  const defaultStyle: CSSProperties = {\n    transition: `opacity ${props.duration}ms linear`,\n    opacity: 0,\n  };\n\n  const transitionStyles: { [str: string]: CSSProperties } = {\n    exited: { opacity: 0, display: 'none' },\n    entering: { opacity: 0 },\n    entered: { opacity: 1 },\n    exiting: { opacity: 0 },\n  };\n\n  return (\n    <Transition\n      in={props.in}\n      timeout={props.duration}\n      unmountOnExit={props.unmountOnExit || false}\n      onExited={props.onExited}\n    >\n      {(state) => (\n        <div\n          style={{\n            ...defaultStyle,\n            ...transitionStyles[state],\n          }}\n        >\n          {props.children}\n        </div>\n      )}\n    </Transition>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\nimport { DataQueryError } from '@grafana/data';\nimport { Alert } from '@grafana/ui';\nimport { FadeIn } from 'app/core/components/Animations/FadeIn';\n\nexport interface ErrorContainerProps {\n  queryError?: DataQueryError;\n}\n\nexport const ErrorContainer: FunctionComponent<ErrorContainerProps> = (props) => {\n  const { queryError } = props;\n  const showError = queryError ? true : false;\n  const duration = showError ? 100 : 10;\n  const title = queryError ? 'Query error' : 'Unknown error';\n  const message = queryError?.message || queryError?.data?.message || null;\n\n  return (\n    <FadeIn in={showError} duration={duration}>\n      <Alert severity=\"error\" title={title} topSpacing={2}>\n        {message}\n      </Alert>\n    </FadeIn>\n  );\n};\n","import React from 'react';\n\nimport { LoadingState } from '@grafana/data';\nimport { useSelector } from 'app/types';\n\nimport { ExploreId } from '../../types';\n\nimport { ErrorContainer } from './ErrorContainer';\n\ninterface Props {\n  exploreId: ExploreId;\n}\nexport function ResponseErrorContainer(props: Props) {\n  const queryResponse = useSelector((state) => state.explore[props.exploreId]?.queryResponse);\n  const queryError = queryResponse?.state === LoadingState.Error ? queryResponse?.error : undefined;\n\n  // Errors with ref ids are shown below the corresponding query\n  if (queryError?.refId) {\n    return null;\n  }\n\n  return <ErrorContainer queryError={queryError} />;\n}\n","import { css, cx } from '@emotion/css';\nimport React, { useState, useEffect } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { DataSourceApi, DataQuery, GrafanaTheme2 } from '@grafana/data';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { TextArea, Button, IconButton, useStyles2 } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { copyStringToClipboard } from 'app/core/utils/explore';\nimport { createUrlFromRichHistory, createQueryText } from 'app/core/utils/richHistory';\nimport { createAndCopyShortLink } from 'app/core/utils/shortLinks';\nimport { dispatch } from 'app/store/store';\nimport { StoreState } from 'app/types';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { ShowConfirmModalEvent } from '../../../types/events';\nimport { changeDatasource } from '../state/datasource';\nimport { starHistoryItem, commentHistoryItem, deleteHistoryItem } from '../state/history';\nimport { setQueries } from '../state/query';\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  const { datasourceInstance } = explore[exploreId]!;\n  return {\n    exploreId,\n    datasourceInstance,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeDatasource,\n  deleteHistoryItem,\n  commentHistoryItem,\n  starHistoryItem,\n  setQueries,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps<T extends DataQuery = DataQuery> {\n  query: RichHistoryQuery<T>;\n  dsImg: string;\n  isRemoved: boolean;\n}\n\nexport type Props<T extends DataQuery = DataQuery> = ConnectedProps<typeof connector> & OwnProps<T>;\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  /* Hard-coded value so all buttons and icons on right side of card are aligned */\n  const rightColumnWidth = '240px';\n  const rightColumnContentWidth = '170px';\n\n  /* If datasource was removed, card will have inactive color */\n  const cardColor = theme.colors.background.secondary;\n\n  return {\n    queryCard: css`\n      display: flex;\n      flex-direction: column;\n      border: 1px solid ${theme.colors.border.weak};\n      margin: ${theme.spacing(1)} 0;\n      background-color: ${cardColor};\n      border-radius: ${theme.shape.borderRadius(1)};\n      .starred {\n        color: ${theme.v1.palette.orange};\n      }\n    `,\n    cardRow: css`\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${theme.spacing(1)};\n      border-bottom: none;\n      :first-of-type {\n        border-bottom: 1px solid ${theme.colors.border.weak};\n        padding: ${theme.spacing(0.5, 1)};\n      }\n      img {\n        height: ${theme.typography.fontSize}px;\n        max-width: ${theme.typography.fontSize}px;\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    datasourceContainer: css`\n      display: flex;\n      align-items: center;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n    queryActionButtons: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      font-size: ${theme.typography.size.base};\n      button {\n        margin-left: ${theme.spacing(1)};\n      }\n    `,\n    queryContainer: css`\n      font-weight: ${theme.typography.fontWeightMedium};\n      width: calc(100% - ${rightColumnWidth});\n    `,\n    queryRow: css`\n      border-top: 1px solid ${theme.colors.border.weak};\n      word-break: break-all;\n      padding: 4px 2px;\n      :first-child {\n        border-top: none;\n        padding: 0 0 4px 0;\n      }\n    `,\n    updateCommentContainer: css`\n      width: calc(100% + ${rightColumnWidth});\n      margin-top: ${theme.spacing(1)};\n    `,\n    comment: css`\n      overflow-wrap: break-word;\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-top: ${theme.spacing(0.5)};\n    `,\n    commentButtonRow: css`\n      > * {\n        margin-right: ${theme.spacing(1)};\n      }\n    `,\n    textArea: css`\n      width: 100%;\n    `,\n    runButton: css`\n      max-width: ${rightColumnContentWidth};\n      display: flex;\n      justify-content: flex-end;\n      button {\n        height: auto;\n        padding: ${theme.spacing(0.5, 2)};\n        line-height: 1.4;\n        span {\n          white-space: normal !important;\n        }\n      }\n    `,\n  };\n};\n\nexport function RichHistoryCard(props: Props) {\n  const {\n    query,\n    dsImg,\n    isRemoved,\n    commentHistoryItem,\n    starHistoryItem,\n    deleteHistoryItem,\n    changeDatasource,\n    exploreId,\n    datasourceInstance,\n    setQueries,\n  } = props;\n  const [activeUpdateComment, setActiveUpdateComment] = useState(false);\n  const [comment, setComment] = useState<string | undefined>(query.comment);\n  const [queryDsInstance, setQueryDsInstance] = useState<DataSourceApi | undefined>(undefined);\n\n  useEffect(() => {\n    const getQueryDsInstance = async () => {\n      const ds = await getDataSourceSrv().get(query.datasourceUid);\n      setQueryDsInstance(ds);\n    };\n\n    getQueryDsInstance();\n  }, [query.datasourceUid]);\n\n  const styles = useStyles2(getStyles);\n\n  const onRunQuery = async () => {\n    const queriesToRun = query.queries;\n    const differentDataSource = query.datasourceUid !== datasourceInstance?.uid;\n    if (differentDataSource) {\n      await changeDatasource(exploreId, query.datasourceUid, { importQueries: true });\n      setQueries(exploreId, queriesToRun);\n    } else {\n      setQueries(exploreId, queriesToRun);\n    }\n    reportInteraction('grafana_explore_query_history_run', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      differentDataSource,\n    });\n  };\n\n  const onCopyQuery = () => {\n    const queriesToCopy = query.queries.map((q) => createQueryText(q, queryDsInstance)).join('\\n');\n    copyStringToClipboard(queriesToCopy);\n    dispatch(notifyApp(createSuccessNotification('Query copied to clipboard')));\n  };\n\n  const onCreateShortLink = async () => {\n    const link = createUrlFromRichHistory(query);\n    await createAndCopyShortLink(link);\n  };\n\n  const onDeleteQuery = () => {\n    const performDelete = (queryId: string) => {\n      deleteHistoryItem(queryId);\n      dispatch(notifyApp(createSuccessNotification('Query deleted')));\n      reportInteraction('grafana_explore_query_history_deleted', {\n        queryHistoryEnabled: config.queryHistoryEnabled,\n      });\n    };\n\n    // For starred queries, we want confirmation. For non-starred, we don't.\n    if (query.starred) {\n      appEvents.publish(\n        new ShowConfirmModalEvent({\n          title: 'Delete',\n          text: 'Are you sure you want to permanently delete your starred query?',\n          yesText: 'Delete',\n          icon: 'trash-alt',\n          onConfirm: () => performDelete(query.id),\n        })\n      );\n    } else {\n      performDelete(query.id);\n    }\n  };\n\n  const onStarrQuery = () => {\n    starHistoryItem(query.id, !query.starred);\n    reportInteraction('grafana_explore_query_history_starred', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n      newValue: !query.starred,\n    });\n  };\n\n  const toggleActiveUpdateComment = () => setActiveUpdateComment(!activeUpdateComment);\n\n  const onUpdateComment = () => {\n    commentHistoryItem(query.id, comment);\n    setActiveUpdateComment(false);\n    reportInteraction('grafana_explore_query_history_commented', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  };\n\n  const onCancelUpdateComment = () => {\n    setActiveUpdateComment(false);\n    setComment(query.comment);\n  };\n\n  const onKeyDown = (keyEvent: React.KeyboardEvent) => {\n    if (keyEvent.key === 'Enter' && (keyEvent.shiftKey || keyEvent.ctrlKey)) {\n      onUpdateComment();\n    }\n\n    if (keyEvent.key === 'Escape') {\n      onCancelUpdateComment();\n    }\n  };\n\n  const updateComment = (\n    <div className={styles.updateCommentContainer} aria-label={comment ? 'Update comment form' : 'Add comment form'}>\n      <TextArea\n        value={comment}\n        placeholder={comment ? undefined : 'An optional description of what the query does.'}\n        onChange={(e) => setComment(e.currentTarget.value)}\n        className={styles.textArea}\n      />\n      <div className={styles.commentButtonRow}>\n        <Button onClick={onUpdateComment} aria-label=\"Submit button\">\n          Save comment\n        </Button>\n        <Button variant=\"secondary\" onClick={onCancelUpdateComment}>\n          Cancel\n        </Button>\n      </div>\n    </div>\n  );\n\n  const queryActionButtons = (\n    <div className={styles.queryActionButtons}>\n      <IconButton\n        name=\"comment-alt\"\n        onClick={toggleActiveUpdateComment}\n        title={query.comment?.length > 0 ? 'Edit comment' : 'Add comment'}\n      />\n      <IconButton name=\"copy\" onClick={onCopyQuery} title=\"Copy query to clipboard\" />\n      {!isRemoved && (\n        <IconButton name=\"share-alt\" onClick={onCreateShortLink} title=\"Copy shortened link to clipboard\" />\n      )}\n      <IconButton name=\"trash-alt\" title={'Delete query'} onClick={onDeleteQuery} />\n      <IconButton\n        name={query.starred ? 'favorite' : 'star'}\n        iconType={query.starred ? 'mono' : 'default'}\n        onClick={onStarrQuery}\n        title={query.starred ? 'Unstar query' : 'Star query'}\n      />\n    </div>\n  );\n\n  return (\n    <div className={styles.queryCard} onKeyDown={onKeyDown}>\n      <div className={styles.cardRow}>\n        <div className={styles.datasourceContainer}>\n          <img src={dsImg} aria-label=\"Data source icon\" />\n          <div aria-label=\"Data source name\">\n            {isRemoved ? 'Data source does not exist anymore' : query.datasourceName}\n          </div>\n        </div>\n        {queryActionButtons}\n      </div>\n      <div className={cx(styles.cardRow)}>\n        <div className={styles.queryContainer}>\n          {query.queries.map((q, i) => {\n            const queryText = createQueryText(q, queryDsInstance);\n            return (\n              <div aria-label=\"Query text\" key={`${q}-${i}`} className={styles.queryRow}>\n                {queryText}\n              </div>\n            );\n          })}\n          {!activeUpdateComment && query.comment && (\n            <div aria-label=\"Query comment\" className={styles.comment}>\n              {query.comment}\n            </div>\n          )}\n          {activeUpdateComment && updateComment}\n        </div>\n        {!activeUpdateComment && (\n          <div className={styles.runButton}>\n            <Button variant=\"secondary\" onClick={onRunQuery} disabled={isRemoved}>\n              {datasourceInstance?.uid === query.datasourceUid ? 'Run query' : 'Switch data source and run query'}\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default connector(RichHistoryCard);\n","import { css } from '@emotion/css';\nimport React, { useEffect, useCallback } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { Button, FilterInput, MultiSelect, RangeSlider, Select, useStyles2 } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  mapNumbertoTimeInSlider,\n  mapQueriesToHeadings,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { ExploreId, RichHistoryQuery } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate?: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  exploreId: ExploreId;\n  height: number;\n}\n\nconst getStyles = (theme: GrafanaTheme2, height: number) => {\n  const bgColor = theme.isLight ? theme.v1.palette.gray5 : theme.v1.palette.dark4;\n\n  return {\n    container: css`\n      display: flex;\n    `,\n    labelSlider: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      &:last-of-type {\n        margin-top: ${theme.spacing(3)};\n      }\n      &:first-of-type {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-bottom: ${theme.spacing(2)};\n      }\n    `,\n    containerContent: css`\n      /* 134px is based on the width of the Query history tabs bar, so the content is aligned to right side of the tab */\n      width: calc(100% - 134px);\n    `,\n    containerSlider: css`\n      width: 129px;\n      margin-right: ${theme.spacing(1)};\n    `,\n    fixedSlider: css`\n      position: fixed;\n    `,\n    slider: css`\n      bottom: 10px;\n      height: ${height - 180}px;\n      width: 129px;\n      padding: ${theme.spacing(1)} 0;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing(0.25, 0.5, 0.25, 1)};\n        border-radius: ${theme.shape.borderRadius(1)};\n      }\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    sessionName: css`\n      display: flex;\n      align-items: flex-start;\n      justify-content: flex-start;\n      margin-top: ${theme.spacing(3)};\n      h4 {\n        margin: 0 10px 0 0;\n      }\n    `,\n    heading: css`\n      font-size: ${theme.typography.h4.fontSize};\n      margin: ${theme.spacing(2, 0.25, 1, 0.25)};\n    `,\n    footer: css`\n      height: 60px;\n      margin: ${theme.spacing(3)} auto;\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n    queries: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n      font-weight: ${theme.typography.fontWeightRegular};\n      margin-left: ${theme.spacing(0.5)};\n    `,\n  };\n};\n\nexport function RichHistoryQueriesTab(props: Props) {\n  const {\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    richHistorySettings,\n    exploreId,\n    height,\n    activeDatasourceInstance,\n  } = props;\n\n  const styles = useStyles2(useCallback((theme: GrafanaTheme2) => getStyles(theme, height), [height]));\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      !richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: false,\n    };\n    updateFilters(filters);\n\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  /* mappedQueriesToHeadings is an object where query headings (stringified dates/data sources)\n   * are keys and arrays with queries that belong to that headings are values.\n   */\n  const mappedQueriesToHeadings = mapQueriesToHeadings(queries, richHistorySearchFilters.sortOrder);\n  const sortOrderOptions = getSortOrderOptions();\n  const partialResults = queries.length && queries.length !== totalQueries;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerSlider}>\n        <div className={styles.fixedSlider}>\n          <div className={styles.labelSlider}>Filter history</div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.from)}</div>\n          <div className={styles.slider}>\n            <RangeSlider\n              tooltipAlwaysVisible={false}\n              min={0}\n              max={richHistorySettings.retentionPeriod}\n              value={[richHistorySearchFilters.from, richHistorySearchFilters.to]}\n              orientation=\"vertical\"\n              formatTooltipResult={mapNumbertoTimeInSlider}\n              reverse={true}\n              onAfterChange={(value) => {\n                updateFilters({ from: value![0], to: value![1] });\n              }}\n            />\n          </div>\n          <div className={styles.labelSlider}>{mapNumbertoTimeInSlider(richHistorySearchFilters.to)}</div>\n        </div>\n      </div>\n\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n\n        {loading && <span>Loading results...</span>}\n\n        {!loading &&\n          Object.keys(mappedQueriesToHeadings).map((heading) => {\n            return (\n              <div key={heading}>\n                <div className={styles.heading}>\n                  {heading}{' '}\n                  <span className={styles.queries}>\n                    {partialResults ? 'Displaying ' : ''}\n                    {mappedQueriesToHeadings[heading].length} queries\n                  </span>\n                </div>\n                {mappedQueriesToHeadings[heading].map((q: RichHistoryQuery) => {\n                  const idx = listOfDatasources.findIndex((d) => d.uid === q.datasourceUid);\n                  return (\n                    <RichHistoryCard\n                      query={q}\n                      key={q.id}\n                      exploreId={exploreId}\n                      dsImg={idx === -1 ? 'public/img/icn-datasource.svg' : listOfDatasources[idx].imgUrl}\n                      isRemoved={idx === -1}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        {partialResults ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { useStyles2, Select, Button, Field, InlineField, InlineSwitch, Alert } from '@grafana/ui';\nimport { notifyApp } from 'app/core/actions';\nimport appEvents from 'app/core/app_events';\nimport { createSuccessNotification } from 'app/core/copy/appNotification';\nimport { MAX_HISTORY_ITEMS } from 'app/core/history/RichHistoryLocalStorage';\nimport { dispatch } from 'app/store/store';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\nimport { ShowConfirmModalEvent } from '../../../types/events';\n\nexport interface RichHistorySettingsProps {\n  retentionPeriod: number;\n  starredTabAsFirstTab: boolean;\n  activeDatasourceOnly: boolean;\n  onChangeRetentionPeriod: (option: SelectableValue<number>) => void;\n  toggleStarredTabAsFirstTab: () => void;\n  toggleactiveDatasourceOnly: () => void;\n  deleteRichHistory: () => void;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      font-size: ${theme.typography.bodySmall.fontSize};\n    `,\n    spaceBetween: css`\n      margin-bottom: ${theme.spacing(3)};\n    `,\n    input: css`\n      max-width: 200px;\n    `,\n    bold: css`\n      font-weight: ${theme.typography.fontWeightBold};\n    `,\n    bottomMargin: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n  };\n};\n\nconst retentionPeriodOptions = [\n  { value: 2, label: '2 days' },\n  { value: 5, label: '5 days' },\n  { value: 7, label: '1 week' },\n  { value: 14, label: '2 weeks' },\n];\n\nexport function RichHistorySettingsTab(props: RichHistorySettingsProps) {\n  const {\n    retentionPeriod,\n    starredTabAsFirstTab,\n    activeDatasourceOnly,\n    onChangeRetentionPeriod,\n    toggleStarredTabAsFirstTab,\n    toggleactiveDatasourceOnly,\n    deleteRichHistory,\n  } = props;\n  const styles = useStyles2(getStyles);\n  const selectedOption = retentionPeriodOptions.find((v) => v.value === retentionPeriod);\n\n  const onDelete = () => {\n    appEvents.publish(\n      new ShowConfirmModalEvent({\n        title: 'Delete',\n        text: 'Are you sure you want to permanently delete your query history?',\n        yesText: 'Delete',\n        icon: 'trash-alt',\n        onConfirm: () => {\n          deleteRichHistory();\n          dispatch(notifyApp(createSuccessNotification('Query history deleted')));\n        },\n      })\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      {supportedFeatures().changeRetention ? (\n        <Field\n          label=\"History time span\"\n          description={`Select the period of time for which Grafana will save your query history. Up to ${MAX_HISTORY_ITEMS} entries will be stored.`}\n        >\n          <div className={styles.input}>\n            <Select value={selectedOption} options={retentionPeriodOptions} onChange={onChangeRetentionPeriod}></Select>\n          </div>\n        </Field>\n      ) : (\n        <Alert severity=\"info\" title=\"History time span\">\n          Grafana will keep entries up to {selectedOption?.label}.\n        </Alert>\n      )}\n      <InlineField\n        label=\"Change the default active tab from “Query history” to “Starred”\"\n        className={styles.spaceBetween}\n      >\n        <InlineSwitch\n          id=\"explore-query-history-settings-default-active-tab\"\n          value={starredTabAsFirstTab}\n          onChange={toggleStarredTabAsFirstTab}\n        />\n      </InlineField>\n      {supportedFeatures().onlyActiveDataSource && (\n        <InlineField\n          label=\"Only show queries for data source currently active in Explore\"\n          className={styles.spaceBetween}\n        >\n          <InlineSwitch\n            id=\"explore-query-history-settings-data-source-behavior\"\n            value={activeDatasourceOnly}\n            onChange={toggleactiveDatasourceOnly}\n          />\n        </InlineField>\n      )}\n      {supportedFeatures().clearHistory && (\n        <div>\n          <div className={styles.bold}>Clear query history</div>\n          <div className={styles.bottomMargin}>Delete all of your query history, permanently.</div>\n          <Button variant=\"destructive\" onClick={onDelete}>\n            Clear query history\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { css } from '@emotion/css';\nimport React, { useEffect } from 'react';\n\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { config } from '@grafana/runtime';\nimport { useStyles2, Select, MultiSelect, FilterInput, Button } from '@grafana/ui';\nimport {\n  createDatasourcesList,\n  SortOrder,\n  RichHistorySearchFilters,\n  RichHistorySettings,\n} from 'app/core/utils/richHistory';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { getSortOrderOptions } from './RichHistory';\nimport RichHistoryCard from './RichHistoryCard';\n\nexport interface Props {\n  queries: RichHistoryQuery[];\n  totalQueries: number;\n  loading: boolean;\n  activeDatasourceInstance: string;\n  updateFilters: (filtersToUpdate: Partial<RichHistorySearchFilters>) => void;\n  clearRichHistoryResults: () => void;\n  loadMoreRichHistory: () => void;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  richHistorySettings: RichHistorySettings;\n  exploreId: ExploreId;\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const bgColor = theme.isLight ? theme.v1.palette.gray5 : theme.v1.palette.dark4;\n  return {\n    container: css`\n      display: flex;\n    `,\n    containerContent: css`\n      width: 100%;\n    `,\n    selectors: css`\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n    `,\n    multiselect: css`\n      width: 100%;\n      margin-bottom: ${theme.spacing(1)};\n      .gf-form-select-box__multi-value {\n        background-color: ${bgColor};\n        padding: ${theme.spacing(0.25, 0.5, 0.25, 1)};\n        border-radius: ${theme.shape.borderRadius(1)};\n      }\n    `,\n    filterInput: css`\n      margin-bottom: ${theme.spacing(1)};\n    `,\n    sort: css`\n      width: 170px;\n    `,\n    footer: css`\n      height: 60px;\n      margin-top: ${theme.spacing(3)};\n      display: flex;\n      justify-content: center;\n      font-weight: ${theme.typography.fontWeightLight};\n      font-size: ${theme.typography.bodySmall.fontSize};\n      a {\n        font-weight: ${theme.typography.fontWeightMedium};\n        margin-left: ${theme.spacing(0.25)};\n      }\n    `,\n  };\n};\n\nexport function RichHistoryStarredTab(props: Props) {\n  const {\n    updateFilters,\n    clearRichHistoryResults,\n    loadMoreRichHistory,\n    activeDatasourceInstance,\n    richHistorySettings,\n    queries,\n    totalQueries,\n    loading,\n    richHistorySearchFilters,\n    exploreId,\n  } = props;\n\n  const styles = useStyles2(getStyles);\n\n  const listOfDatasources = createDatasourcesList();\n\n  useEffect(() => {\n    const datasourceFilters =\n      richHistorySettings.activeDatasourceOnly && richHistorySettings.lastUsedDatasourceFilters\n        ? richHistorySettings.lastUsedDatasourceFilters\n        : [activeDatasourceInstance];\n    const filters: RichHistorySearchFilters = {\n      search: '',\n      sortOrder: SortOrder.Descending,\n      datasourceFilters,\n      from: 0,\n      to: richHistorySettings.retentionPeriod,\n      starred: true,\n    };\n    updateFilters(filters);\n    return () => {\n      clearRichHistoryResults();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (!richHistorySearchFilters) {\n    return <span>Loading...</span>;\n  }\n\n  const sortOrderOptions = getSortOrderOptions();\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n        <div className={styles.selectors}>\n          {!richHistorySettings.activeDatasourceOnly && (\n            <MultiSelect\n              className={styles.multiselect}\n              options={listOfDatasources.map((ds) => {\n                return { value: ds.name, label: ds.name };\n              })}\n              value={richHistorySearchFilters.datasourceFilters}\n              placeholder=\"Filter queries for data sources(s)\"\n              aria-label=\"Filter queries for data sources(s)\"\n              onChange={(options: SelectableValue[]) => {\n                updateFilters({ datasourceFilters: options.map((option) => option.value) });\n              }}\n            />\n          )}\n          <div className={styles.filterInput}>\n            <FilterInput\n              placeholder=\"Search queries\"\n              value={richHistorySearchFilters.search}\n              onChange={(search: string) => updateFilters({ search })}\n            />\n          </div>\n          <div aria-label=\"Sort queries\" className={styles.sort}>\n            <Select\n              value={sortOrderOptions.filter((order) => order.value === richHistorySearchFilters.sortOrder)}\n              options={sortOrderOptions}\n              placeholder=\"Sort queries by\"\n              onChange={(e: SelectableValue<SortOrder>) => updateFilters({ sortOrder: e.value })}\n            />\n          </div>\n        </div>\n        {loading && <span>Loading results...</span>}\n        {!loading &&\n          queries.map((q) => {\n            const idx = listOfDatasources.findIndex((d) => d.uid === q.datasourceUid);\n            return (\n              <RichHistoryCard\n                query={q}\n                key={q.id}\n                exploreId={exploreId}\n                dsImg={idx === -1 ? 'public/img/icn-datasource.svg' : listOfDatasources[idx].imgUrl}\n                isRemoved={idx === -1}\n              />\n            );\n          })}\n        {queries.length && queries.length !== totalQueries ? (\n          <div>\n            Showing {queries.length} of {totalQueries} <Button onClick={loadMoreRichHistory}>Load more</Button>\n          </div>\n        ) : null}\n        <div className={styles.footer}>\n          {!config.queryHistoryEnabled ? 'The history is local to your browser and is not shared with others.' : ''}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { debounce } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { Themeable2, TabbedContainer, TabConfig, withTheme2 } from '@grafana/ui';\nimport { SortOrder, RichHistorySearchFilters, RichHistorySettings } from 'app/core/utils/richHistory';\nimport { RichHistoryQuery, ExploreId } from 'app/types/explore';\n\nimport { supportedFeatures } from '../../../core/history/richHistoryStorageProvider';\n\nimport { RichHistoryQueriesTab } from './RichHistoryQueriesTab';\nimport { RichHistorySettingsTab } from './RichHistorySettingsTab';\nimport { RichHistoryStarredTab } from './RichHistoryStarredTab';\n\nexport enum Tabs {\n  RichHistory = 'Query history',\n  Starred = 'Starred',\n  Settings = 'Settings',\n}\n\nexport const getSortOrderOptions = () =>\n  [\n    { label: 'Newest first', value: SortOrder.Descending },\n    { label: 'Oldest first', value: SortOrder.Ascending },\n    { label: 'Data source A-Z', value: SortOrder.DatasourceAZ },\n    { label: 'Data source Z-A', value: SortOrder.DatasourceZA },\n  ].filter((option) => supportedFeatures().availableFilters.includes(option.value));\n\nexport interface RichHistoryProps extends Themeable2 {\n  richHistory: RichHistoryQuery[];\n  richHistoryTotal?: number;\n  richHistorySettings: RichHistorySettings;\n  richHistorySearchFilters?: RichHistorySearchFilters;\n  updateHistorySettings: (settings: RichHistorySettings) => void;\n  updateHistorySearchFilters: (exploreId: ExploreId, filters: RichHistorySearchFilters) => void;\n  loadRichHistory: (exploreId: ExploreId) => void;\n  loadMoreRichHistory: (exploreId: ExploreId) => void;\n  clearRichHistoryResults: (exploreId: ExploreId) => void;\n  deleteRichHistory: () => void;\n  activeDatasourceInstance: string;\n  firstTab: Tabs;\n  exploreId: ExploreId;\n  height: number;\n  onClose: () => void;\n}\n\ntype RichHistoryState = {\n  loading: boolean;\n};\n\nclass UnThemedRichHistory extends PureComponent<RichHistoryProps> {\n  state: RichHistoryState = {\n    loading: false,\n  };\n\n  updateSettings = (settingsToUpdate: Partial<RichHistorySettings>) => {\n    this.props.updateHistorySettings({ ...this.props.richHistorySettings, ...settingsToUpdate });\n  };\n\n  updateFilters = (filtersToUpdate?: Partial<RichHistorySearchFilters>) => {\n    const filters = {\n      ...this.props.richHistorySearchFilters!,\n      ...filtersToUpdate,\n      page: 1, // always load fresh results when updating filters\n    };\n    this.props.updateHistorySearchFilters(this.props.exploreId, filters);\n    this.loadRichHistory();\n  };\n\n  clearResults = () => {\n    this.props.clearRichHistoryResults(this.props.exploreId);\n  };\n\n  loadRichHistory = debounce(() => {\n    this.props.loadRichHistory(this.props.exploreId);\n    this.setState({\n      loading: true,\n    });\n  }, 300);\n\n  onChangeRetentionPeriod = (retentionPeriod: SelectableValue<number>) => {\n    if (retentionPeriod.value !== undefined) {\n      this.updateSettings({ retentionPeriod: retentionPeriod.value });\n    }\n  };\n\n  toggleStarredTabAsFirstTab = () =>\n    this.updateSettings({ starredTabAsFirstTab: !this.props.richHistorySettings.starredTabAsFirstTab });\n\n  toggleActiveDatasourceOnly = () =>\n    this.updateSettings({ activeDatasourceOnly: !this.props.richHistorySettings.activeDatasourceOnly });\n\n  componentDidUpdate(prevProps: Readonly<RichHistoryProps>, prevState: Readonly<{}>, snapshot?: any) {\n    if (prevProps.richHistory !== this.props.richHistory) {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      richHistory,\n      richHistoryTotal,\n      height,\n      exploreId,\n      deleteRichHistory,\n      onClose,\n      firstTab,\n      activeDatasourceInstance,\n    } = this.props;\n    const { loading } = this.state;\n\n    const QueriesTab: TabConfig = {\n      label: 'Query history',\n      value: Tabs.RichHistory,\n      content: (\n        <RichHistoryQueriesTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          activeDatasourceInstance={activeDatasourceInstance}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n          height={height}\n        />\n      ),\n      icon: 'history',\n    };\n\n    const StarredTab: TabConfig = {\n      label: 'Starred',\n      value: Tabs.Starred,\n      content: (\n        <RichHistoryStarredTab\n          queries={richHistory}\n          totalQueries={richHistoryTotal || 0}\n          loading={loading}\n          activeDatasourceInstance={activeDatasourceInstance}\n          updateFilters={this.updateFilters}\n          clearRichHistoryResults={() => this.props.clearRichHistoryResults(this.props.exploreId)}\n          loadMoreRichHistory={() => this.props.loadMoreRichHistory(this.props.exploreId)}\n          richHistorySettings={this.props.richHistorySettings}\n          richHistorySearchFilters={this.props.richHistorySearchFilters}\n          exploreId={exploreId}\n        />\n      ),\n      icon: 'star',\n    };\n\n    const SettingsTab: TabConfig = {\n      label: 'Settings',\n      value: Tabs.Settings,\n      content: (\n        <RichHistorySettingsTab\n          retentionPeriod={this.props.richHistorySettings.retentionPeriod}\n          starredTabAsFirstTab={this.props.richHistorySettings.starredTabAsFirstTab}\n          activeDatasourceOnly={this.props.richHistorySettings.activeDatasourceOnly}\n          onChangeRetentionPeriod={this.onChangeRetentionPeriod}\n          toggleStarredTabAsFirstTab={this.toggleStarredTabAsFirstTab}\n          toggleactiveDatasourceOnly={this.toggleActiveDatasourceOnly}\n          deleteRichHistory={deleteRichHistory}\n        />\n      ),\n      icon: 'sliders-v-alt',\n    };\n\n    let tabs = [QueriesTab, StarredTab, SettingsTab];\n    return (\n      <TabbedContainer tabs={tabs} onClose={onClose} defaultTab={firstTab} closeIconTooltip=\"Close query history\" />\n    );\n  }\n}\n\nexport const RichHistory = withTheme2(UnThemedRichHistory);\n","// Libraries\nimport React, { useEffect, useState } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { config, reportInteraction } from '@grafana/runtime';\nimport { useTheme2 } from '@grafana/ui';\n// Types\nimport { ExploreItemState, StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\n// Components, enums\nimport { ExploreDrawer } from '../ExploreDrawer';\nimport {\n  deleteRichHistory,\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n} from '../state/history';\n\nimport { RichHistory, Tabs } from './RichHistory';\n\n//Actions\n\nfunction mapStateToProps(state: StoreState, { exploreId }: { exploreId: ExploreId }) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const richHistorySearchFilters = item.richHistorySearchFilters;\n  const richHistorySettings = explore.richHistorySettings;\n  const { datasourceInstance } = item;\n  const firstTab = richHistorySettings?.starredTabAsFirstTab ? Tabs.Starred : Tabs.RichHistory;\n  const { richHistory, richHistoryTotal } = item;\n  return {\n    richHistory,\n    richHistoryTotal,\n    firstTab,\n    activeDatasourceInstance: datasourceInstance!.name,\n    richHistorySettings,\n    richHistorySearchFilters,\n  };\n}\n\nconst mapDispatchToProps = {\n  initRichHistory,\n  loadRichHistory,\n  loadMoreRichHistory,\n  clearRichHistoryResults,\n  updateHistorySettings,\n  updateHistorySearchFilters,\n  deleteRichHistory,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface OwnProps {\n  width: number;\n  exploreId: ExploreId;\n  onClose: () => void;\n}\nexport type Props = ConnectedProps<typeof connector> & OwnProps;\n\nexport function RichHistoryContainer(props: Props) {\n  const theme = useTheme2();\n  const [height, setHeight] = useState(theme.components.horizontalDrawer.defaultHeight);\n\n  const {\n    richHistory,\n    richHistoryTotal,\n    width,\n    firstTab,\n    activeDatasourceInstance,\n    exploreId,\n    deleteRichHistory,\n    initRichHistory,\n    loadRichHistory,\n    loadMoreRichHistory,\n    clearRichHistoryResults,\n    richHistorySettings,\n    updateHistorySettings,\n    richHistorySearchFilters,\n    updateHistorySearchFilters,\n    onClose,\n  } = props;\n\n  useEffect(() => {\n    initRichHistory();\n    reportInteraction('grafana_explore_query_history_opened', {\n      queryHistoryEnabled: config.queryHistoryEnabled,\n    });\n  }, [initRichHistory]);\n\n  if (!richHistorySettings) {\n    return <span>Loading...</span>;\n  }\n\n  return (\n    <ExploreDrawer\n      width={width}\n      onResize={(_e, _dir, ref) => {\n        setHeight(Number(ref.style.height.slice(0, -2)));\n      }}\n    >\n      <RichHistory\n        richHistory={richHistory}\n        richHistoryTotal={richHistoryTotal}\n        firstTab={firstTab}\n        activeDatasourceInstance={activeDatasourceInstance}\n        exploreId={exploreId}\n        onClose={onClose}\n        height={height}\n        deleteRichHistory={deleteRichHistory}\n        richHistorySettings={richHistorySettings}\n        richHistorySearchFilters={richHistorySearchFilters}\n        updateHistorySettings={updateHistorySettings}\n        updateHistorySearchFilters={updateHistorySearchFilters}\n        loadRichHistory={loadRichHistory}\n        loadMoreRichHistory={loadMoreRichHistory}\n        clearRichHistoryResults={clearRichHistoryResults}\n      />\n    </ExploreDrawer>\n  );\n}\n\nexport default connector(RichHistoryContainer);\n","import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { Button, HorizontalGroup, useTheme2 } from '@grafana/ui';\n\ntype Props = {\n  addQueryRowButtonDisabled?: boolean;\n  addQueryRowButtonHidden?: boolean;\n  richHistoryRowButtonHidden?: boolean;\n  richHistoryButtonActive?: boolean;\n  queryInspectorButtonActive?: boolean;\n\n  onClickAddQueryRowButton: () => void;\n  onClickRichHistoryButton: () => void;\n  onClickQueryInspectorButton: () => void;\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    containerMargin: css`\n      margin-top: ${theme.spacing(2)};\n    `,\n  };\n};\nexport function SecondaryActions(props: Props) {\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n  return (\n    <div className={styles.containerMargin}>\n      <HorizontalGroup>\n        {!props.addQueryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Add row button\"\n            onClick={props.onClickAddQueryRowButton}\n            disabled={props.addQueryRowButtonDisabled}\n            icon=\"plus\"\n          >\n            Add query\n          </Button>\n        )}\n        {!props.richHistoryRowButtonHidden && (\n          <Button\n            variant=\"secondary\"\n            aria-label=\"Rich history button\"\n            className={cx({ ['explore-active-button']: props.richHistoryButtonActive })}\n            onClick={props.onClickRichHistoryButton}\n            icon=\"history\"\n          >\n            Query history\n          </Button>\n        )}\n        <Button\n          variant=\"secondary\"\n          aria-label=\"Query inspector button\"\n          className={cx({ ['explore-active-button']: props.queryInspectorButtonActive })}\n          onClick={props.onClickQueryInspectorButton}\n          icon=\"info-circle\"\n        >\n          Inspector\n        </Button>\n      </HorizontalGroup>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { ValueLinkConfig, applyFieldOverrides, TimeZone, SplitOpen, DataFrame } from '@grafana/data';\nimport { Collapse, Table } from '@grafana/ui';\nimport { FilterItem } from '@grafana/ui/src/components/Table/types';\nimport { config } from 'app/core/config';\nimport { PANEL_BORDER } from 'app/core/constants';\nimport { StoreState } from 'app/types';\nimport { ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { MetaInfoText } from './MetaInfoText';\nimport { getFieldLinksForExplore } from './utils/links';\n\ninterface TableContainerProps {\n  ariaLabel?: string;\n  exploreId: ExploreId;\n  width: number;\n  timeZone: TimeZone;\n  onCellFilterAdded?: (filter: FilterItem) => void;\n  splitOpenFn: SplitOpen;\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: TableContainerProps) {\n  const explore = state.explore;\n  // @ts-ignore\n  const item: ExploreItemState = explore[exploreId];\n  const { loading: loadingInState, tableResult, range } = item;\n  const loading = tableResult && tableResult.length > 0 ? false : loadingInState;\n  return { loading, tableResult, range };\n}\n\nconst connector = connect(mapStateToProps, {});\n\ntype Props = TableContainerProps & ConnectedProps<typeof connector>;\n\nexport class TableContainer extends PureComponent<Props> {\n  getMainFrame(frames: DataFrame[] | null) {\n    return frames?.find((df) => df.meta?.custom?.parentRowIndex === undefined) || frames?.[0];\n  }\n\n  getTableHeight() {\n    const { tableResult } = this.props;\n    const mainFrame = this.getMainFrame(tableResult);\n\n    if (!mainFrame || mainFrame.length === 0) {\n      return 200;\n    }\n\n    // tries to estimate table height\n    return Math.max(Math.min(600, mainFrame.length * 35) + 35);\n  }\n\n  render() {\n    const { loading, onCellFilterAdded, tableResult, width, splitOpenFn, range, ariaLabel, timeZone } = this.props;\n    const height = this.getTableHeight();\n    const tableWidth = width - config.theme.panelPadding * 2 - PANEL_BORDER;\n\n    let dataFrames = tableResult;\n\n    if (dataFrames?.length) {\n      dataFrames = applyFieldOverrides({\n        data: dataFrames,\n        timeZone,\n        theme: config.theme2,\n        replaceVariables: (v: string) => v,\n        fieldConfig: {\n          defaults: {},\n          overrides: [],\n        },\n      });\n      // Bit of code smell here. We need to add links here to the frame modifying the frame on every render.\n      // Should work fine in essence but still not the ideal way to pass props. In logs container we do this\n      // differently and sidestep this getLinks API on a dataframe\n      for (const frame of dataFrames) {\n        for (const field of frame.fields) {\n          field.getLinks = (config: ValueLinkConfig) => {\n            return getFieldLinksForExplore({\n              field,\n              rowIndex: config.valueRowIndex!,\n              splitOpenFn,\n              range,\n              dataFrame: frame!,\n            });\n          };\n        }\n      }\n    }\n\n    const mainFrame = this.getMainFrame(dataFrames);\n    const subFrames = dataFrames?.filter((df) => df.meta?.custom?.parentRowIndex !== undefined);\n\n    return (\n      <Collapse label=\"Table\" loading={loading} isOpen>\n        {mainFrame?.length ? (\n          <Table\n            ariaLabel={ariaLabel}\n            data={mainFrame}\n            subData={subFrames}\n            width={tableWidth}\n            height={height}\n            onCellFilterAdded={onCellFilterAdded}\n          />\n        ) : (\n          <MetaInfoText metaItems={[{ value: '0 series returned' }]} />\n        )}\n      </Collapse>\n    );\n  }\n}\n\nexport default connector(TableContainer);\n","import TracePageSearchBar from '@jaegertracing/jaeger-ui-components/src/TracePageHeader/TracePageSearchBar';\nimport { TopOfViewRefType } from '@jaegertracing/jaeger-ui-components/src/TraceTimelineViewer/VirtualizedTraceView';\nimport React, { RefObject, useMemo, useState } from 'react';\n\nimport { DataFrame, SplitOpen, PanelData } from '@grafana/data';\nimport { Collapse } from '@grafana/ui';\nimport { StoreState, useSelector } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { TraceView } from './TraceView';\nimport { useSearch } from './useSearch';\nimport { transformDataFrames } from './utils/transform';\ninterface Props {\n  dataFrames: DataFrame[];\n  splitOpenFn: SplitOpen;\n  exploreId: ExploreId;\n  scrollElement?: Element;\n  queryResponse: PanelData;\n  topOfViewRef: RefObject<HTMLDivElement>;\n}\nexport function TraceViewContainer(props: Props) {\n  // At this point we only show single trace\n  const frame = props.dataFrames[0];\n  const { dataFrames, splitOpenFn, exploreId, scrollElement, topOfViewRef, queryResponse } = props;\n  const traceProp = useMemo(() => transformDataFrames(frame), [frame]);\n  const { search, setSearch, spanFindMatches } = useSearch(traceProp?.spans);\n  const [focusedSpanIdForSearch, setFocusedSpanIdForSearch] = useState('');\n  const [searchBarSuffix, setSearchBarSuffix] = useState('');\n  const datasource = useSelector(\n    (state: StoreState) => state.explore[props.exploreId!]?.datasourceInstance ?? undefined\n  );\n\n  if (!traceProp) {\n    return null;\n  }\n\n  return (\n    <>\n      <TracePageSearchBar\n        navigable={true}\n        searchValue={search}\n        setSearch={setSearch}\n        spanFindMatches={spanFindMatches}\n        searchBarSuffix={searchBarSuffix}\n        setSearchBarSuffix={setSearchBarSuffix}\n        focusedSpanIdForSearch={focusedSpanIdForSearch}\n        setFocusedSpanIdForSearch={setFocusedSpanIdForSearch}\n      />\n\n      <Collapse label=\"Trace View\" isOpen>\n        <TraceView\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={splitOpenFn}\n          scrollElement={scrollElement}\n          traceProp={traceProp}\n          spanFindMatches={spanFindMatches}\n          search={search}\n          focusedSpanIdForSearch={focusedSpanIdForSearch}\n          queryResponse={queryResponse}\n          datasource={datasource}\n          topOfViewRef={topOfViewRef}\n          topOfViewRefType={TopOfViewRefType.Explore}\n        />\n      </Collapse>\n    </>\n  );\n}\n","import { css, cx } from '@emotion/css';\nimport { get } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport React, { createRef } from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { Unsubscribable } from 'rxjs';\n\nimport {\n  AbsoluteTimeRange,\n  DataQuery,\n  GrafanaTheme2,\n  LoadingState,\n  QueryFixAction,\n  RawTimeRange,\n  EventBus,\n  SplitOpenOptions,\n} from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { config, getDataSourceSrv, reportInteraction } from '@grafana/runtime';\nimport { Collapse, CustomScrollbar, ErrorBoundaryAlert, Themeable2, withTheme2, PanelContainer } from '@grafana/ui';\nimport { FILTER_FOR_OPERATOR, FILTER_OUT_OPERATOR, FilterItem } from '@grafana/ui/src/components/Table/types';\nimport appEvents from 'app/core/app_events';\nimport { supportedFeatures } from 'app/core/history/richHistoryStorageProvider';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { getNodeGraphDataFrames } from 'app/plugins/panel/nodeGraph/utils';\nimport { StoreState } from 'app/types';\nimport { AbsoluteTimeEvent } from 'app/types/events';\nimport { ExploreGraphStyle, ExploreId, ExploreItemState } from 'app/types/explore';\n\nimport { getTimeZone } from '../profile/state/selectors';\n\nimport { ExploreGraph } from './ExploreGraph';\nimport { ExploreGraphLabel } from './ExploreGraphLabel';\nimport ExploreQueryInspector from './ExploreQueryInspector';\nimport { ExploreToolbar } from './ExploreToolbar';\nimport { FlameGraphExploreContainer } from './FlameGraphExploreContainer';\nimport LogsContainer from './LogsContainer';\nimport { NoData } from './NoData';\nimport { NoDataSourceCallToAction } from './NoDataSourceCallToAction';\nimport { NodeGraphContainer } from './NodeGraphContainer';\nimport { QueryRows } from './QueryRows';\nimport { ResponseErrorContainer } from './ResponseErrorContainer';\nimport RichHistoryContainer from './RichHistory/RichHistoryContainer';\nimport { SecondaryActions } from './SecondaryActions';\nimport TableContainer from './TableContainer';\nimport { TraceViewContainer } from './TraceView/TraceViewContainer';\nimport { changeSize, changeGraphStyle } from './state/explorePane';\nimport { splitOpen } from './state/main';\nimport { addQueryRow, modifyQueries, scanStart, scanStopAction, setQueries } from './state/query';\nimport { isSplit } from './state/selectors';\nimport { makeAbsoluteTime, updateTimeRange } from './state/time';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    exploreMain: css`\n      label: exploreMain;\n      // Is needed for some transition animations to work.\n      position: relative;\n      margin-top: 21px;\n    `,\n    button: css`\n      label: button;\n      margin: 1em 4px 0 0;\n    `,\n    queryContainer: css`\n      label: queryContainer;\n      // Need to override normal css class and don't want to count on ordering of the classes in html.\n      height: auto !important;\n      flex: unset !important;\n      display: unset !important;\n      padding: ${theme.spacing(1)};\n    `,\n    exploreContainer: css`\n      display: flex;\n      flex: 1 1 auto;\n      flex-direction: column;\n      padding: ${theme.spacing(2)};\n      padding-top: 0;\n    `,\n    exploreContainerTopnav: css`\n      padding-top: ${theme.spacing(2)};\n    `,\n  };\n};\n\nexport interface ExploreProps extends Themeable2 {\n  exploreId: ExploreId;\n  theme: GrafanaTheme2;\n  eventBus: EventBus;\n}\n\nenum ExploreDrawer {\n  RichHistory,\n  QueryInspector,\n}\n\ninterface ExploreState {\n  openDrawer?: ExploreDrawer;\n}\n\nexport type Props = ExploreProps & ConnectedProps<typeof connector>;\n\n/**\n * Explore provides an area for quick query iteration for a given datasource.\n * Once a datasource is selected it populates the query section at the top.\n * When queries are run, their results are being displayed in the main section.\n * The datasource determines what kind of query editor it brings, and what kind\n * of results viewers it supports. The state is managed entirely in Redux.\n *\n * SPLIT VIEW\n *\n * Explore can have two Explore areas side-by-side. This is handled in `Wrapper.tsx`.\n * Since there can be multiple Explores (e.g., left and right) each action needs\n * the `exploreId` as first parameter so that the reducer knows which Explore state\n * is affected.\n *\n * DATASOURCE REQUESTS\n *\n * A click on Run Query creates transactions for all DataQueries for all expanded\n * result viewers. New runs are discarding previous runs. Upon completion a transaction\n * saves the result. The result viewers construct their data from the currently existing\n * transactions.\n *\n * The result viewers determine some of the query options sent to the datasource, e.g.,\n * `format`, to indicate eventual transformations by the datasources' result transformers.\n */\nexport class Explore extends React.PureComponent<Props, ExploreState> {\n  scrollElement: HTMLDivElement | undefined;\n  absoluteTimeUnsubsciber: Unsubscribable | undefined;\n  topOfViewRef = createRef<HTMLDivElement>();\n  graphEventBus: EventBus;\n  logsEventBus: EventBus;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      openDrawer: undefined,\n    };\n    this.graphEventBus = props.eventBus.newScopedBus('graph', { onlyLocal: false });\n    this.logsEventBus = props.eventBus.newScopedBus('logs', { onlyLocal: false });\n  }\n\n  componentDidMount() {\n    this.absoluteTimeUnsubsciber = appEvents.subscribe(AbsoluteTimeEvent, this.onMakeAbsoluteTime);\n  }\n\n  componentWillUnmount() {\n    this.absoluteTimeUnsubsciber?.unsubscribe();\n  }\n\n  onChangeTime = (rawRange: RawTimeRange) => {\n    const { updateTimeRange, exploreId } = this.props;\n    updateTimeRange({ exploreId, rawRange });\n  };\n\n  // Use this in help pages to set page to a single query\n  onClickExample = (query: DataQuery) => {\n    this.props.setQueries(this.props.exploreId, [query]);\n  };\n\n  onCellFilterAdded = (filter: FilterItem) => {\n    const { value, key, operator } = filter;\n    if (operator === FILTER_FOR_OPERATOR) {\n      this.onClickFilterLabel(key, value);\n    }\n\n    if (operator === FILTER_OUT_OPERATOR) {\n      this.onClickFilterOutLabel(key, value);\n    }\n  };\n\n  onClickFilterLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER', options: { key, value } });\n  };\n\n  onClickFilterOutLabel = (key: string, value: string) => {\n    this.onModifyQueries({ type: 'ADD_FILTER_OUT', options: { key, value } });\n  };\n\n  onClickAddQueryRowButton = () => {\n    const { exploreId, queryKeys } = this.props;\n    this.props.addQueryRow(exploreId, queryKeys.length);\n  };\n\n  onMakeAbsoluteTime = () => {\n    const { makeAbsoluteTime } = this.props;\n    makeAbsoluteTime();\n  };\n\n  onModifyQueries = (action: QueryFixAction) => {\n    const modifier = async (query: DataQuery, modification: QueryFixAction) => {\n      const { datasource } = query;\n      if (datasource == null) {\n        return query;\n      }\n      const ds = await getDataSourceSrv().get(datasource);\n      if (ds.modifyQuery) {\n        return ds.modifyQuery(query, modification);\n      } else {\n        return query;\n      }\n    };\n    this.props.modifyQueries(this.props.exploreId, action, modifier);\n  };\n\n  onResize = (size: { height: number; width: number }) => {\n    this.props.changeSize(this.props.exploreId, size);\n  };\n\n  onStartScanning = () => {\n    // Scanner will trigger a query\n    this.props.scanStart(this.props.exploreId);\n  };\n\n  onStopScanning = () => {\n    this.props.scanStopAction({ exploreId: this.props.exploreId });\n  };\n\n  onUpdateTimeRange = (absoluteRange: AbsoluteTimeRange) => {\n    const { exploreId, updateTimeRange } = this.props;\n    updateTimeRange({ exploreId, absoluteRange });\n  };\n\n  onChangeGraphStyle = (graphStyle: ExploreGraphStyle) => {\n    const { exploreId, changeGraphStyle } = this.props;\n    changeGraphStyle(exploreId, graphStyle);\n  };\n\n  toggleShowRichHistory = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.RichHistory ? undefined : ExploreDrawer.RichHistory,\n      };\n    });\n  };\n\n  toggleShowQueryInspector = () => {\n    this.setState((state) => {\n      return {\n        openDrawer: state.openDrawer === ExploreDrawer.QueryInspector ? undefined : ExploreDrawer.QueryInspector,\n      };\n    });\n  };\n\n  onSplitOpen = (panelType: string) => {\n    return async (options?: SplitOpenOptions<DataQuery>) => {\n      this.props.splitOpen(options);\n      if (options && this.props.datasourceInstance) {\n        const target = (await getDataSourceSrv().get(options.datasourceUid)).type;\n        const source =\n          this.props.datasourceInstance.uid === MIXED_DATASOURCE_NAME\n            ? get(this.props.queries, '0.datasource.type')\n            : this.props.datasourceInstance.type;\n        const tracking = {\n          origin: 'panel',\n          panelType,\n          source,\n          target,\n          exploreId: this.props.exploreId,\n        };\n        reportInteraction('grafana_explore_split_view_opened', tracking);\n      }\n    };\n  };\n\n  renderEmptyState(exploreContainerStyles: string) {\n    return (\n      <div className={cx(exploreContainerStyles)}>\n        <NoDataSourceCallToAction />\n      </div>\n    );\n  }\n\n  renderNoData() {\n    return <NoData />;\n  }\n\n  renderGraphPanel(width: number) {\n    const { graphResult, absoluteRange, timeZone, queryResponse, loading, theme, graphStyle, showFlameGraph } =\n      this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    const label = <ExploreGraphLabel graphStyle={graphStyle} onChangeGraphStyle={this.onChangeGraphStyle} />;\n\n    return (\n      <Collapse label={label} loading={loading} isOpen>\n        <ExploreGraph\n          graphStyle={graphStyle}\n          data={graphResult!}\n          height={showFlameGraph ? 180 : 400}\n          width={width - spacing}\n          absoluteRange={absoluteRange}\n          onChangeTime={this.onUpdateTimeRange}\n          timeZone={timeZone}\n          annotations={queryResponse.annotations}\n          splitOpenFn={this.onSplitOpen('graph')}\n          loadingState={queryResponse.state}\n          anchorToZero={false}\n          eventBus={this.graphEventBus}\n        />\n      </Collapse>\n    );\n  }\n\n  renderTablePanel(width: number) {\n    const { exploreId, timeZone } = this.props;\n    return (\n      <TableContainer\n        ariaLabel={selectors.pages.Explore.General.table}\n        width={width}\n        exploreId={exploreId}\n        onCellFilterAdded={this.onCellFilterAdded}\n        timeZone={timeZone}\n        splitOpenFn={this.onSplitOpen('table')}\n      />\n    );\n  }\n\n  renderLogsPanel(width: number) {\n    const { exploreId, syncedTimes, theme, queryResponse } = this.props;\n    const spacing = parseInt(theme.spacing(2).slice(0, -2), 10);\n    return (\n      <LogsContainer\n        exploreId={exploreId}\n        loadingState={queryResponse.state}\n        syncedTimes={syncedTimes}\n        width={width - spacing}\n        onClickFilterLabel={this.onClickFilterLabel}\n        onClickFilterOutLabel={this.onClickFilterOutLabel}\n        onStartScanning={this.onStartScanning}\n        onStopScanning={this.onStopScanning}\n        scrollElement={this.scrollElement}\n        eventBus={this.logsEventBus}\n        splitOpenFn={this.onSplitOpen('logs')}\n      />\n    );\n  }\n\n  renderNodeGraphPanel() {\n    const { exploreId, showTrace, queryResponse, datasourceInstance } = this.props;\n    const datasourceType = datasourceInstance ? datasourceInstance?.type : 'unknown';\n\n    return (\n      <NodeGraphContainer\n        dataFrames={this.memoizedGetNodeGraphDataFrames(queryResponse.series)}\n        exploreId={exploreId}\n        withTraceView={showTrace}\n        datasourceType={datasourceType}\n        splitOpenFn={this.onSplitOpen('nodeGraph')}\n      />\n    );\n  }\n\n  memoizedGetNodeGraphDataFrames = memoizeOne(getNodeGraphDataFrames);\n\n  renderFlameGraphPanel() {\n    const { queryResponse } = this.props;\n    return <FlameGraphExploreContainer dataFrames={queryResponse.flameGraphFrames} />;\n  }\n\n  renderTraceViewPanel() {\n    const { queryResponse, exploreId } = this.props;\n    const dataFrames = queryResponse.series.filter((series) => series.meta?.preferredVisualisationType === 'trace');\n\n    return (\n      // If there is no data (like 404) we show a separate error so no need to show anything here\n      dataFrames.length && (\n        <TraceViewContainer\n          exploreId={exploreId}\n          dataFrames={dataFrames}\n          splitOpenFn={this.onSplitOpen('traceView')}\n          scrollElement={this.scrollElement}\n          queryResponse={queryResponse}\n          topOfViewRef={this.topOfViewRef}\n        />\n      )\n    );\n  }\n\n  render() {\n    const {\n      datasourceInstance,\n      datasourceMissing,\n      exploreId,\n      graphResult,\n      queryResponse,\n      isLive,\n      theme,\n      showMetrics,\n      showTable,\n      showLogs,\n      showTrace,\n      showNodeGraph,\n      showFlameGraph,\n      splitted,\n      timeZone,\n    } = this.props;\n    const { openDrawer } = this.state;\n    const styles = getStyles(theme);\n    const showPanels = queryResponse && queryResponse.state !== LoadingState.NotStarted;\n    const showRichHistory = openDrawer === ExploreDrawer.RichHistory;\n    const richHistoryRowButtonHidden = !supportedFeatures().queryHistoryAvailable;\n    const showQueryInspector = openDrawer === ExploreDrawer.QueryInspector;\n    const showNoData =\n      queryResponse.state === LoadingState.Done &&\n      [\n        queryResponse.logsFrames,\n        queryResponse.graphFrames,\n        queryResponse.nodeGraphFrames,\n        queryResponse.flameGraphFrames,\n        queryResponse.tableFrames,\n        queryResponse.traceFrames,\n      ].every((e) => e.length === 0);\n\n    return (\n      <CustomScrollbar\n        testId={selectors.pages.Explore.General.scrollView}\n        autoHeightMin={'100%'}\n        scrollRefCallback={(scrollElement) => (this.scrollElement = scrollElement || undefined)}\n      >\n        <ExploreToolbar exploreId={exploreId} onChangeTime={this.onChangeTime} topOfViewRef={this.topOfViewRef} />\n        {datasourceMissing ? this.renderEmptyState(styles.exploreContainer) : null}\n        {datasourceInstance && (\n          <div\n            className={cx(styles.exploreContainer, {\n              [styles.exploreContainerTopnav]: Boolean(config.featureToggles.topnav && !splitted),\n            })}\n          >\n            <PanelContainer className={styles.queryContainer}>\n              <QueryRows exploreId={exploreId} />\n              <SecondaryActions\n                addQueryRowButtonDisabled={isLive}\n                // We cannot show multiple traces at the same time right now so we do not show add query button.\n                //TODO:unification\n                addQueryRowButtonHidden={false}\n                richHistoryRowButtonHidden={richHistoryRowButtonHidden}\n                richHistoryButtonActive={showRichHistory}\n                queryInspectorButtonActive={showQueryInspector}\n                onClickAddQueryRowButton={this.onClickAddQueryRowButton}\n                onClickRichHistoryButton={this.toggleShowRichHistory}\n                onClickQueryInspectorButton={this.toggleShowQueryInspector}\n              />\n              <ResponseErrorContainer exploreId={exploreId} />\n            </PanelContainer>\n            <AutoSizer onResize={this.onResize} disableHeight>\n              {({ width }) => {\n                if (width === 0) {\n                  return null;\n                }\n\n                return (\n                  <main className={cx(styles.exploreMain)} style={{ width }}>\n                    <ErrorBoundaryAlert>\n                      {showPanels && (\n                        <>\n                          {showMetrics && graphResult && (\n                            <ErrorBoundaryAlert>{this.renderGraphPanel(width)}</ErrorBoundaryAlert>\n                          )}\n                          {showTable && <ErrorBoundaryAlert>{this.renderTablePanel(width)}</ErrorBoundaryAlert>}\n                          {showLogs && <ErrorBoundaryAlert>{this.renderLogsPanel(width)}</ErrorBoundaryAlert>}\n                          {showNodeGraph && <ErrorBoundaryAlert>{this.renderNodeGraphPanel()}</ErrorBoundaryAlert>}\n                          {showFlameGraph && config.featureToggles.flameGraph && (\n                            <ErrorBoundaryAlert>{this.renderFlameGraphPanel()}</ErrorBoundaryAlert>\n                          )}\n                          {showTrace && <ErrorBoundaryAlert>{this.renderTraceViewPanel()}</ErrorBoundaryAlert>}\n                          {showNoData && <ErrorBoundaryAlert>{this.renderNoData()}</ErrorBoundaryAlert>}\n                        </>\n                      )}\n                      {showRichHistory && (\n                        <RichHistoryContainer\n                          width={width}\n                          exploreId={exploreId}\n                          onClose={this.toggleShowRichHistory}\n                        />\n                      )}\n                      {showQueryInspector && (\n                        <ExploreQueryInspector\n                          exploreId={exploreId}\n                          width={width}\n                          onClose={this.toggleShowQueryInspector}\n                          timeZone={timeZone}\n                        />\n                      )}\n                    </ErrorBoundaryAlert>\n                  </main>\n                );\n              }}\n            </AutoSizer>\n          </div>\n        )}\n      </CustomScrollbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state: StoreState, { exploreId }: ExploreProps) {\n  const explore = state.explore;\n  const { syncedTimes } = explore;\n  const item: ExploreItemState = explore[exploreId]!;\n  const timeZone = getTimeZone(state.user);\n  const {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    absoluteRange,\n    queryResponse,\n    showNodeGraph,\n    showFlameGraph,\n    loading,\n    graphStyle,\n  } = item;\n\n  return {\n    datasourceInstance,\n    datasourceMissing,\n    queryKeys,\n    queries,\n    isLive,\n    graphResult,\n    logsResult: logsResult ?? undefined,\n    absoluteRange,\n    queryResponse,\n    syncedTimes,\n    timeZone,\n    showLogs,\n    showMetrics,\n    showTable,\n    showTrace,\n    showNodeGraph,\n    showFlameGraph,\n    splitted: isSplit(state),\n    loading,\n    graphStyle,\n  };\n}\n\nconst mapDispatchToProps = {\n  changeSize,\n  changeGraphStyle,\n  modifyQueries,\n  scanStart,\n  scanStopAction,\n  setQueries,\n  updateTimeRange,\n  makeAbsoluteTime,\n  addQueryRow,\n  splitOpen,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport default withTheme2(connector(Explore));\n","import { css, cx } from '@emotion/css';\nimport memoizeOne from 'memoize-one';\nimport React from 'react';\nimport { connect, ConnectedProps } from 'react-redux';\n\nimport { ExploreUrlState, EventBusExtended, EventBusSrv, GrafanaTheme2, EventBus } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\nimport { Themeable2, withTheme2 } from '@grafana/ui';\nimport { config } from 'app/core/config';\nimport store from 'app/core/store';\nimport {\n  DEFAULT_RANGE,\n  ensureQueries,\n  queryDatasourceDetails,\n  getTimeRange,\n  getTimeRangeFromUrl,\n  lastUsedDatasourceKeyForOrgId,\n  parseUrlState,\n} from 'app/core/utils/explore';\nimport { MIXED_DATASOURCE_NAME } from 'app/plugins/datasource/mixed/MixedDataSource';\nimport { StoreState } from 'app/types';\nimport { ExploreId } from 'app/types/explore';\n\nimport { getDatasourceSrv } from '../plugins/datasource_srv';\nimport { getFiscalYearStartMonth, getTimeZone } from '../profile/state/selectors';\n\nimport Explore from './Explore';\nimport { initializeExplore, refreshExplore } from './state/explorePane';\nimport { lastSavedUrl, stateSave } from './state/main';\nimport { importQueries } from './state/query';\nimport { loadAndInitDatasource } from './state/utils';\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    explore: css`\n      display: flex;\n      flex: 1 1 auto;\n      flex-direction: column;\n      & + & {\n        border-left: 1px dotted ${theme.colors.border.medium};\n      }\n    `,\n    exploreSplit: css`\n      width: 50%;\n    `,\n  };\n};\n\ninterface OwnProps extends Themeable2 {\n  exploreId: ExploreId;\n  urlQuery: string;\n  split: boolean;\n  eventBus: EventBus;\n}\n\ninterface Props extends OwnProps, ConnectedProps<typeof connector> {}\n\n/**\n * This component is responsible for handling initialization of an Explore pane and triggering synchronization\n * of state based on URL changes and preventing any infinite loops.\n */\nclass ExplorePaneContainerUnconnected extends React.PureComponent<Props> {\n  el: HTMLDivElement | null = null;\n  exploreEvents: EventBusExtended;\n\n  constructor(props: Props) {\n    super(props);\n    this.exploreEvents = new EventBusSrv();\n    this.state = {\n      openDrawer: undefined,\n    };\n  }\n\n  async componentDidMount() {\n    const { initialized, exploreId, initialDatasource, initialQueries, initialRange, panelsState, orgId } = this.props;\n    const width = this.el?.offsetWidth ?? 0;\n    // initialize the whole explore first time we mount and if browser history contains a change in datasource\n    if (!initialized) {\n      let queriesDatasourceOverride = undefined;\n      let rootDatasourceOverride = undefined;\n      // if this is starting with no queries and an initial datasource exists (but is not mixed), look up the ref to use it (initial datasource can be a UID or name here)\n      if ((!initialQueries || initialQueries.length === 0) && initialDatasource) {\n        const isDSMixed =\n          initialDatasource === MIXED_DATASOURCE_NAME || initialDatasource.uid === MIXED_DATASOURCE_NAME;\n        if (!isDSMixed) {\n          const { instance } = await loadAndInitDatasource(orgId, initialDatasource);\n          queriesDatasourceOverride = instance.getRef();\n        }\n      }\n\n      let queries = await ensureQueries(initialQueries, queriesDatasourceOverride); // this will return an empty array if there are no datasources\n\n      const queriesDatasourceDetails = queryDatasourceDetails(queries);\n      if (!queriesDatasourceDetails.noneHaveDatasource) {\n        if (!queryDatasourceDetails(queries).allDatasourceSame) {\n          if (config.featureToggles.exploreMixedDatasource) {\n            rootDatasourceOverride = await getDatasourceSrv().get(MIXED_DATASOURCE_NAME);\n          } else {\n            // if we have mixed queries but the mixed datasource feature is not on, change the datasource to the first query that has one\n            const changeDatasourceUid = queries.find((query) => query.datasource?.uid)!.datasource!.uid;\n            if (changeDatasourceUid) {\n              rootDatasourceOverride = changeDatasourceUid;\n              const datasource = await getDatasourceSrv().get(changeDatasourceUid);\n              const datasourceInit = await getDatasourceSrv().get(initialDatasource);\n              await this.props.importQueries(exploreId, queries, datasourceInit, datasource);\n              await this.props.stateSave({ replace: true });\n              queries = this.props.initialQueries;\n            }\n          }\n        }\n      }\n\n      this.props.initializeExplore(\n        exploreId,\n        rootDatasourceOverride || queries[0]?.datasource || initialDatasource,\n        queries,\n        initialRange,\n        width,\n        this.exploreEvents,\n        panelsState\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    this.exploreEvents.removeAllListeners();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.refreshExplore(prevProps.urlQuery);\n  }\n\n  refreshExplore = (prevUrlQuery: string) => {\n    const { exploreId, urlQuery } = this.props;\n\n    // Update state from url only if it changed and only if the change wasn't initialised by redux to prevent any loops\n    if (urlQuery !== prevUrlQuery && urlQuery !== lastSavedUrl[exploreId]) {\n      this.props.refreshExplore(exploreId, urlQuery);\n    }\n  };\n\n  getRef = (el: HTMLDivElement) => {\n    this.el = el;\n  };\n\n  render() {\n    const { theme, split, exploreId, initialized, eventBus } = this.props;\n    const styles = getStyles(theme);\n    const exploreClass = cx(styles.explore, split && styles.exploreSplit);\n    return (\n      <div className={exploreClass} ref={this.getRef} data-testid={selectors.pages.Explore.General.container}>\n        {initialized && <Explore exploreId={exploreId} eventBus={eventBus} />}\n      </div>\n    );\n  }\n}\n\nconst getTimeRangeFromUrlMemoized = memoizeOne(getTimeRangeFromUrl);\n\nfunction mapStateToProps(state: StoreState, props: OwnProps) {\n  const urlState = parseUrlState(props.urlQuery);\n  const timeZone = getTimeZone(state.user);\n  const fiscalYearStartMonth = getFiscalYearStartMonth(state.user);\n\n  const { datasource, queries, range: urlRange, panelsState } = (urlState || {}) as ExploreUrlState;\n  const initialDatasource = datasource || store.get(lastUsedDatasourceKeyForOrgId(state.user.orgId));\n  const initialRange = urlRange\n    ? getTimeRangeFromUrlMemoized(urlRange, timeZone, fiscalYearStartMonth)\n    : getTimeRange(timeZone, DEFAULT_RANGE, fiscalYearStartMonth);\n\n  return {\n    initialized: state.explore[props.exploreId]?.initialized,\n    initialDatasource,\n    initialQueries: queries,\n    initialRange,\n    panelsState,\n    orgId: state.user.orgId,\n  };\n}\n\nconst mapDispatchToProps = {\n  initializeExplore,\n  refreshExplore,\n  importQueries,\n  stateSave,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\nexport const ExplorePaneContainer = withTheme2(connector(ExplorePaneContainerUnconnected));\n","import { css } from '@emotion/css';\nimport React, { useEffect, useRef } from 'react';\n\nimport { locationService } from '@grafana/runtime';\nimport { ErrorBoundaryAlert, usePanelContext } from '@grafana/ui';\nimport { useGrafana } from 'app/core/context/GrafanaContext';\nimport { useAppNotification } from 'app/core/copy/appNotification';\nimport { useNavModel } from 'app/core/hooks/useNavModel';\nimport { GrafanaRouteComponentProps } from 'app/core/navigation/types';\nimport { isTruthy } from 'app/core/utils/types';\nimport { useDispatch, useSelector } from 'app/types';\nimport { ExploreId, ExploreQueryParams } from 'app/types/explore';\n\nimport { Branding } from '../../core/components/Branding/Branding';\nimport { useCorrelations } from '../correlations/useCorrelations';\n\nimport { ExploreActions } from './ExploreActions';\nimport { ExplorePaneContainer } from './ExplorePaneContainer';\nimport { lastSavedUrl, resetExploreAction, saveCorrelationsAction } from './state/main';\n\nconst styles = {\n  pageScrollbarWrapper: css`\n    width: 100%;\n    flex-grow: 1;\n    min-height: 0;\n  `,\n  exploreWrapper: css`\n    display: flex;\n    height: 100%;\n  `,\n};\n\nfunction Wrapper(props: GrafanaRouteComponentProps<{}, ExploreQueryParams>) {\n  useExplorePageTitle();\n  const dispatch = useDispatch();\n  const queryParams = props.queryParams;\n  const { keybindings, chrome, config } = useGrafana();\n  const navModel = useNavModel('explore');\n  const { get } = useCorrelations();\n  const { warning } = useAppNotification();\n  const panelCtx = usePanelContext();\n  const eventBus = useRef(panelCtx.eventBus.newScopedBus('explore', { onlyLocal: false }));\n\n  useEffect(() => {\n    //This is needed for breadcrumbs and topnav.\n    //We should probably abstract this out at some point\n    chrome.update({ sectionNav: navModel.node });\n  }, [chrome, navModel]);\n\n  useEffect(() => {\n    keybindings.setupTimeRangeBindings(false);\n  }, [keybindings]);\n\n  useEffect(() => {\n    if (!config.featureToggles.correlations) {\n      dispatch(saveCorrelationsAction([]));\n    } else {\n      get.execute();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (get.value) {\n      dispatch(saveCorrelationsAction(get.value));\n    } else if (get.error) {\n      dispatch(saveCorrelationsAction([]));\n      warning(\n        'Could not load correlations.',\n        'Correlations data could not be loaded, DataLinks may have partial data.'\n      );\n    }\n  }, [get.value, get.error, dispatch, warning]);\n\n  useEffect(() => {\n    lastSavedUrl.left = undefined;\n    lastSavedUrl.right = undefined;\n\n    // timeSrv (which is used internally) on init reads `from` and `to` param from the URL and updates itself\n    // using those value regardless of what is passed to the init method.\n    // The updated value is then used by Explore to get the range for each pane.\n    // This means that if `from` and `to` parameters are present in the URL,\n    // it would be impossible to change the time range in Explore.\n    // We are only doing this on mount for 2 reasons:\n    // 1: Doing it on update means we'll enter a render loop.\n    // 2: when parsing time in Explore (before feeding it to timeSrv) we make sure `from` is before `to` inside\n    //    each pane state in order to not trigger un URL update from timeSrv.\n    const searchParams = locationService.getSearchObject();\n    if (searchParams.from || searchParams.to) {\n      locationService.partial({ from: undefined, to: undefined }, true);\n    }\n\n    return () => {\n      // Cleaning up Explore state so that when navigating back to Explore it starts from a blank state\n      dispatch(resetExploreAction());\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- dispatch is stable, doesn't need to be in the deps array\n  }, []);\n\n  const hasSplit = Boolean(queryParams.left) && Boolean(queryParams.right);\n\n  return (\n    <div className={styles.pageScrollbarWrapper}>\n      <ExploreActions exploreIdLeft={ExploreId.left} exploreIdRight={ExploreId.right} />\n      <div className={styles.exploreWrapper}>\n        <ErrorBoundaryAlert style=\"page\">\n          <ExplorePaneContainer\n            split={hasSplit}\n            exploreId={ExploreId.left}\n            urlQuery={queryParams.left}\n            eventBus={eventBus.current}\n          />\n        </ErrorBoundaryAlert>\n        {hasSplit && (\n          <ErrorBoundaryAlert style=\"page\">\n            <ExplorePaneContainer\n              split={hasSplit}\n              exploreId={ExploreId.right}\n              urlQuery={queryParams.right}\n              eventBus={eventBus.current}\n            />\n          </ErrorBoundaryAlert>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst useExplorePageTitle = () => {\n  const navModel = useNavModel('explore');\n  const datasources = useSelector((state) =>\n    [state.explore.left.datasourceInstance?.name, state.explore.right?.datasourceInstance?.name].filter(isTruthy)\n  );\n\n  document.title = `${navModel.main.text} - ${datasources.join(' | ')} - ${Branding.AppTitle}`;\n};\n\nexport default Wrapper;\n","import { ExploreId, StoreState } from 'app/types';\n\nexport const isSplit = (state: StoreState) => Boolean(state.explore[ExploreId.left] && state.explore[ExploreId.right]);\n\nexport const getExploreItemSelector = (exploreId: ExploreId) => (state: StoreState) => state.explore[exploreId];\n","export enum InspectTab {\n  Data = 'data',\n  Meta = 'meta', // When result metadata exists\n  Error = 'error',\n  Stats = 'stats',\n  JSON = 'json',\n  Query = 'query',\n  Actions = 'actions', // ALPHA!\n  Help = 'help', // get info required for support+debugging\n}\n","import { useEffect, useRef } from 'react';\nvar useInterval = function (callback, delay) {\n    var savedCallback = useRef(function () { });\n    useEffect(function () {\n        savedCallback.current = callback;\n    });\n    useEffect(function () {\n        if (delay !== null) {\n            var interval_1 = setInterval(function () { return savedCallback.current(); }, delay || 0);\n            return function () { return clearInterval(interval_1); };\n        }\n        return undefined;\n    }, [delay]);\n};\nexport default useInterval;\n","function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){var r;return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!(null===(r=n.constructor)||void 0===r?void 0:r[L])||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return\"production\"!==process.env.NODE_ENV&&f(r),en.get(r,n)},set:function(r){var t=this[Q];\"production\"!==process.env.NODE_ENV&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},R:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=R(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.D.set(n,!0),t.o.set(n,r),t.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.D.set(n,!1):r.D.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(r){n.D.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=R(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{N:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,D as current,J as enableAllPlugins,N as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,r as isDraft,t as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n"],"names":["isTruthy","value","Boolean","toEnrichedCorrelationData","sourceUID","targetUID","correlation","source","getDataSourceSrv","getInstanceSettings","target","toEnrichedCorrelationsData","correlations","map","getData","response","data","useCorrelations","backend","useGrafana","getInfo","get","useAsyncFn","lastValueFrom","fetch","url","method","showErrorAlert","then","createInfo","create","post","removeInfo","remove","uid","delete","updateInfo","update","patch","execute","displayOverrideRef","isHideSeriesOverride","isSystemOverrideWithRef","seriesVisibilityConfigFactory","label","mode","fieldConfig","overrides","displayName","currentIndex","findIndex","SeriesVisibilityChangeMode","override","createOverride","getNamesOfHiddenFields","getDisplayNames","overridesCopy","Array","from","current","splice","existing","getExistingDisplayNames","nameOfHiddenFields","length","filter","el","indexOf","createExtendedOverride","allFieldsAreExcluded","names","ByNamesMatcherMode","property","id","viz","legend","tooltip","__systemRef","matcher","FieldMatcherID","options","prefix","undefined","readOnly","properties","find","p","index","name","push","rule","isArray","excludeName","unique","Set","frame","field","fields","type","FieldType","getFieldDisplayName","add","fieldMatchers","ExploreActions","exploreIdLeft","exploreIdRight","actions","setActions","useState","query","useKBar","dispatch","useDispatch","splitted","useSelector","isSplit","useEffect","exploreSection","priority","Priority","actionsArr","keywords","perform","runQueries","section","splitClose","splitOpen","useRegisterActions","updateReducer","num","resolveHookState","nextState","currentState","useGetSet","initialState","state","useRef","useReducer","useMemo","newState","ExploreGraph","height","width","timeZone","absoluteRange","onChangeTime","loadingState","annotations","onHiddenSeriesChanged","splitOpenFn","graphStyle","tooltipDisplayMode","TooltipDisplayMode","anchorToZero","eventBus","theme","useTheme2","style","useStyles2","getStyles","showAllTimeSeries","setShowAllTimeSeries","structureRev","inc","incrementStructureRev","initialValue","max","min","init","console","error","Math","_a","setInternal","set","prevState","rState","delta","rDelta","dec","reset","rValue","useCounter","fieldConfigRegistry","createFieldConfigRegistry","getGraphFieldConfig","defaultGraphConfig","setFieldConfig","defaults","color","FieldColorModeId","custom","drawStyle","GraphDrawStyle","fillOpacity","pointSize","timeRange","dateTime","to","raw","styledFieldConfig","config","produce","draft","stacking","group","StackingMode","Error","applyGraphStyle","dataWithConfig","applyFieldOverrides","replaceVariables","hiddenFrames","forEach","hideFrom","every","identity","getFrameDisplayName","seriesToShow","slice","panelContext","sync","DashboardCursorSync","onSplitOpen","onToggleSeriesVisibility","panelOptions","sort","SortOrder","displayMode","LegendDisplayMode","showLegend","placement","calcs","PanelContext","className","cx","timeSeriesDisclaimer","Icon","disclaimerIcon","onClick","PanelRenderer","series","pluginId","title","onChangeTimeRange","css","spacing","colors","background","primary","warning","main","text","link","ALL_GRAPH_STYLE_OPTIONS","EXPLORE_GRAPH_STYLES","toUpperCase","replace","display","justifyContent","ExploreGraphLabel","props","onChangeGraphStyle","RadioButtonGroup","size","onChange","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","prototype","hasOwnProperty","call","__","this","constructor","__assign","assign","t","s","i","n","arguments","apply","rowSizeBase","top","left","cursor","colSizeBase","edgeBase","position","styles","right","bottom","topRight","bottomRight","bottomLeft","topLeft","Resizer","_super","_this","onMouseDown","e","onResizeStart","direction","onTouchStart","render","userSelect","replaceStyles","children","DEFAULT_SIZE","clamp","snap","round","hasDirection","dir","RegExp","test","isTouchEvent","event","touches","findClosestSnap","snapArray","snapGap","closestGapIndex","reduce","prev","curr","abs","gap","getStringSize","toString","endsWith","getPixelSize","parentSize","innerWidth","innerHeight","Number","definedProps","baseClassName","Resizable","ratio","resizable","parentLeft","parentTop","resizableLeft","resizableRight","resizableTop","resizableBottom","targetLeft","targetTop","appendBase","window","parent","parentNode","element","document","createElement","transform","flex","classList","appendChild","removeBase","base","removeChild","ref","c","isResizing","propsSize","original","x","y","backgroundStyle","backgroundColor","opacity","zIndex","flexBasis","bind","onMouseMove","onMouseUp","defineProperty","enumerable","configurable","ownerDocument","defaultView","defaultSize","orgWidth","offsetWidth","orgHeight","offsetHeight","orgPosition","getSize","key","getParentSize","wrapChanged","wrap","flexWrap","minWidth","minHeight","bindEvents","addEventListener","capture","passive","unbindEvents","removeEventListener","componentDidMount","computedStyle","getComputedStyle","setState","componentWillUnmount","createSizeForCssProperty","newSize","kind","calculateNewMaxFromBoundary","maxWidth","maxHeight","boundWidth","boundHeight","boundsByDirection","widthByDirection","heightByDirection","bounds","parent_1","isFinite","calculateNewSizeFromDirection","clientX","clientY","scale","resizeRatio","_b","lockAspectRatio","lockAspectRatioExtraHeight","lockAspectRatioExtraWidth","newWidth","newHeight","extraHeight","extraWidth","calculateNewSizeFromAspectRatio","computedMinWidth","computedMaxWidth","computedMinHeight","computedMaxHeight","extraMinWidth","extraMaxWidth","extraMinHeight","extraMaxHeight","lockedMinWidth","lockedMaxWidth","lockedMinHeight","lockedMaxHeight","setBoundingClientRect","parent_2","parentRect","getBoundingClientRect","targetRect","top_1","nativeEvent","isMouseEvent","parent_3","flexDirection","flexDir","startsWith","TouchEvent","preventDefault","stopPropagation","calculateNewMax","_c","boundaryMax","grid","newGridWidth","newGridHeight","flushSync","onResize","onResizeStop","updateSize","renderResizer","enable","handleStyles","handleClasses","handleWrapperStyle","handleWrapperClass","handleComponent","resizers","keys","extendsProps","acc","sizeStyle","boxSizing","flexShrink","Wrapper","as","defaultProps","drawerSlide","keyframes","components","horizontalDrawer","defaultHeight","stylesFactory","container","border","weak","shadows","z3","navbarFixed","drawerActive","rzHandle","secondary","shade","ExploreDrawer","drawerWidth","mapDispatchToProps","connect","exploreId","item","explore","loading","queryResponse","onClose","dataFrames","reportInteraction","statsTab","icon","content","InspectStatsTab","request","timezone","jsonTab","InspectJSONTab","dataTab","InspectDataTab","isLoading","withTransforms","withFieldConfig","app","CoreApp","tabs","QueryInspector","onRefreshQuery","errorTab","InspectErrorTab","TabbedContainer","closeIconTooltip","TimeSyncButton","isSynced","Tooltip","ToolbarButton","variant","ExploreTimeControls","Component","range","getShiftedTimeRange","dateTimeForTimeZone","onMoveTimePicker","adjustedFrom","dateMath","adjustedTo","timeRangeFrom","timeRangeTo","getZoomedTimeRange","fiscalYearStartMonth","syncedTimes","onChangeTimeSync","hideText","onChangeTimeZone","onChangeFiscalYearStartMonth","timeSyncButton","timePickerCommonProps","onMoveBackward","onMoveBack","onMoveForward","onZoom","TimePickerWithHistory","widthOverride","onChangeTimePicker","LiveTailButton","start","pause","resume","isLive","isPaused","stop","buttonVariant","onClickMain","ButtonGroup","iconOnly","CSSTransition","mountOnEnter","unmountOnExit","timeout","in","classNames","enter","stopButtonEnter","enterActive","stopButtonEnterActive","exit","stopButtonExit","exitActive","stopButtonExitActive","LiveTailControls","controls","useCallback","setPausedStateAction","changeRefreshInterval","RefreshPicker","useLiveTailControls","AddToDashboard","lazy","default","UnConnectedExploreToolbar","PureComponent","async","changeDatasource","dsSettings","importQueries","cancelQueries","syncTimes","createAndCopyShortLink","location","href","split","origin","closeSplit","showSmallTimePicker","refreshInterval","refreshPickerTooltip","refreshPickerText","refreshPickerWidth","onIntervalChanged","onChangeRefreshInterval","intervals","getTimeSrv","getValidIntervals","defaultIntervals","onRefresh","onRunQuery","noIntervalPicker","hasLiveOption","containerWidth","showExploreToDashboard","contextSrv","AccessControlAction","onCloseSplitView","onOpenSplitView","disabled","Suspense","fallback","renderRefreshPicker","SetInterval","func","interval","datasourceType","datasourceMissing","topOfViewRef","showSmallDataSourcePicker","isTopnav","getDashNav","DashNavButton","onCopyShortLink","getDataSourcePicker","DataSourcePicker","mixed","onChangeDatasource","datasourceRef","hideTextValue","topNavActions","ToolbarButtonRow","alignment","renderActions","toolbarLeftItems","ExploreId","toolbarLeftItemsTopNav","AppChromeUpdate","A","PageToolbar","pageIcon","leftItems","updateTimeZoneForSession","updateFiscalYearStartMonthForSession","ExploreToolbar","exploreItem","datasourceInstance","meta","streaming","getRef","getTimeZone","user","getFiscalYearStartMonth","connector","FlameGraphExploreContainer","FlameGraphContainer","panel","borderColor","shape","borderRadius","ElapsedTime","resetKey","humanize","elapsed","setElapsed","useInterval","Time","timeInMs","LiveLogs","super","React","onPause","scrollTop","clientHeight","scrollHeight","currentTarget","logRowsToRender","rowsToRender","logRows","static","nextProps","onResume","logsRowsLive","typography","fontFamilyMonospace","bodySmall","fontSize","logsRowFade","tinycolor","info","transparent","setAlpha","logsRowsIndicator","h6","button","fullWidth","logsRow","logsRowLocalTime","logsRowMessage","getLogRowStyles","onScroll","scrollContainerRef","row","dateTimeFormat","timeEpochMs","hasAnsi","LogMessageAnsi","entry","liveEndDiv","scrollTo","Button","stopLive","LiveLogsWithTheme","withTheme2","metaContainer","metaItem","metaLabel","fontWeightMedium","metaValue","MetaInfoItem","memo","MetaInfoText","metaItems","LogsMetaRow","dedupStrategy","dedupCount","showDetectedFields","clearDetectedFields","hasUnescapedContent","forceEscape","onEscapeNewlines","logsMetaItem","LogsDedupStrategy","LogsMetaKind","some","r","MAX_CHARACTERS","renderMetaItem","downloadLogsModelAsTxt","rows","LogLabels","labels","LogsNavigationPages","pages","currentPageIndex","oldestLogsFirst","changeTime","formatTime","time","format","systemDateFormats","createPageContent","page","Spinner","logsRange","CustomScrollbar","autoHide","pagesWrapper","pagesContainer","pageType","pageNumber","queryRange","line","selectedBg","selectedText","clearButtonStyles","v1","sm","LogsNavigation","logsSortOrder","scrollToTopLogs","visibleRange","queries","clearCache","addResultsToCache","setPages","setCurrentPageIndex","expectedQueriesRef","expectedRangeRef","rangeSpanRef","LogsSortOrder","onFirstPage","onLastPage","newPage","newPages","isEqual","a","sortPages","olderLogsButton","navButton","indexChange","navButtonContent","newerLogsButton","navContainer","scrollToTopButton","navContainerHeight","flags","topnav","TOP_BAR_LEVEL_HEIGHT","ErrorAlert","isOpen","setIsOpen","message","showButton","Alert","severity","LogsVolumePanel","onUpdateTimeRange","onLoadLogsVolume","parseInt","logLinesBased","logLinesBasedVisibleRange","fullRangeData","logsVolumeData","createVisualisationData","logLinesBasedData","logLinesBasedDataVisibleRange","LogsVolumePanelContent","extraInfo","LoadingState","zoomRatio","selectedTimeRange","dataRange","logsLevelZoomRatio","InlineField","oldInfoText","Collapse","contentContainer","extraInfoContainer","styleOverridesForStickyNavigation","UnthemedLogs","createRef","showLabels","store","SETTINGS_KEYS","showTime","wrapLogMessage","prettifyLogMessage","hiddenLogLevels","isFlipping","publish","DataHoverEvent","point","DataHoverClearEvent","flipOrderTimer","setTimeout","newSortOrder","cancelFlippingTimer","deduplicationType","checked","hiddenRawLevels","level","LogLevel","onSetLogsVolumeEnabled","onStartScanning","onStopScanning","concat","k","memoizeOne","dedupedRows","dedupLogRows","sum","duplicates","filterLogLevels","firstTimeStamp","lastTimeStamp","topLogsRef","scrollIntoView","logsVolumeEventBus","newScopedBus","onlyLocal","clearTimeout","logsMeta","logsSeries","logsVolumeEnabled","loadLogsVolumeData","onClickFilterLabel","onClickFilterOutLabel","scanning","scanRange","showContextToggle","getFieldLinks","logsQueries","scrollElement","hasData","checkUnescapedContent","filteredLogs","filterRows","dedupRows","navigationRange","createNavigationRange","scanText","rangeUtil","collapsible","onToggle","onToggleLogsVolumeCollapse","onToggleLogLevel","logOptions","InlineFieldRow","horizontalInlineLabel","horizontalInlineSwitch","onChangeLabels","onChangeWrapLogMessage","onChangePrettifyLogMessage","values","dedupType","capitalize","description","LogsDedupDescription","onChangeDedup","radioButtons","onChangeLogsSortOrder","logsSection","LogRows","deduplicatedRows","getRowContext","enableLogDetails","onClickShowDetectedField","showDetectedField","onClickHideDetectedField","hideDetectedField","onLogRowHover","noData","fill","onClickScan","onClickStopScan","Logs","medium","headerButton","logsEnter","logsEnterActive","logsExit","logsExitActive","LogsCrossFadeTransition","visible","transitionDuration","LogsContainer","updateTimeRange","hasLogsContextSupport","q","refId","dataFrame","datasource","getLogRowContext","rowIndex","getFieldLinksForExplore","enabled","setLogsVolumeEnabled","logsResult","logsVolumeDataProvider","NoData","PanelContainer","wrapper","h2","NoDataSourceCallToAction","canCreateDataSource","footer","rel","ctaElement","cardClassName","breakpoints","lg","CallToActionCard","callToActionElement","warningText","NodeGraphContainer","withTraceView","getLinks","useLinks","frames","nodes","useCategorizeFrames","open","toggleOpen","useToggle","windowHeight","useWindowSize","containerRef","setTop","countWarning","Badge","expanded","NodeGraph","QueryRows","getQueries","getDatasourceInstanceSettings","getQueryResponse","getHistory","getEventBridge","exploreItemSelector","getExploreItemSelector","createSelector","history","eventBridge","getDatasourceSrv","makeSelectors","onRunQueries","newQueries","changeQueriesAction","onAddQuery","getNextRefIdChar","QueryEditorRows","onDatasourceChange","ds","queryDatasource","targetDS","onMixedDataSourceChange","onQueriesChange","onQueryCopied","onQueryRemoved","onQueryToggled","queryStatus","queryEnabled","FadeIn","defaultStyle","transition","duration","transitionStyles","exited","entering","entered","exiting","Transition","onExited","ErrorContainer","queryError","showError","topSpacing","ResponseErrorContainer","deleteHistoryItem","commentHistoryItem","starHistoryItem","setQueries","rightColumnWidth","rightColumnContentWidth","cardColor","queryCard","palette","orange","cardRow","datasourceContainer","queryActionButtons","queryContainer","queryRow","updateCommentContainer","comment","fontWeightRegular","commentButtonRow","textArea","runButton","dsImg","isRemoved","activeUpdateComment","setActiveUpdateComment","setComment","queryDsInstance","setQueryDsInstance","datasourceUid","getQueryDsInstance","onUpdateComment","queryHistoryEnabled","onCancelUpdateComment","updateComment","TextArea","placeholder","IconButton","queriesToCopy","createQueryText","join","copyStringToClipboard","notifyApp","createSuccessNotification","createUrlFromRichHistory","performDelete","queryId","starred","appEvents","ShowConfirmModalEvent","yesText","onConfirm","iconType","newValue","onKeyDown","keyEvent","shiftKey","ctrlKey","src","datasourceName","queryText","queriesToRun","differentDataSource","RichHistoryQueriesTab","totalQueries","richHistorySearchFilters","updateFilters","clearRichHistoryResults","loadMoreRichHistory","richHistorySettings","activeDatasourceInstance","bgColor","isLight","gray5","dark4","labelSlider","containerContent","containerSlider","fixedSlider","slider","selectors","filterInput","multiselect","sessionName","heading","h4","fontWeightLight","listOfDatasources","createDatasourcesList","datasourceFilters","activeDatasourceOnly","lastUsedDatasourceFilters","filters","search","sortOrder","retentionPeriod","mappedQueriesToHeadings","mapQueriesToHeadings","sortOrderOptions","getSortOrderOptions","partialResults","mapNumbertoTimeInSlider","RangeSlider","tooltipAlwaysVisible","orientation","formatTooltipResult","reverse","onAfterChange","option","FilterInput","Select","order","idx","imgUrl","spaceBetween","input","bold","fontWeightBold","bottomMargin","retentionPeriodOptions","RichHistorySettingsTab","starredTabAsFirstTab","onChangeRetentionPeriod","toggleStarredTabAsFirstTab","toggleactiveDatasourceOnly","deleteRichHistory","selectedOption","v","supportedFeatures","changeRetention","Field","MAX_HISTORY_ITEMS","onlyActiveDataSource","clearHistory","RichHistoryStarredTab","Tabs","availableFilters","includes","UnThemedRichHistory","settingsToUpdate","updateHistorySettings","filtersToUpdate","updateHistorySearchFilters","loadRichHistory","debounce","updateSettings","componentDidUpdate","prevProps","snapshot","richHistory","richHistoryTotal","firstTab","RichHistory","Starred","Settings","toggleActiveDatasourceOnly","defaultTab","initRichHistory","setHeight","_e","_dir","SecondaryActions","containerMargin","addQueryRowButtonHidden","onClickAddQueryRowButton","addQueryRowButtonDisabled","richHistoryRowButtonHidden","richHistoryButtonActive","onClickRichHistoryButton","queryInspectorButtonActive","onClickQueryInspectorButton","loadingInState","tableResult","TableContainer","getMainFrame","df","parentRowIndex","getTableHeight","mainFrame","onCellFilterAdded","ariaLabel","tableWidth","PANEL_BORDER","valueRowIndex","subFrames","Table","subData","TraceViewContainer","traceProp","transformDataFrames","setSearch","spanFindMatches","useSearch","spans","focusedSpanIdForSearch","setFocusedSpanIdForSearch","searchBarSuffix","setSearchBarSuffix","TracePageSearchBar","navigable","searchValue","TraceView","topOfViewRefType","TopOfViewRefType","Explore","rawRange","operator","FILTER_FOR_OPERATOR","FILTER_OUT_OPERATOR","onModifyQueries","queryKeys","addQueryRow","makeAbsoluteTime","action","modifyQueries","modification","modifyQuery","changeSize","scanStart","scanStopAction","changeGraphStyle","openDrawer","panelType","MIXED_DATASOURCE_NAME","tracking","getNodeGraphDataFrames","graphEventBus","logsEventBus","absoluteTimeUnsubsciber","AbsoluteTimeEvent","onMakeAbsoluteTime","unsubscribe","renderEmptyState","exploreContainerStyles","renderNoData","renderGraphPanel","graphResult","showFlameGraph","renderTablePanel","renderLogsPanel","renderNodeGraphPanel","showTrace","memoizedGetNodeGraphDataFrames","renderFlameGraphPanel","flameGraphFrames","renderTraceViewPanel","preferredVisualisationType","showMetrics","showTable","showLogs","showNodeGraph","exploreMain","exploreContainer","exploreContainerTopnav","showPanels","showRichHistory","queryHistoryAvailable","showQueryInspector","showNoData","logsFrames","graphFrames","nodeGraphFrames","tableFrames","traceFrames","testId","autoHeightMin","scrollRefCallback","toggleShowRichHistory","toggleShowQueryInspector","disableHeight","ErrorBoundary","ExplorePaneContainerUnconnected","prevUrlQuery","urlQuery","lastSavedUrl","refreshExplore","exploreEvents","EventBusSrv","initialized","initialDatasource","initialQueries","initialRange","panelsState","orgId","queriesDatasourceOverride","rootDatasourceOverride","instance","loadAndInitDatasource","ensureQueries","queryDatasourceDetails","noneHaveDatasource","allDatasourceSame","changeDatasourceUid","datasourceInit","stateSave","initializeExplore","removeAllListeners","exploreSplit","exploreClass","getTimeRangeFromUrlMemoized","getTimeRangeFromUrl","urlState","parseUrlState","urlRange","lastUsedDatasourceKeyForOrgId","getTimeRange","DEFAULT_RANGE","ExplorePaneContainer","pageScrollbarWrapper","exploreWrapper","useExplorePageTitle","navModel","useNavModel","datasources","Branding","queryParams","keybindings","chrome","useAppNotification","panelCtx","usePanelContext","sectionNav","node","setupTimeRangeBindings","featureToggles","saveCorrelationsAction","searchParams","locationService","resetExploreAction","hasSplit","InspectTab","callback","delay","savedCallback","interval_1","setInterval","clearInterval","Q","getPrototypeOf","Function","Z","L","o","nn","u","has","f","X","Map","l","rn","writable","clear","h","freeze","isFrozen","tn","_","U","j","O","g","S","w","m","P","M","H","I","R","D","F","z","getOwnPropertyDescriptor","E","N","T","C","en","on","Proxy","revocable","revoke","proxy","J","K","G","W","Symbol","B","Reflect","for","iterator","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","getOwnPropertyDescriptors","deleteProperty","un","Promise","produceWithPatches","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","path","op","$","an","fn"],"sourceRoot":""}