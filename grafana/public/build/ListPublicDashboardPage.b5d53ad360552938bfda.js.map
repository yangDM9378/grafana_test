{"version":3,"file":"ListPublicDashboardPage.b5d53ad360552938bfda.js","mappings":"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","sources":["webpack://grafana/./public/app/features/manage-dashboards/components/PublicDashboardListTable/PublicDashboardListTable.tsx","webpack://grafana/./public/app/features/manage-dashboards/PublicDashboardListPage.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport { GrafanaTheme2 } from '@grafana/data/src';\nimport { selectors as e2eSelectors } from '@grafana/e2e-selectors/src';\nimport { Link, ButtonGroup, LinkButton, Icon, Tag, useStyles2, Tooltip, useTheme2, Spinner } from '@grafana/ui/src';\nimport { Page } from 'app/core/components/Page/Page';\nimport { getConfig } from 'app/core/config';\nimport { contextSrv } from 'app/core/services/context_srv';\nimport { useListPublicDashboardsQuery } from 'app/features/dashboard/api/publicDashboardApi';\nimport { isOrgAdmin } from 'app/features/plugins/admin/permissions';\nimport { AccessControlAction } from 'app/types';\n\nimport { ListPublicDashboardResponse } from '../../types';\n\nimport { DeletePublicDashboardButton } from './DeletePublicDashboardButton';\n\nexport const viewPublicDashboardUrl = (accessToken: string): string =>\n  `${getConfig().appUrl}public-dashboards/${accessToken}`;\n\nexport const PublicDashboardListTable = () => {\n  const { width } = useWindowSize();\n  const isMobile = width <= 480;\n  const theme = useTheme2();\n  const styles = useStyles2(() => getStyles(theme, isMobile));\n\n  const { data: publicDashboards, isLoading, isFetching } = useListPublicDashboardsQuery();\n\n  const selectors = e2eSelectors.pages.PublicDashboards;\n  const hasWritePermissions = contextSrv.hasAccess(AccessControlAction.DashboardsPublicWrite, isOrgAdmin());\n  const responsiveSize = isMobile ? 'sm' : 'md';\n\n  return (\n    <Page.Contents isLoading={isLoading}>\n      <div className=\"page-action-bar\">\n        <table className=\"filter-table\">\n          <thead>\n            <tr>\n              <th className={styles.nameTh}>Name</th>\n              <th>Status</th>\n              <th className={styles.fetchingSpinner}>{isFetching && <Spinner />}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {publicDashboards?.map((pd: ListPublicDashboardResponse) => {\n              const isOrphaned = !pd.dashboardUid;\n              return (\n                <tr key={pd.uid}>\n                  <td className={styles.titleTd}>\n                    <Tooltip\n                      content={!isOrphaned ? pd.title : 'The linked dashboard has already been deleted'}\n                      placement=\"top\"\n                    >\n                      {!isOrphaned ? (\n                        <Link className={styles.link} href={`/d/${pd.dashboardUid}`}>\n                          {pd.title}\n                        </Link>\n                      ) : (\n                        <div className={styles.orphanedTitle}>\n                          <p>Orphaned public dashboard</p>\n                          <Icon name=\"info-circle\" className={styles.orphanedInfoIcon} />\n                        </div>\n                      )}\n                    </Tooltip>\n                  </td>\n                  <td>\n                    <Tag\n                      name={pd.isEnabled ? 'enabled' : 'disabled'}\n                      colorIndex={isOrphaned ? 9 : pd.isEnabled ? 20 : 15}\n                    />\n                  </td>\n                  <td>\n                    <ButtonGroup className={styles.buttonGroup}>\n                      <LinkButton\n                        href={viewPublicDashboardUrl(pd.accessToken)}\n                        fill=\"text\"\n                        size={responsiveSize}\n                        title={pd.isEnabled ? 'View public dashboard' : 'Public dashboard is disabled'}\n                        target=\"_blank\"\n                        disabled={!pd.isEnabled || isOrphaned}\n                        data-testid={selectors.ListItem.linkButton}\n                      >\n                        <Icon size={responsiveSize} name=\"external-link-alt\" />\n                      </LinkButton>\n                      <LinkButton\n                        fill=\"text\"\n                        size={responsiveSize}\n                        href={`/d/${pd.dashboardUid}?shareView=share`}\n                        title=\"Configure public dashboard\"\n                        disabled={isOrphaned}\n                        data-testid={selectors.ListItem.configButton}\n                      >\n                        <Icon size={responsiveSize} name=\"cog\" />\n                      </LinkButton>\n                      {hasWritePermissions && (\n                        <DeletePublicDashboardButton\n                          variant=\"primary\"\n                          fill=\"text\"\n                          data-testid={selectors.ListItem.trashcanButton}\n                          publicDashboard={pd}\n                          loader={<Spinner />}\n                        >\n                          <Icon size={responsiveSize} name=\"trash-alt\" />\n                        </DeletePublicDashboardButton>\n                      )}\n                    </ButtonGroup>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Page.Contents>\n  );\n};\n\nfunction getStyles(theme: GrafanaTheme2, isMobile: boolean) {\n  return {\n    fetchingSpinner: css`\n      display: flex;\n      justify-content: end;\n    `,\n    link: css`\n      color: ${theme.colors.primary.text};\n      text-decoration: underline;\n      margin-right: ${theme.spacing()};\n    `,\n    nameTh: css`\n      width: 20%;\n    `,\n    titleTd: css`\n      max-width: 0;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    `,\n    buttonGroup: css`\n      justify-content: ${isMobile ? 'space-between' : 'end'};\n    `,\n    orphanedTitle: css`\n      display: flex;\n      align-items: center;\n      gap: ${theme.spacing(1)};\n\n      p {\n        margin: ${theme.spacing(0)};\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    `,\n    orphanedInfoIcon: css`\n      color: ${theme.colors.text.link};\n    `,\n  };\n}\n","import React from 'react';\n\nimport { Page } from 'app/core/components/Page/Page';\n\nimport { PublicDashboardListTable } from './components/PublicDashboardListTable/PublicDashboardListTable';\n\nexport const ListPublicDashboardPage = ({}) => {\n  return (\n    <Page navId=\"dashboards/public\">\n      <PublicDashboardListTable />\n    </Page>\n  );\n};\n\nexport default ListPublicDashboardPage;\n"],"names":["PublicDashboardListTable","width","useWindowSize","isMobile","theme","useTheme2","styles","useStyles2","fetchingSpinner","css","link","colors","primary","text","spacing","nameTh","titleTd","buttonGroup","orphanedTitle","orphanedInfoIcon","getStyles","data","publicDashboards","isLoading","isFetching","useListPublicDashboardsQuery","selectors","e2eSelectors","hasWritePermissions","contextSrv","AccessControlAction","isOrgAdmin","responsiveSize","Page","className","Spinner","map","pd","isOrphaned","dashboardUid","Tooltip","content","title","placement","Icon","name","Link","href","Tag","isEnabled","colorIndex","ButtonGroup","accessToken","getConfig","appUrl","fill","size","target","disabled","ListItem","linkButton","configButton","DeletePublicDashboardButton","variant","trashcanButton","publicDashboard","loader","uid","ListPublicDashboardPage","navId"],"sourceRoot":""}